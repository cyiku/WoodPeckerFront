{"version":3,"sources":["../static/js/LineReact.cb314362.chunk.js","../node_modules/zrender/lib/mixin/Eventful.js","../node_modules/zrender/lib/tool/color.js","../node_modules/echarts/lib/util/symbol.js","../node_modules/echarts/lib/data/helper/completeDimensions.js","../node_modules/echarts/lib/lang.js","../node_modules/echarts/lib/CoordinateSystem.js","../node_modules/zrender/lib/core/PathProxy.js","../node_modules/echarts/lib/util/throttle.js","../node_modules/zrender/lib/container/Group.js","../node_modules/zrender/lib/config.js","../node_modules/echarts/lib/model/mixin/makeStyleMapper.js","../node_modules/echarts/lib/view/Chart.js","../node_modules/echarts/lib/data/DataDiffer.js","../node_modules/echarts/lib/scale/Scale.js","../node_modules/echarts/lib/component/axisPointer/modelHelper.js","../node_modules/echarts/lib/chart/helper/createListFromArray.js","../node_modules/echarts/lib/coord/Axis.js","../node_modules/zrender/lib/graphic/Displayable.js","../node_modules/zrender/lib/graphic/Gradient.js","../node_modules/echarts/lib/scale/Interval.js","../node_modules/echarts/lib/component/axis/AxisBuilder.js","../node_modules/echarts/lib/component/axis/AxisView.js","../node_modules/zrender/lib/core/log.js","../node_modules/zrender/lib/core/timsort.js","../node_modules/zrender/lib/graphic/Image.js","../node_modules/zrender/lib/graphic/helper/image.js","../node_modules/echarts/lib/util/component.js","../node_modules/echarts/lib/coord/axisModelCommonMixin.js","../node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","../node_modules/echarts/lib/component/dataZoom/helper.js","../node_modules/echarts/lib/component/dataZoom/DataZoomView.js","../node_modules/zrender/lib/zrender.js","../node_modules/zrender/lib/graphic/helper/text.js","../node_modules/echarts/lib/component/axisPointer.js","../node_modules/echarts/lib/component/axisPointer/viewHelper.js","../node_modules/zrender/lib/mixin/Transformable.js","../node_modules/zrender/lib/core/bbox.js","../node_modules/zrender/lib/graphic/Text.js","../node_modules/echarts/lib/view/Component.js","../node_modules/echarts/lib/component/helper/sliderMove.js","../node_modules/echarts/lib/visual/symbol.js","../node_modules/zrender/lib/core/guid.js","../node_modules/zrender/lib/Element.js","../node_modules/zrender/lib/animation/Animator.js","../node_modules/zrender/lib/core/LRU.js","../node_modules/zrender/lib/graphic/Style.js","../node_modules/zrender/lib/graphic/Pattern.js","../node_modules/zrender/lib/animation/requestAnimationFrame.js","../node_modules/zrender/lib/graphic/helper/roundRect.js","../node_modules/zrender/lib/contain/util.js","../node_modules/zrender/lib/contain/windingLine.js","../node_modules/zrender/lib/graphic/helper/poly.js","../node_modules/echarts/lib/model/mixin/colorPalette.js","../node_modules/echarts/lib/scale/helper.js","../node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","../node_modules/echarts/lib/component/axisPointer/globalListener.js","../node_modules/echarts/lib/component/helper/listComponent.js","../node_modules/echarts/lib/component/dataZoom/history.js","../node_modules/echarts/lib/component/gridSimple.js","../node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","../node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","../node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","../node_modules/echarts/lib/component/axis/cartesianAxisHelper.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","../node_modules/echarts/lib/component/helper/BrushController.js","../node_modules/echarts/lib/component/helper/cursorHelper.js","../node_modules/echarts/lib/chart/helper/SymbolDraw.js","../node_modules/echarts/lib/chart/helper/Symbol.js","../node_modules/zrender/lib/graphic/mixin/RectText.js","../node_modules/zrender/lib/contain/line.js","../node_modules/zrender/lib/contain/quadratic.js","../node_modules/zrender/lib/graphic/LinearGradient.js","../node_modules/echarts/lib/export.js","../node_modules/echarts/lib/coord/geo/parseGeoJson.js","../node_modules/echarts/lib/coord/geo/Region.js","../node_modules/zrender/lib/contain/polygon.js","../node_modules/echarts/lib/component/tooltip.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/component/toolbox.js","../node_modules/echarts/lib/component/helper/interactionMutex.js","../node_modules/echarts/lib/component/helper/BrushTargetManager.js","../node_modules/echarts/lib/component/helper/brushHelper.js","../node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","../node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","../node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","../node_modules/echarts/lib/coord/axisModelCreator.js","../node_modules/zrender/lib/Handler.js","../node_modules/zrender/lib/mixin/Draggable.js","../node_modules/zrender/lib/Storage.js","../node_modules/zrender/lib/mixin/Animatable.js","../node_modules/zrender/lib/animation/Clip.js","../node_modules/zrender/lib/animation/easing.js","../node_modules/zrender/lib/Painter.js","../node_modules/zrender/lib/Layer.js","../node_modules/zrender/lib/animation/Animation.js","../node_modules/zrender/lib/dom/HandlerProxy.js","../node_modules/zrender/lib/core/GestureMgr.js","../node_modules/echarts/lib/model/Global.js","../node_modules/echarts/lib/model/mixin/lineStyle.js","../node_modules/echarts/lib/model/mixin/areaStyle.js","../node_modules/echarts/lib/model/mixin/textStyle.js","../node_modules/zrender/lib/tool/path.js","../node_modules/zrender/lib/contain/path.js","../node_modules/zrender/lib/contain/cubic.js","../node_modules/zrender/lib/contain/arc.js","../node_modules/zrender/lib/tool/transformPath.js","../node_modules/zrender/lib/graphic/shape/Circle.js","../node_modules/zrender/lib/graphic/shape/Sector.js","../node_modules/zrender/lib/graphic/shape/Ring.js","../node_modules/zrender/lib/graphic/shape/Polygon.js","../node_modules/zrender/lib/graphic/helper/smoothSpline.js","../node_modules/zrender/lib/graphic/helper/smoothBezier.js","../node_modules/zrender/lib/graphic/shape/Polyline.js","../node_modules/zrender/lib/graphic/shape/Rect.js","../node_modules/zrender/lib/graphic/shape/Line.js","../node_modules/zrender/lib/graphic/shape/BezierCurve.js","../node_modules/zrender/lib/graphic/shape/Arc.js","../node_modules/zrender/lib/graphic/CompoundPath.js","../node_modules/zrender/lib/graphic/RadialGradient.js","../node_modules/echarts/lib/model/mixin/itemStyle.js","../node_modules/echarts/lib/model/mixin/boxLayout.js","../node_modules/echarts/lib/model/globalDefault.js","../node_modules/echarts/lib/ExtensionAPI.js","../node_modules/echarts/lib/model/OptionManager.js","../node_modules/echarts/lib/preprocessor/backwardCompat.js","../node_modules/echarts/lib/preprocessor/helper/compatStyle.js","../node_modules/echarts/lib/visual/seriesColor.js","../node_modules/echarts/lib/loading/default.js","../node_modules/echarts/lib/helper.js","../node_modules/echarts/lib/scale/Ordinal.js","../node_modules/echarts/lib/scale/Time.js","../node_modules/echarts/lib/scale/Log.js","../node_modules/echarts/lib/component/axisPointer/axisTrigger.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","../node_modules/echarts/lib/component/tooltip/TooltipModel.js","../node_modules/echarts/lib/component/tooltip/TooltipView.js","../node_modules/echarts/lib/component/tooltip/TooltipContent.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/toolbox/ToolboxModel.js","../node_modules/echarts/lib/component/toolbox/ToolboxView.js","../node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","../node_modules/echarts/lib/component/toolbox/feature/MagicType.js","../node_modules/echarts/lib/component/toolbox/feature/DataView.js","../node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","../node_modules/echarts/lib/component/dataZoomSelect.js","../node_modules/echarts/lib/component/dataZoom/AxisProxy.js","../node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","../node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","../node_modules/echarts/lib/component/toolbox/feature/Restore.js","../node_modules/echarts/lib/layout/points.js","../node_modules/echarts/lib/coord/cartesian/Grid.js","../node_modules/echarts/lib/coord/cartesian/AxisModel.js","../node_modules/echarts/lib/chart/helper/labelHelper.js","../node_modules/echarts/lib/chart/line/poly.js","../node_modules/echarts/lib/coord/axisDefault.js","../node_modules/echarts/lib/chart/line.js","../node_modules/echarts/lib/chart/line/LineSeries.js","../node_modules/echarts/lib/chart/line/LineView.js","../node_modules/echarts/lib/chart/line/lineAnimationDiff.js","../node_modules/echarts/lib/processor/dataSample.js","../node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","../node_modules/echarts/lib/coord/cartesian/Cartesian.js","../node_modules/echarts/lib/coord/cartesian/Axis2D.js","../node_modules/echarts/lib/coord/cartesian/GridModel.js","../node_modules/echarts/lib/component/axis.js","../node_modules/echarts/lib/component/axis/CartesianAxisView.js","../node_modules/echarts/lib/component/grid.js","../node_modules/echarts/lib/component/legendScroll.js","../node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","../node_modules/echarts/lib/component/legend/ScrollableLegendView.js","../node_modules/echarts/lib/component/legend/scrollableLegendAction.js","Echarts/LineReact.js","../node_modules/zrender/lib/core/util.js","../node_modules/echarts/lib/echarts.js","../node_modules/echarts/lib/util/graphic.js","../node_modules/echarts/lib/util/number.js","../node_modules/echarts/lib/util/model.js","../node_modules/echarts/lib/config.js","../node_modules/zrender/lib/core/vector.js","../node_modules/echarts/lib/util/format.js","../node_modules/zrender/lib/core/env.js","../node_modules/zrender/lib/core/BoundingRect.js","../node_modules/zrender/lib/graphic/Path.js","../node_modules/echarts/lib/model/Model.js","../node_modules/echarts/lib/util/layout.js","../node_modules/echarts/lib/model/Component.js","../node_modules/echarts/lib/util/clazz.js","../node_modules/zrender/lib/contain/text.js","../node_modules/zrender/lib/core/matrix.js","../node_modules/echarts/lib/data/List.js","../node_modules/echarts/lib/coord/axisHelper.js","../node_modules/echarts/lib/component/toolbox/featureManager.js","../node_modules/zrender/lib/core/event.js","../node_modules/zrender/lib/core/curve.js","../node_modules/echarts/lib/model/Series.js"],"names":["webpackJsonp","1000","module","exports","arrySlice","Array","prototype","slice","Eventful","this","_$handlers","constructor","one","event","handler","context","_h","i","length","h","push","ctx","on","isSilent","off","newList","l","trigger","type","args","arguments","argLen","call","len","apply","splice","triggerWithContext","_default","1001","__webpack_require__","clampCssByte","Math","round","clampCssAngle","clampCssFloat","f","parseCssInt","str","charAt","parseFloat","parseInt","parseCssFloat","cssHueToRgb","m1","m2","lerpNumber","a","b","p","setRgba","out","r","g","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","parse","cached","get","replace","toLowerCase","kCSSColorTable","op","indexOf","ep","fname","substr","params","split","alpha","pop","hsla2rgba","iv","hsla","rgba","s","rgba2hsla","H","S","R","G","B","vMin","min","vMax","max","delta","L","deltaR","deltaG","deltaB","lift","color","level","colorArr","stringify","toHex","toString","fastLerp","normalizedValue","colors","value","leftIndex","floor","rightIndex","ceil","leftColor","rightColor","dv","lerp","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fastMapToColor","mapToColor","1002","symbolPathSetColor","innerColor","symbolStyle","style","symbolShape","shape","symbolType","stroke","__isEmptyBrush","fill","dirty","createSymbol","x","y","w","keepAspect","isEmpty","symbolPath","graphic","makeImage","BoundingRect","makePath","SymbolClz","width","height","setColor","zrUtil","Triangle","extendShape","cx","cy","buildPath","path","moveTo","lineTo","closePath","Diamond","Pin","dy","angle","asin","dx","cos","tanX","sin","tanY","cpLen","cpLen2","arc","PI","bezierCurveTo","Arrow","symbolCtors","line","Line","rect","Rect","roundRect","square","circle","Circle","diamond","pin","arrow","triangle","symbolShapeMakers","x1","y1","x2","y2","size","symbolBuildProxies","each","Ctor","name","beforeBrush","textPosition","textAlign","textVerticalAlign","inBundle","proxySymbol","1003","completeDimensions","sysDims","data","opt","applyDim","resultItem","coordDim","coordDimIndex","OTHER_DIMS","otherDims","coordDimNameMap","set","genName","map","fromZero","dimsDef","encodeDef","createHashMap","dataDimNameMap","result","dimCount","value0","retrieveValue","isArray","sysDimItem","sysDimItemDimsDef","dimDefItem","isString","userDimName","tooltipName","dataDims","normalizeToArray","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","clone","defaults","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","o","isObject","_model","tooltip","label","itemName","dimIndex","isFinite","1004","toolbox","brush","title","polygon","lineX","lineY","keep","clear","dataView","lang","dataZoom","zoom","back","magicType","bar","stack","tiled","restore","saveAsImage","1005","CoordinateSystemManager","_coordinateSystems","coordinateSystemCreators","create","ecModel","api","coordinateSystems","creater","list","concat","update","coordSys","getCoordinateSystems","register","coordinateSystemCreator","1006","curve","vec2","bbox","_config","dpr","devicePixelRatio","CMD","M","C","Q","A","Z","min2","max2","mathMin","mathMax","mathCos","mathSin","mathSqrt","sqrt","mathAbs","abs","hasTypedArray","Float32Array","PathProxy","notSaveData","_saveData","_ctx","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","setScale","sx","sy","getContext","beginPath","addData","exceedUnit","_needsDash","_dashedLineTo","x3","y3","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","startAngle","endAngle","anticlockwise","arcTo","radius","x0","y0","toStatic","setLineDash","lineDash","lineDashSum","setLineDashOffset","offset","setData","appendPath","appendSize","appendPathData","k","cmd","_expandData","_prevCmd","newData","dash","idx","dashSum","dist","nDash","t","cubicAt","bezierLen","tmpLen","getBoundingRect","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","rebuildPath","d","ux","uy","theta","dTheta","psi","fs","scaleX","scaleY","isEllipse","translate","rotate","scale","1007","throttle","fn","delay","debounce","exec","lastExec","Date","getTime","timer","scope","currCall","diff","debounceNextCall","lastCall","cb","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","obj","fnAttr","rate","throttleType","originFn","ORIGIN_METHOD","lastThrottleType","THROTTLE_TYPE","RATE","1008","Element","Group","opts","key","hasOwnProperty","_children","__storage","__dirty","isGroup","silent","children","childAt","childOfName","childCount","add","child","parent","_doAdd","addBefore","nextSibling","remove","storage","zr","__zr","addToStorage","addChildrenToStorage","refresh","delFromStorage","delChildrenFromStorage","removeAll","eachChild","traverse","includeChildren","tmpRect","tmpMat","ignore","invisible","childRect","transform","getLocalTransform","copy","applyTransform","union","inherits","1009","window","debugMode","1010","properties","model","excludes","includes","propName","val","getShallow","1011","Chart","group","uid","componentUtil","getUID","elSetState","el","state","toggleHighlight","payload","dataIndex","modelUtil","queryDataIndex","dataIdx","getItemGraphicEl","eachItemGraphicEl","clazzUtil","init","render","seriesModel","highlight","getData","downplay","dispose","chartProto","updateView","updateLayout","updateVisual","enableClassExtend","enableClassManagement","registerWhenExtend","1012","defaultKeyGetter","item","DataDiffer","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","arr","keyArr","keyGetterName","dataDiffer","existence","func","_add","_update","_remove","execute","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","unshift","j","1013","Scale","setting","_setting","_extent","Infinity","_interval","getSetting","contain","extent","normalize","unionExtent","other","unionExtentFromData","dim","getDataExtent","getExtent","setExtent","start","end","thisExtent","isNaN","getTicksLabels","labels","ticks","getTicks","getLabel","isBlank","_isBlank","setBlank","1014","collect","axesInfo","seriesInvolved","coordSysAxesInfo","coordSysMap","collectAxesInfo","collectSeriesInfo","globalTooltipModel","getComponent","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axis","axisPointerModel","getModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","useHandle","seriesModels","axesInfoInCoordSys","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysModel","getAxes","curry","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","show","crossStyle","lineStyle","textStyle","Model","eachSeries","coordinateSystem","seriesTooltipTrigger","seriesTooltipShow","getAxis","seriesDataCount","count","axisModel","linkOption","checkPropInLink","id","componentIndex","linkPropValue","axisPropValue","fixValue","getAxisInfo","option","status","reverse","getAxisPointerModel","1015","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","getDataItemValue","createListFromArray","coordSysName","creator","creators","registeredCoordSys","CoordinateSystem","completeDimOpt","dimensions","getDimensionsInfo","categoryIndex","List","nameList","createNameList","categories","dimValueGetter","itemOpt","dimName","isDataItemOption","hasItemOption","converDataValue","categoryAxesModels","getCategories","initData","isStackable","axisType","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","__DEV__","cartesian2d","axesModels","queryComponents","mainType","index","xAxisModel","yAxisModel","xAxisType","yAxisType","stackable","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","1016","fixExtentWithBands","nTick","margin","numberUtil","axisHelper","linearMap","normalizedExtent","Axis","inverse","onBand","_labelInterval","coord","containData","dataToCoord","getPixelPrecision","dataExtent","clamp","coordToData","pointToData","point","getTicksCoords","alignWithLabel","bands","getBands","coords","getLabelsCoords","span","getBandWidth","axisExtent","isHorizontal","getRotate","getLabelInterval","labelInterval","labelModel","getAxisLabelInterval","getFormattedLabels","getFont","1017","Displayable","Style","_rect","__clipPaths","RectText","z","z2","zlevel","draggable","dragging","culling","cursor","rectHover","progressive","afterBrush","prevEl","rectContain","transformCoordToLocal","animateStyle","loop","animate","attrKV","setStyle","useStyle","mixin","1018","Gradient","colorStops","addColorStop","1019","formatUtil","helper","roundNumber","IntervalScale","extend","_intervalPrecision","getInterval","setInterval","interval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","precision","getPrecisionSafe","addCommas","niceTicks","splitNumber","minInterval","maxInterval","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","niceExtent","expandSize","fixMax","fixMin","1020","makeAxisEventDataBase","eventData","componentType","endTextLayout","textRotate","rotationDiff","remRadian","rotation","onLeft","isRadianAroundZero","tooltipOpt","fixMinMaxLabelShow","labelEls","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","next","labelLayout","firstRect","nextRect","mRotationBack","matrixUtil","identity","mul","intersect","isNameLocationCenter","nameLocation","buildAxisTick","axisBuilder","tickModel","lineStyleModel","tickLen","tickInterval","ticksCoords","pt1","pt2","matrix","_transform","ticksCnt","ifIgnoreOnTick","tickCoord","tickDirection","v2ApplyTransform","tickEl","subPixelOptimizeLine","anid","getLineStyle","buildAxisLabel","retrieve","axisLabelShow","labelMargin","labelRotation","labelRotate","innerTextLayout","labelDirection","categoryData","triggerEvent","tickVal","itemLabelModel","textColor","getTextColor","pos","labelOffset","labelStr","textEl","Text","position","setTextStyle","text","textFill","targetType","_dumbGroup","updateTransform","decomposeTransform","_util","_number","_symbol","_vector","AxisBuilder","nameDirection","dumbGroup","hasBuilder","builders","getGroup","axisLine","lineCap","strokeContainThreshold","arrows","arrowSize","symbolWidth","symbolHeight","symbol","attr","axisTickLabel","axisName","textStyleModel","gap","gapSignal","nameRotation","axisNameAvailableWidth","textFont","truncateOpt","ellipsis","maxWidth","nameTruncateMaxWidth","truncatedText","truncateText","minChar","placeholder","formatterParams","$vars","__fullText","__truncatedText","content","formatter","axisRotation","textRotation","direction","rawTick","1021","updateAxisPointer","axisView","forceRender","Clazz","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","echarts","extendComponentView","superApply","force","axisPointerClazz","registerAxisPointerClass","clazz","1022","log","Error","console","1023","minRunLength","n","DEFAULT_MIN_MERGE","makeAscendingRun","array","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","left","right","gallopLeft","hint","lastOffset","maxOffset","tmp","m","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","sort","remaining","ts","minRun","1024","ZImage","imageHelper","src","image","bind","_image","createOrUpdateImage","onload","isImageReady","aspect","setTransform","sWidth","sHeight","drawImage","restoreTransform","drawRectText","1025","findExistImage","newImageOrSrc","cachedImgObj","globalImageCache","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","Image","imageOnLoad","__cachedImgObj","1026","base","random","join","DELIMITER","enableSubTypeDefaulter","entity","subTypeDefaulters","registerSubTypeDefaulter","defaulter","parseClassType","main","determineSubType","componentTypeMain","hasSubTypes","enableTopologicalTravel","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","_clazz","1027","getName","getMin","origin","rangeStart","eqNaN","getMax","rangeEnd","getNeedCrossZero","getCoordSysModel","noop","setRange","resetRange","1028","retrieveRaw","ret","updateRangeUse","dataZoomModel","rawOption","rangePropMode","_rangePropMode","rangeModeInOption","names","percentSpecified","valueSpecified","env","AxisProxy","eachAxisDim","DataZoomModel","extendComponentModel","dependencies","defaultOption","orient","xAxisIndex","yAxisIndex","filterMode","startValue","endValue","minSpan","maxSpan","minValueSpan","maxValueSpan","rangeMode","parentModel","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","mergeDefaultAndTheme","doInit","mergeOption","newOption","merge","thisOption","canvasSupported","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","dependentModels","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxisIndex","axisIndices","axisModels","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","animation","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","indices","getAxisProxy","getAxisModel","setRawRange","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getRangePropMode","1029","isCoordSupported","coordType","COORDS","createNameEach","attrs","capitalNames","capitalFirst","capitalAttrs","nameObj","capital","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","isNodeAbsorded","node","nodes","isLinked","hasLink","edgeType","edgeId","records","absorb","sourceNode","processSingleNode","existsLink","AXIS_DIMS","1030","ComponentView","getTargetCoordInfo","save","coordModel","store","coordIndex","coordSysLists","1031","dom","ZRender","guid","instances","getInstance","registerPainter","painterCtors","delInstance","Handler","Storage","Painter","Animation","HandlerProxy","useVML","canvas","self","rendererType","renderer","vml","painter","handerProxy","getViewportRoot","root","stage","flush","_needsRefresh","oldDelFromStorage","oldAddToStorage","removeSelfFromZr","addSelfToZr","getId","addRoot","delRoot","configLayer","zLevel","config","refreshImmediately","_needsRefreshHover","refreshHoverImmediately","addHover","refreshHover","removeHover","clearHover","resize","clearAnimation","getWidth","getHeight","pathToImage","e","setCursorStyle","cursorStyle","findHover","eventName","eventHandler","stop","version","1032","normalizeTextStyle","normalizeStyle","rich","font","textContain","makeFont","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","textPadding","normalizeCssArray","renderText","renderRichText","renderPlainText","setCtx","DEFAULT_FONT","contentBlock","__textCotentBlock","parsePlainText","truncate","outerHeight","textLines","lines","lineHeight","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","adjustTextY","textX","textY","needDrawBg","needDrawBackground","textWidth","outerWidth","boxX","adjustTextX","drawBackground","getTextXForPadding","textShadowBlur","textShadowColor","textShadowOffsetX","textShadowOffsetY","textStrokeWidth","textStroke","getStroke","getFill","strokeText","fillText","parseRichText","drawRichText","contentWidth","xLeft","lineTop","xRight","token","tokens","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","textOrigin","tokenStyle","styleName","isLineHolder","textHeight","retrieve3","retrieve2","textBackgroundColor","textBorderWidth","textBorderColor","isPlainBg","textBoxShadowBlur","textBoxShadowColor","textBoxShadowOffsetX","textBoxShadowOffsetY","textBorderRadius","roundRectHelper","onBgImageLoaded","blockHeiht","parsePercent","res","adjustTextPositionOnRect","textDistance","textOffset","prop","lineWidth","maxValue","lastIndexOf","needDrawText","center","top","bottom","middle","1033","axisTrigger","registerPreprocessor","link","registerProcessor","PRIORITY","PROCESSOR","STATISTIC","registerAction","1034","buildElStyle","axisPointerType","styleModel","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","textRect","align","verticalAlign","confineInContainer","bgColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","viewWidth","viewHeight","seriesDataIndices","getAxisRawValue","seriesData","idxItem","series","getSeriesByIndex","seriesIndex","dataIndexInside","dataParams","getDataParams","isFunction","getTransformedPosition","layoutInfo","buildCartesianSingleLabelElOption","textLayout","makeLineShape","p1","p2","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","1035","isNotAroundZero","EPSILON","vector","mIdentity","Transformable","transformableProto","needLocalTransform","parentHasTransform","invTransform","invert","tmpTransform","atan2","getGlobalScale","v2","transformCoordToGlobal","target","1036","fromPoints","points","cubicExtrema","xDim","yDim","quadraticExtremum","quadraticAt","tx","ty","vec2Min","vec2Max","PI2","extremity","1037","textHelper","1038","Component","componentModel","componentProto","1039","handleEnds","handleIndex","restrict","extentSpan","originalDistSign","getSpanSign","extentMinSpan","realExtent","sign","currDistSign","1040","seriesType","defaultSymbolType","legendSymbol","eachRawSeriesByType","symbolSize","setVisual","isSeriesFiltered","rawValue","getRawValue","setItemVisual","itemModel","getItemModel","itemSymbolType","itemSymbolSize","1041","idStart","1042","Animatable","clipPath","drift","beforeUpdate","afterUpdate","hide","setClipPath","removeClipPath","__clipTarget","animators","addAnimator","removeAnimator","1043","defaultGetter","defaultSetter","interpolateNumber","p0","percent","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","p3","t2","t3","catmullRomInterpolate","v0","v1","cloneValue","isArrayLike","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","time","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","range","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","props","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","1044","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","prev","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","1045","createLinearGradient","global","createRadialGradient","STYLE_COMMON_PROPS","host","extendFrom","opacity","lineDashOffset","strokeNoScale","fontStyle","fontWeight","fontSize","fontFamily","textTag","textLineHeight","transformText","blend","prevStyle","firstDraw","fillStyle","strokeStyle","globalAlpha","globalCompositeOperation","hasStroke","getLineScale","hasFill","otherStyle","overwrite","newStyle","getGradient","method","canvasGradient","styleProto","1046","Pattern","repeat","getCanvasPattern","createPattern","1047","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","1048","r1","r2","r3","r4","total","1049","normalizeRadian","1050","windingLine","dir","1051","smooth","controlPoints","smoothBezier","smoothConstraint","cp1","cp2","smoothSpline","1052","clearColorPalette","getColorFromPalette","colorIdx","colorNameMap","colorPalette","1053","nice","fixExtent","tick","1054","finder","getTooltipPosition","dataToPoint","getValues","coordDimToDataDim","1055","getZr","initGlobalListeners","useHandler","eventType","dis","makeDispatchAction","record","dispatchAction","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","pendingList","unregister","makeGetter","1056","layout","boxLayoutParams","getBoxLayoutParams","padding","viewportSize","getLayoutRect","layoutBox","positionElement","makeBackground","getItemStyle","_layout","box","1057","newSnapshot","giveStore","batchItem","dataZoomId","subType","percentRange","snapshot","ATTR","1058","gridModel","getRect","xAxis","yAxis","grid","1059","orignalBrush","browser","ie","modified","clipPaths","shadowTemp","1060","getCartesian","getAxisDimIndex","BaseAxisPointer","viewHelper","cartesianAxisHelper","CartesianAxisPointer","makeElOption","otherExtent","getOtherAxis","getGlobalExtent","pixelValue","toGlobalCoord","elStyle","pointerOption","pointerShapeBuilder","graphicKey","pointer","getHandleTransform","labelInside","updateHandleTransform","currPosition","cursorOtherValue","cursorPoint","tooltipOptions","tooltipOption","targetShape","shadow","bandWidth","1061","updateProps","animationModel","moveAnimation","propsEqual","lastProp","stopAnimation","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","eventTool","throttleUtil","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","_api","handle","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerEl","handleModel","isInit","createIcon","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","_doDispatchAxisPointer","payloadInfo","axisDim","doClear","buildLabel","1062","rawAxisPosition","axisPosition","onZero","rectBound","axisOffset","posBound","otherAxis","onZeroAxisIndex","onZeroCoord","dirMap","1063","LegendModel","layoutMode","ignoreSize","selected","superCall","optionUpdated","_updateData","legendData","_data","hasSelected","isSelected","select","dataItem","availableNames","getSeries","legendDataProvider","mapArray","_availableNames","unSelect","toggleSelected","backgroundColor","borderColor","borderRadius","borderWidth","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","1064","dispatchSelectAction","dispatchHighlightAction","dataName","getDisplayList","useHoverLayer","seriesName","dispatchDownplayAction","_listComponent","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","positionInfo","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","selectMode","newline","getSeriesByName","getVisual","legendSymbolType","itemGroup","_createItem","eachRawSeries","indexOfName","getItemVisual","itemIcon","tooltipModel","legendGlobalTooltipModel","hitRect","legendIndex","setHoverStyle","__legendDataIndex","contentRect","1065","BrushController","_zr","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","baseUID","_handlers","mouseHandlers","doEnableBrush","controller","brushOption","interactionMutex","take","MUTEX_RESOURCE_KEY","brushType","DEFAULT_BRUSH_OPT","doDisableBrush","release","createCover","cover","coverRenderers","__brushOption","updateZ","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","COVER_Z","updateCoverAfterCreation","updateCommon","getPanelByPoint","localCursorPoint","panels","panel","pn","isTargetByCursor","getPanelByCover","panelId","clearCovers","covers","originalLength","areas","isEnd","removeOnClick","shouldShowCover","track","mathPow","UNSELECT_THRESHOLD","getTrackEnds","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","brushStyle","MIN_RESIZE_LINE_WIDTH","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","transformable","mainEl","globalDir","getGlobalDirection","CURSOR_MAP","setShape","pointsToRect","clipByPanel","formatRectRange","getTransform","localDirection","inverseMap","transformDirection","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","DIRECTION_MAP","driftPolygon","thisGroup","localD","localZero","xmin","ymin","resetCursor","currPanel","preventDefault","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","brushMode","determineBrushType","getCreatingRange","defaultBrushType","handleDragEnd","offsetX","offsetY","getLineRenderer","xyIndex","localTrack","ends","getLinearBrushOtherExtent","pow","ne","sw","nw","se","enableBrush","setPanels","panelOpts","mount","enableGlobalPan","eachCover","updateCovers","brushOptionList","getKey","tmpIdPrefix","oldGetKey","addOrUpdate","newIndex","oldIndex","newBrushOption","oldCovers","newCovers","unmount","mousedown","mousemove","mouseup","Polyline","Polygon","1066","onIrrelevantElement","targetCoordSysModel","getComponentByElement","topTarget","IRRELEVANT_EXCLUDES","1067","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","getItemLayout","symbolDrawProto","updateData","hostModel","oldData","SymbolCtor","seriesScope","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverAnimation","hoverLabelModel","newIdx","symbolEl","setItemGraphicEl","oldIdx","fadeOut","enableAnimation","1068","getSymbolSize","getScale","driftSymbol","_labelHelper","findLabelValueDim","symbolProto","_createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","setZ","setDraggable","_updateCommon","fadeIn","initProps","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","symbolInnerColor","useNameLabel","valueDim","setLabelStyle","labelFetcher","labelDataIndex","defaultText","isRectText","autoColor","hoverStyle","isAnimationEnabled","onEmphasis","ratio","animateTo","onNormal","keepLabel","1070","1071","containStroke","_l","_a","_b","1072","quadraticProjectPoint","_curve","1073","LinearGradient","globalCoord","1074","zrender","colorTool","number","format","_throttle","ecHelper","_List","_Model","_Axis","_env","_parseGeoJson","parseGeoJson","ecUtil","util","1075","decode","json","UTF8Encoding","encodeScale","UTF8Scale","features","feature","geometry","coordinates","encodeOffsets","c","coordinate","decodePolygon","c2","prevX","prevY","charCodeAt","geoJson","filter","featureObj","geometries","exterior","interiors","region","Region","cp","1076","polygonContain","MAX_NUMBER","loopGeo","transformTo","calculateTransform","1077","isAroundEqual","1078","1079","legendFilter","1081","1082","resourceKey","userKey","getStore","isTaken","1083","BrushTargetManager","targetInfoList","_targetInfoList","info","foundCpts","parseFinder","targetInfoBuilders","builder","include","formatMinMax","minMax","includeMainTypes","INCLUDE_FINDER_MAIN_TYPES","axisConvert","axisNameIndex","to","rangeOrCoordRange","values","toLocalCoord","xyMinMax","NaN","axisDiffProcessor","refer","scales","getScales","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","getSize","sizeOrigin","brushHelper","COORD_CONVERTS","proto","setOutputRanges","matchOutputRanges","area","coordRange","coordRanges","coordConvert","__rangeOffset","diffProcessor","targetInfo","findTargetInfo","coordSyses","setInputRanges","rangeOffset","makePanelOpts","getDefaultBrushType","getPanelRect","makeRectPanelClipPath","makeRectIsTargetByCursor","makeLinearBrushOtherExtent","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","getCartesians","cartesian","panelRectBuilder","xAxisDeclared","yAxisDeclared","geoModels","geoModel","xminymin","xmaxymax","1084","normalizeRect","localPoints","graphicUtil","clipPointsByRect","specifiedXYIndex","brushWidth","targetModel","_cursorHelper","1085","1086","resetSingleAxis","reset","filterSingleAxis","filterData","eachComponent","valueRange","1087","linkedNodesFinder","effectedModels","query","1088","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","AXIS_TYPES","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","mergeAll","axisDefault","ComponentModel","1089","makeEventPacket","eveType","cancelBubble","zrX","zrY","gestureEvent","pinchX","pinchY","pinchScale","wheelDelta","zrDelta","zrByTouch","which","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","proxy","painterRoot","_hovered","_lastTouchMoment","_lastX","_lastY","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","nodeType","dispatch","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","1090","_dragStart","_drag","_dragEnd","param","draggingTarget","_draggingTarget","_x","_y","dropTarget","lastDropTarget","_dropTarget","1091","shapeCompareFunc","timsort","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","roots","displayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","displayableSortFunc","1092","animatingShape","pathSplitted","_animateToShallow","source","objShallow","propertyCount","1093","options","_life","_initialized","onrestart","_pausedTime","easingFuncs","step","globalTime","deltaTime","_startTime","easingFunc","schedule","fire","restart","_needsRemove","remainder","arg","1094","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","1095","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","document","createElement","cssText","Layer","singleCanvas","nodeName","toUpperCase","_opts","_singleCanvas","rootStyle","innerHTML","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","initContext","_domRoot","_getSize","appendChild","_progressiveLayers","_hoverlayer","_hoverElements","getType","isSingleCanvas","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","paintAll","_paintList","_startProgessive","__hoverMir","elMirror","__from","hoverElements","from","hoverLayer","getLayer","originalEl","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","elCount","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","display","clearLayer","getRenderedCanvas","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","pixelRatio","clearColor","whIdx","cwh","plt","prb","stl","defaultView","getComputedStyle","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","clearRect","pathTransform","ImageShape","imgShape","1096","returnFalse","createDom","newDom","createCanvas","newDomStyle","setAttribute","domStyle","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","__currentValues","createBackBuffer","clearAll","haveMotionBLur","clearColorGradientOrPattern","__canvasGradient","fillRect","1097","_event","Dispatcher","_clips","_running","_time","_pauseStart","clips","deferredEvents","deferredClips","_startLoop","1098","eventNameFix","firefox","processGesture","gestureMgr","_gestureMgr","gestureInfo","recognize","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","addEventListener","GestureMgr","pointerEventsSupported","touchEventsSupported","removeEventListener","normalizeEvent","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","touchmove","touchend","click","handlerDomProxyProto","1099","pointPair","eventUtil","_doTrack","_recognize","touches","trackItem","touch","clientToLocal","recognizers","pinch","pinchEnd","pinchPre","pinchCenter","1100","mergeTheme","theme","themeItem","hasClass","initBase","baseOption","OPTION_INNER_KEY","_componentsMap","_seriesIndices","_theme","globalDefault","getComponentsByTypes","componentsMap","types","newCptOption","existComponent","createSeriesIndices","filterBySubType","components","condition","cpt","colorPaletteMinin","GlobalModel","optionManager","_optionManager","setOption","optionPreprocessorFuncs","assert","resetOption","optionChanged","mountOption","restoreData","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","mapResult","mappingToExists","makeIdAndName","keyInfo","exist","ComponentModelClass","getClass","extraOpt","newCptTypes","componentOption","getAllClassMainTypes","getOption","isIdInner","cpts","isIdArray","isNameArray","findComponents","queryCond","q","indexAttr","idAttr","nameAttr","component","queryResult","oneSeries","getSeriesByType","rawSeriesIndex","eachSeriesByType","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","1101","makeStyleMapper","getLineDash","lineType","dotSize","dashSize","1102","1103","PATH_COLOR","isEmphasis","getTextRect","1104","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","v","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","shift","ctlPtx","ctlPty","pathData","createPathOptions","pathProxy","transformPath","createFromString","Path","extendFromString","mergePath","pathEls","pathList","pathEl","createPathProxy","__dirtyPath","pathBundle","vMag","acos","1105","swapExtrema","extrema","windingCubic","nRoots","cubicRootAt","y0_","y1_","nExtrema","unit","windingQuadratic","quadraticRootAt","y_","x_","windingArc","containPath","isStroke","cubic","quadratic","1106","cubicProjectPoint","1107","1108","nPoint","mathAtan2","1109","1110","fixClipWithShadow","unitX","unitY","1111","1112","polyHelper","1113","interpolate","isLoop","distance","v2Distance","segs","w2","w3","1114","constraint","prevPoint","nextPoint","cps","v2Min","v2Max","v2Clone","v2Sub","v2Scale","d0","d1","sum","cp0","v2Add","sub","1115","1116","1117","pointAt","1118","someVectorAt","isTangent","cpx2","cpy2","cubicDerivativeAt","cpx1","cpy1","quadraticDerivativeAt","quadraticSubdivide","cubicSubdivide","tangentAt","1119","1120","paths","_updatePathDirty","dirtyPath","1121","RadialGradient","1122","getBorderLineDash","1123","1124","platform","navigator","match","blendMode","animationDuration","animationEasing","animationEasingUpdate","progressiveThreshold","hoverLayerThreshold","useUTC","1125","ExtensionAPI","chartInstance","echartsAPIList","1126","OptionManager","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","1127","compatLayoutProperties","LAYOUT_PROPERTIES","isTheme","compatStyle","seriesOpt","clockWise","pointerColor","COMPATITABLE_SERIES","dataRange","visualMap","COMPATITABLE_COMPONENTS","componentName","1128","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","normal","emphasisItemStyleOpt","emphasis","compatTextStyle","labelOptSingle","TEXT_STYLE_OPTIONS","compatLabelTextStyle","labelOpt","processSeries","upperLabel","edgeLabel","markPoint","markLine","markArea","mpData","mlData","toArr","toObj","axes","axisOpt","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","regions","regionObj","1129","encodeColor","colorAccessPath","visualColorAccessPath","1130","maskColor","mask","Arc","labelRect","animateShape","1131","createList","createScale","axisModelCommonMixin","createScaleByModel","niceScaleExtent","mixinAxisModelCommonMethods","_completeDimensions","1132","scaleProto","OrdinalScale","rank","1133","scaleHelper","intervalScaleProto","mathCeil","mathFloor","bisect","TimeScale","stepLvl","_stepLvl","date","formatTime","ONE_HOUR","getFullYear","getMonth","getDate","approxTickNum","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","timezoneOffset","getTimezoneOffset","parseDate","methodName","ONE_SECOND","ONE_MINUTE","ONE_DAY","1134","fixRoundingError","originalVal","roundingErrorFix","mathLog","LogScale","$constructor","_originalScale","originalScale","originalExtent","powVal","__fixMin","__fixMax","quantity","err","1135","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","containPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","minDist","minDiff","seriesNestestValue","dataIndices","dataDim","getAxisTooltipData","nestestValue","indicesOfNearest","getRawIndex","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","valueLabelOpt","outputAxesInfo","valItem","escapeConnect","lastHighlights","newHighlights","toHighlight","toDownplay","batch","1136","AxisPointerModel","triggerOn","shadowStyle","icon","1137","globalListener","AxisPointerView","1138","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","transitionDuration","enterable","extraCssText","1139","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","clientWidth","clientHeight","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","TooltipContent","axisPointerViewHelper","proxyRect","tooltipContent","getDom","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","setEnterable","_initGlobalListener","_keepShow","_tryShow","_hide","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","hideLater","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","formatTooltip","firstLine","encodeHTML","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","dataModel","dataType","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","formatTpl","cbTicket","setContent","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","newIndices","lastIdxItem","newIdxItem","1140","assembleTransition","duration","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","zrColor","borderName","camelCase","toCamelCase","container","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","onmouseleave","_hideDelay","currentStyle","viewportRootOffset","isShow","1141","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","1142","legendModels","1145","featureManager","ToolboxModel","featureOpt","featureName","Feature","itemSize","showTitle","iconStyle","1146","isUserFeatureName","listComponentHelper","toolboxModel","processFeature","featureNames","oldName","featureOpts","featureModel","onclick","unusable","createIconPaths","setIconStatus","iconName","iconPaths","iconStatus","iconStyleModel","icons","getIcons","titles","iconStr","__title","_features","_featureNames","titleText","needPutOnTop","topOffset","1147","SaveAsImage","saveAsImageLang","excludeComponents","$a","download","url","getConnectedDataURL","href","MouseEvent","edge","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","blob","Blob","tab","open","write","evt","view","bubbles","cancelable","dispatchEvent","1148","MagicType","magicTypeLang","availableIcons","seriesOptGenreator","seriesId","radioTypes","generateNewSeriesTypes","newSeriesOpt","categoryAxis","getAxesByScale","boundaryGap","radio","currentType","1149","groupSeries","seriesGroupByCategoryAxis","otherSeries","meta","baseAxis","getBaseAxis","valueAxis","assembleSeriesWithCategoryAxis","tables","valueAxisDim","headers","columns","getRawData","ITEM_SPLITER","items","BLOCK_SPLITER","assembleOtherSeries","vals","getContentFromModel","trim","isTSVFormat","block","parseTSVContents","tsv","tsvLines","itemSplitRegex","header","parseListContents","hasName","parseContents","blockMetaList","blocks","blockMeta","axisKey","DataView","_dom","tryMergeDataOption","originalData","newVal","original","dataViewLang","readOnly","optionToContent","contentToOption","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","close","viewMain","textarea","htmlOrDom","isDom","buttonContainer","buttonStyle","closeButton","refreshButton","keyCode","selectionStart","selectionEnd","substring","newSeriesOptList","1150","DataZoom","_brushController","_onBrush","_isZoomActive","retrieveAxisSetting","updateBackBtnStatus","history","updateZoomBtnStatus","zoomActive","dataZoomSelectActive","brushTargetManager","sliderMove","dataZoomLang","DATA_ZOOM_ID_BASE","handlers","nextActive","_dispatchZoomAction","setBatch","findDataZoom","minMaxSpan","getMinMaxSpan","found","dzModel","addForAxis","dataZoomOpt","axisIndicesName","givenAxisIndices","forEachComponent","newOpt","$fromToolbox","dataZoomOpts","toolboxOpt","1151","1152","calculateDataExtent","seriesExtent","fixExtentByAxis","axisDataLen","setAxisModel","isRestore","percentWindow","_percentWindow","valueWindow","_valueWindow","useOrigin","toFixed","setMinMaxSpan","_minMaxSpan","_dataZoomModel","valueSpan","_dataExtent","asc","_dimName","_axisIndex","getTargetSeriesModels","getOtherAxisModel","otherAxisDim","coordSysIndexName","isCartesian","foundOtherAxisModel","otherAxisModel","calculateDataWindow","percentExtent","boundValue","boundPercent","dataWindow","isInWindow","filterSelf","leftOut","rightOut","hasValue","thisHasValue","thisLeftOut","thisRightOut","1153","1154","DataZoomView","1155","Restore","restoreLang","1156","dims","coordDims","setItemLayout","1157","isAxisUsedInTheGrid","rotateTextRect","rotateRadians","boundingBox","plain","beforeWidth","beforeHeight","afterWidth","afterHeight","getLabelUnionRect","axisLabelModel","labelCount","isLabelIgnored","unrotatedSingleRect","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","canNotOnZeroToAxis","ifAxisCrossZero","updateAxisTransfrom","coordBase","axisExtentSum","findAxesModels","axesTypes","getReferringComponents","isCartesian2D","Cartesian2D","Axis2D","gridProto","_updateScale","ignoreContainLabel","adjustAxes","axesList","gridRect","labelUnionRect","axesMapOnDim","coordList","convertToPixel","_findConvertTarget","convertFromPixel","coordsList","createAxisCreator","axisPositionUsed","axesCount","addAxis","grids","1158","getAxisType","axisModelCreator","AxisModel","gridIndex","gridId","extraOption","1163","labelDims","otherDimToDataDim","getDimensionInfo","1164","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","smoothMonotone","connectNulls","prevIdx","v2Copy","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","scaleAndAdd","getBoundingBox","ptMin","ptMax","pt","stackedOnPoints","stackedOnSmooth","stackedOnBBox","1165","nameRotate","nameTruncate","nameTextStyle","nameGap","axisTick","inside","axisLabel","splitLine","splitArea","areaStyle","timeAxis","logAxis","logBase","1175","visualSymbol","layoutPoints","dataSample","registerVisual","registerLayout","1176","SeriesModel","getInitialData","legendHoverLink","clipOverflow","showSymbol","showAllSymbol","sampling","1177","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","getStackedOnPoints","valueStart","baseDataOffset","stackedOnSameSign","stackedOn","stackedData","createGridClipShape","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","Sector","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","stepPt","stepPt2","getVisualGradient","visualMetaList","visualMeta","dimension","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","gradient","lineAnimationDiff","_poly","ChartView","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","_polygon","isAreaChart","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","1178","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","rawIndex","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","1179","sampler","samplers","downSample","indexSampler","average","nearest","1180","Cartesian","axisX","axisY","1181","dimAxisMapper","_axes","_dimList","scaleType","_dataCoordConvert","input","dimList","output","1182","coordExtent","1183","containLabel","1184","1185","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","groupTransition","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","areaInterval","1187","1188","1189","mergeAndNormalizeLayoutParams","raw","getOrient","ScrollableLegendModel","setScrollDataIndex","scrollDataIndex","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","horizontal","vertical","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","1190","LegendView","WH","XY","ScrollableLegendView","_currentIndex","_containerGroup","_controllerGroup","_showController","__rectSize","createPageButton","iconIdx","pageDataIndexName","me","_pageGo","controllerGroup","pageTextStyleModel","containerGroup","orientIdx","hw","yx","controllerRect","showController","contentPos","containerPos","controllerPos","clipShape","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","legendId","canJump","pageText","pageCount","getItemRect","itemRect","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","itemLoc","winRect","startIdx","startItem","startRect","1191","976","__webpack_exports__","_classCallCheck","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","Object","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default","__WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__","__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_grid__","__WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_line__","__WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_legendScroll__","__WEBPACK_IMPORTED_MODULE_6_echarts_lib_component_toolbox__","_createClass","defineProperties","descriptor","protoProps","staticProps","LineReact","_React$Component","_this","getPrototypeOf","initPie","_this$props$option","undefined","myChart","ID","onresize","_this2","_props","_props$width","_props$height","ref","977","$override","methods","typeStr","objToString","TYPED_ARRAY","BUILTIN_OBJECT","isPrimitive","targetProp","sourceProp","isBuiltInObject","targetAndSources","overlay","baseClazz","F","clazzPrototype","forEach","nativeForEach","nativeMap","reduce","memo","nativeReduce","nativeFilter","find","nativeSlice","ownerDocument","value1","value2","Function","message","setAsPrimitive","primitiveKey","HashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","arrayProto","prefixedKey","removeKey","978","createRegisterEventWithLowercaseName","MessageCenter","ECharts","prioritySortFunc","prio","themeStorage","_throttledZrFlush","backwardCompat","_chartsViews","_chartsMap","_componentsViews","_coordSysMgr","createExtensionAPI","_messageCenter","_initEvents","_pendingActions","visualFuncs","dataProcessorFuncs","_onframe","doConvertPixel","coordSysList","updateDirectly","ecIns","callView","__alive","__model","__viewId","doDispatchAction","payloadType","actionWrap","actions","actionInfo","cptType","updateMethod","IN_MAIN_PROCESS","payloads","batched","eventObj","eventObjBatch","isHighDown","action","OPTION_UPDATED","updateMethods","prepareAndUpdate","flushPendingActions","pendingActions","triggerUpdatedEvent","invokeUpdateMethod","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","viewId","classType","__id","__ecComponentInfo","processData","process","stackSeriesData","stackedDataMap","previousStack","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","doRender","componentView","chartView","frameDrawNum","needProgressive","ecInstance","coordSysMgr","modelInfo","enableConnect","updateConnectedChartsStatus","charts","STATUS_KEY","eventActionMap","actionType","connectedGroups","makeActionFromEvent","otherCharts","otherChart","existInstance","getInstanceByDom","idBase","DOM_ATTRIBUTE_KEY","connect","groupId","groupIdBase","disConnect","isDisposed","getAttribute","getInstanceById","registerTheme","preprocessorFunc","priority","processorFunc","PRIORITY_PROCESSOR_FILTER","registerPostUpdate","postUpdateFunc","ACTION_REG","test","registerCoordinateSystem","getCoordinateSystemDimensions","coordSysCreator","layoutFunc","PRIORITY_VISUAL_LAYOUT","visualFunc","PRIORITY_VISUAL_CHART","registerLoading","loadingFx","loadingEffects","extendSeriesModel","extendChartView","setCanvasCreator","registerMap","mapName","specialAreas","JSON","mapDataStores","getMap","seriesColor","loadingDefault","FILTER","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","echartsProto","notMerge","lazyUpdate","setTheme","getDevicePixelRatio","getSvgDataUrl","svgSupported","pathToSvg","getDataURL","excludesComponentViews","toDataURL","canvasList","boundingRect","getBoundingClientRect","targetCanvas","img","containPixel","models","visualType","defaultMainType","indexOfRawIndex","getViewOfComponentModel","getViewOfSeriesModel","background","clearAllVisual","_loadingFX","showLoading","cfg","hideLoading","weChat","MOUSE_EVENT_NAMES","eveName","_disposed","disconnect","dataTool","___ec_export","979","extendPath","pathTool","centerGraphic","resizePath","imageUrl","pathRect","subPixelOptimize","subPixelOptimizeRect","originX","originY","originWidth","originHeight","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","cacheElementStl","__hoverStlDirty","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","insideRollbackOpt","rollbackInsideStyle","applyInsideStyle","insideOriginalTextPosition","doSingleLeaveHover","normalStl","doEnterHover","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","hoverSilentOnTouch","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","EMPTY_OBJ","labelDimIndex","showNormal","showEmphasis","baseText","getFormattedLabel","normalStyleText","emphasisStyleText","specifiedTextStyle","setTextStyleCommon","setText","defaultColor","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","setTokenTextStyle","forceRich","richItemNameMap","isBlock","getAutoColor","originalTextPosition","insideRollback","disableBox","useInsideStyle","gTextStyleModel","animateOrSetProps","isUpdate","animatableModel","postfix","animationDelay","getAnimationDelayParams","ancestor","mat","hBase","vBase","vertex","g1","g2","getAnimatableProps","elMap1","elMap","oldEl","newProp","clipRectByRect","targetRect","Ring","BezierCurve","CompoundPath","980","_trim","domain","subDomain","subRange","all","returnStr","getPrecision","eIndex","dotIndex","pixelExtent","LN10","dataQuantity","sizeQuantity","getPercentWithPrecision","valueList","acc","digits","votesPerQuota","targetSeats","seats","votes","currentSum","NEGATIVE_INFINITY","maxId","radian","pi2","RADIAN_EPSILON","TIME_REG","hour","UTC","quantityExponent","nf","exponent","exp10","reformIntervals","littleThan","lg","curr","currClose","isNumeric","MAX_SAFE_INTEGER","981","defaultEmphasis","subOpts","emphasisOpt","normalOpt","subOptName","dimInfo","dimType","nubmerUtil","createDataFormatModel","dataFormatMixin","exists","newCptOptions","cptOption","idMap","existCpt","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","otherDataIndices","lenj","mapToArray","isData","mapA","mapB","has","parsedKey","queryType","queryParam","dataDimToCoordDim","getDimension","dimItem","otherDim","rawDataIndex","getRawDataItem","componentSubType","marker","getTooltipMarker","labelProp","hostObj","982","dev","983","ArrayCtor","lenSquare","div","dot","distanceSquare","negate","lengthSquare","distSquare","984","upperCaseFirst","group1","String","tpl","paramsList","encode","seriesLen","alias","TPL_VAR_ALIAS","wrapVar","seriesIdx","formatTplSimple","isUTC","utc","s2d","varName","985","os","ua","SVGRect","userAgent","986","lt","rb","lb","rt","maxX","maxY","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","987","pathContain","pathProxyForDraw","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","_fillGradient","_strokeGradient","ctxLineDash","shapeCfg","needsUpdateRect","rectWithStroke","_rectWithStroke","lineScale","localPos","Sub","defaultShape","thisShape","988","doGet","pathArr","getParent","getParentMethod","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","ignoreParent","parsePath","thisParentModel","setReadOnly","customizeGetParent","989","boxLayout","maxHeight","currentLineMaxSize","nextX","nextY","nextChild","nextChildRect","moveX","moveY","getAvailableSize","containerRect","containerWidth","containerHeight","verticalMargin","horizontalMargin","hv","boundingMode","elPos","sizeCalculable","hvIdx","HV_NAMES","targetOption","newParams","newValueCount","merged","mergedValueCount","hasProp","hResult","vResult","copyLayoutParams","LOCATION_PARAMS","vbox","hbox","990","getDependencies","deps","getClassesByMainType","arrayPush","boxLayoutMixin","hasOwn","optList","Class","991","MEMBER_PRIFIX","TYPE_DELIMITER","checkClassType","RootClass","mandatoryMethods","ExtendedClass","makeContainer","IS_CONTAINER","registerClass","componentMainType","throwWhenNotFound","originalExtend","992","textWidthCache","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getRichTextRect","getPlainTextRect","halfHeight","prepareTruncateOptions","truncateSingleLine","maxIterations","cnCharWidth","ascCharWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","getLineHeight","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","contentHeight","stlPadding","truncateWidth","truncateHeight","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","paddingW","remianTruncWidth","isEmptyStr","strs","tokensLen","993","out0","out1","out2","out3","out4","out5","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","994","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","_storage","originalStorage","dimStore","globalObj","dataCtors","float","Float64Array","int","Int32Array","ordinal","pure","getItem","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","_dimensionInfos","_nameList","_idList","_optionModels","_visual","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","nameDimIdx","dimensionInfoMap","idList","nameRepeatCount","DataCtor","stackedValue","dimData","dimExtent","getSum","maxDistance","nearestIndices","rawIdx","dimSize","tmpRetValue","retValue","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setLayout","getLayout","clearItemLayouts","itemVisual","setItemDataAndSeriesIndex","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","TRANSFERABLE_METHODS","CHANGABLE_METHODS","995","getScaleExtent","tickCoords","axisRotate","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","labelFormatter","996","ctor","997","calculate","defaultGetZrXY","layerX","layerY","clientX","clientY","targetTouches","changedTouches","detail","button","MOUSE_EVENT_REG","isDomLevel2","attachEvent","detachEvent","notLeftMouse","stopPropagation","returnValue","998","isAroundZero","onet","t1","disc","K","discSqrt","Y1","Y2","ONE_THIRD","T","ASqrt","THREE_SQRT","p01","p12","p23","p012","p123","p0123","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","divider","v2Create","999","_format","colorPaletteMixin","themeSubType","fillDataTextStyle","newSeriesOption","getLinkedData","multipleSeries","formattedValue","setEachItem","dimIdx","valStr","vertially","tooltipDims","colorEl","animationEnabled"],"mappings":"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","file":"static/js/LineReact.cb314362.chunk.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 1000:\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1001:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(1044);\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n/***/ }),\n\n/***/ 1002:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar graphic = __webpack_require__(979);\n\nvar BoundingRect = __webpack_require__(986);\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n/***/ }),\n\n/***/ 1003:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar _model = __webpack_require__(981);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1004:\n/***/ (function(module, exports) {\n\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1005:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1006:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(998);\n\nvar vec2 = __webpack_require__(983);\n\nvar bbox = __webpack_require__(1036);\n\nvar BoundingRect = __webpack_require__(986);\n\nvar _config = __webpack_require__(1009);\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1007:\n/***/ (function(module, exports) {\n\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n/***/ }),\n\n/***/ 1008:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar Element = __webpack_require__(1042);\n\nvar BoundingRect = __webpack_require__(986);\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1009:\n/***/ (function(module, exports) {\n\nvar dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n/***/ }),\n\n/***/ 1010:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1011:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar Group = __webpack_require__(1008);\n\nvar componentUtil = __webpack_require__(1026);\n\nvar clazzUtil = __webpack_require__(991);\n\nvar modelUtil = __webpack_require__(981);\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1012:\n/***/ (function(module, exports) {\n\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1013:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar clazzUtil = __webpack_require__(991);\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1014:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar Model = __webpack_require__(988);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n/***/ }),\n\n/***/ 1015:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(982);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(977);\n\nvar List = __webpack_require__(994);\n\nvar completeDimensions = __webpack_require__(1003);\n\nvar _model = __webpack_require__(981);\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = __webpack_require__(1005);\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1016:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar numberUtil = __webpack_require__(980);\n\nvar axisHelper = __webpack_require__(995);\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1017:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar Style = __webpack_require__(1045);\n\nvar Element = __webpack_require__(1042);\n\nvar RectText = __webpack_require__(1070);\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1018:\n/***/ (function(module, exports) {\n\n/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1019:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(980);\n\nvar formatUtil = __webpack_require__(984);\n\nvar Scale = __webpack_require__(1013);\n\nvar helper = __webpack_require__(1053);\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1020:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(977);\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = __webpack_require__(984);\n\nvar graphic = __webpack_require__(979);\n\nvar Model = __webpack_require__(988);\n\nvar _number = __webpack_require__(980);\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = __webpack_require__(1002);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = __webpack_require__(993);\n\nvar _vector = __webpack_require__(983);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1021:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(982);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(978);\n\nvar axisPointerModelHelper = __webpack_require__(1014);\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1022:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1009);\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1023:\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n/***/ }),\n\n/***/ 1024:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1017);\n\nvar BoundingRect = __webpack_require__(986);\n\nvar zrUtil = __webpack_require__(977);\n\nvar imageHelper = __webpack_require__(1025);\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1025:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(1044);\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n/***/ }),\n\n/***/ 1026:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar _clazz = __webpack_require__(991);\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n/***/ }),\n\n/***/ 1027:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar axisHelper = __webpack_require__(995);\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1028:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(982);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(978);\n\nvar zrUtil = __webpack_require__(977);\n\nvar env = __webpack_require__(985);\n\nvar modelUtil = __webpack_require__(981);\n\nvar helper = __webpack_require__(1029);\n\nvar AxisProxy = __webpack_require__(1152);\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1029:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar formatUtil = __webpack_require__(984);\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;\n\n/***/ }),\n\n/***/ 1030:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar ComponentView = __webpack_require__(1038);\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1031:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(1041);\n\nvar env = __webpack_require__(985);\n\nvar zrUtil = __webpack_require__(977);\n\nvar Handler = __webpack_require__(1089);\n\nvar Storage = __webpack_require__(1091);\n\nvar Painter = __webpack_require__(1095);\n\nvar Animation = __webpack_require__(1097);\n\nvar HandlerProxy = __webpack_require__(1098);\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n/***/ }),\n\n/***/ 1032:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(977);\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = __webpack_require__(992);\n\nvar roundRectHelper = __webpack_require__(1048);\n\nvar imageHelper = __webpack_require__(1025);\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n/***/ }),\n\n/***/ 1033:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(978);\n\nvar zrUtil = __webpack_require__(977);\n\nvar axisPointerModelHelper = __webpack_require__(1014);\n\nvar axisTrigger = __webpack_require__(1135);\n\n__webpack_require__(1136);\n\n__webpack_require__(1137);\n\n__webpack_require__(1060);\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n/***/ }),\n\n/***/ 1034:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar graphic = __webpack_require__(979);\n\nvar textContain = __webpack_require__(992);\n\nvar formatUtil = __webpack_require__(984);\n\nvar matrix = __webpack_require__(993);\n\nvar axisHelper = __webpack_require__(995);\n\nvar AxisBuilder = __webpack_require__(1020);\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n/***/ }),\n\n/***/ 1035:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar matrix = __webpack_require__(993);\n\nvar vector = __webpack_require__(983);\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1036:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(983);\n\nvar curve = __webpack_require__(998);\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n/***/ }),\n\n/***/ 1037:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1017);\n\nvar zrUtil = __webpack_require__(977);\n\nvar textContain = __webpack_require__(992);\n\nvar textHelper = __webpack_require__(1032);\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1038:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Group = __webpack_require__(1008);\n\nvar componentUtil = __webpack_require__(1026);\n\nvar clazzUtil = __webpack_require__(991);\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1039:\n/***/ (function(module, exports) {\n\n/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1040:\n/***/ (function(module, exports) {\n\nfunction _default(seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n    var symbolSize = seriesModel.get('symbolSize');\n    data.setVisual({\n      legendSymbol: legendSymbol || symbolType,\n      symbol: symbolType,\n      symbolSize: symbolSize\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof symbolSize === 'function') {\n        data.each(function (idx) {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        });\n      }\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var itemSymbolType = itemModel.getShallow('symbol', true);\n        var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n        if (itemSymbolType != null) {\n          data.setItemVisual(idx, 'symbol', itemSymbolType);\n        }\n\n        if (itemSymbolSize != null) {\n          // PENDING Transform symbolSize ?\n          data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1041:\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1042:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(1041);\n\nvar Eventful = __webpack_require__(1000);\n\nvar Transformable = __webpack_require__(1035);\n\nvar Animatable = __webpack_require__(1092);\n\nvar zrUtil = __webpack_require__(977);\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1043:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Clip = __webpack_require__(1093);\n\nvar color = __webpack_require__(1001);\n\nvar _util = __webpack_require__(977);\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1044:\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1045:\n/***/ (function(module, exports) {\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1046:\n/***/ (function(module, exports) {\n\nvar Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1047:\n/***/ (function(module, exports) {\n\nvar _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1048:\n/***/ (function(module, exports) {\n\nfunction buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 1049:\n/***/ (function(module, exports) {\n\nvar PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n/***/ }),\n\n/***/ 1050:\n/***/ (function(module, exports) {\n\nfunction windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n/***/ }),\n\n/***/ 1051:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar smoothSpline = __webpack_require__(1113);\n\nvar smoothBezier = __webpack_require__(1114);\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 1052:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _clazz = __webpack_require__(991);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1053:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(980);\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n/***/ }),\n\n/***/ 1054:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar modelUtil = __webpack_require__(981);\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1055:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar env = __webpack_require__(985);\n\nvar modelUtil = __webpack_require__(981);\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n/***/ }),\n\n/***/ 1056:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _layout = __webpack_require__(989);\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = __webpack_require__(984);\n\nvar graphic = __webpack_require__(979);\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n/***/ }),\n\n/***/ 1057:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;\n\n/***/ }),\n\n/***/ 1058:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(978);\n\nvar zrUtil = __webpack_require__(977);\n\nvar graphic = __webpack_require__(979);\n\n__webpack_require__(1157);\n\n__webpack_require__(1184);\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n/***/ }),\n\n/***/ 1059:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(985);\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1060:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(979);\n\nvar BaseAxisPointer = __webpack_require__(1061);\n\nvar viewHelper = __webpack_require__(1034);\n\nvar cartesianAxisHelper = __webpack_require__(1062);\n\nvar AxisView = __webpack_require__(1021);\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1061:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar clazzUtil = __webpack_require__(991);\n\nvar graphic = __webpack_require__(979);\n\nvar axisPointerModelHelper = __webpack_require__(1014);\n\nvar eventTool = __webpack_require__(997);\n\nvar throttleUtil = __webpack_require__(1007);\n\nvar modelUtil = __webpack_require__(981);\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1062:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n\n/***/ 1063:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(978);\n\nvar zrUtil = __webpack_require__(977);\n\nvar Model = __webpack_require__(988);\n\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    this._data = legendData;\n    var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n      return series.name;\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        availableNames = availableNames.concat(data.mapArray(data.getName));\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1064:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(982);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(978);\n\nvar zrUtil = __webpack_require__(977);\n\nvar _symbol = __webpack_require__(1002);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(979);\n\nvar _listComponent = __webpack_require__(1056);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(989);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1065:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(982);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(977);\n\nvar Eventful = __webpack_require__(1000);\n\nvar graphic = __webpack_require__(979);\n\nvar interactionMutex = __webpack_require__(1082);\n\nvar DataDiffer = __webpack_require__(1012);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1066:\n/***/ (function(module, exports) {\n\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;\n\n/***/ }),\n\n/***/ 1067:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(979);\n\nvar SymbolClz = __webpack_require__(1068);\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, idx, isIgnore) {\n  var point = data.getItemLayout(idx); // Is an object\n  // if (point && point.hasOwnProperty('point')) {\n  //     point = point.point;\n  // }\n\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx)) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Array.<boolean>} [isIgnore]\n */\n\n\nsymbolDrawProto.updateData = function (data, isIgnore) {\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = {\n    itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label.normal'),\n    hoverLabelModel: seriesModel.getModel('label.emphasis'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data;\n\n  if (data) {\n    if (enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  }\n};\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1068:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar _symbol = __webpack_require__(1002);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(979);\n\nvar _number = __webpack_require__(980);\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = __webpack_require__(1163);\n\nvar findLabelValueDim = _labelHelper.findLabelValueDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\nvar normalLabelAccessPath = ['label', 'normal'];\nvar emphasisLabelAccessPath = ['label', 'emphasis'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  var valueDim = !useNameLabel && findLabelValueDim(data);\n\n  if (useNameLabel || valueDim != null) {\n    graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n      labelFetcher: seriesModel,\n      labelDataIndex: idx,\n      defaultText: useNameLabel ? data.getName(idx) : data.get(valueDim, idx),\n      isRectText: true,\n      autoColor: color\n    });\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1070:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textHelper = __webpack_require__(1032);\n\nvar BoundingRect = __webpack_require__(986);\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1071:\n/***/ (function(module, exports) {\n\n/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1072:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curve = __webpack_require__(998);\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1073:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar Gradient = __webpack_require__(1018);\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1074:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrender = __webpack_require__(1031);\n\nexports.zrender = zrender;\n\nvar matrix = __webpack_require__(993);\n\nexports.matrix = matrix;\n\nvar vector = __webpack_require__(983);\n\nexports.vector = vector;\n\nvar zrUtil = __webpack_require__(977);\n\nvar colorTool = __webpack_require__(1001);\n\nexports.color = colorTool;\n\nvar graphic = __webpack_require__(979);\n\nexports.graphic = graphic;\n\nvar numberUtil = __webpack_require__(980);\n\nexports.number = numberUtil;\n\nvar formatUtil = __webpack_require__(984);\n\nexports.format = formatUtil;\n\nvar _throttle = __webpack_require__(1007);\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = __webpack_require__(1131);\n\nexports.helper = ecHelper;\n\nvar _List = __webpack_require__(994);\n\nexports.List = _List;\n\nvar _Model = __webpack_require__(988);\n\nexports.Model = _Model;\n\nvar _Axis = __webpack_require__(1016);\n\nexports.Axis = _Axis;\n\nvar _env = __webpack_require__(985);\n\nexports.env = _env;\n\nvar _parseGeoJson = __webpack_require__(1075);\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;\n\n/***/ }),\n\n/***/ 1075:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar Region = __webpack_require__(1076);\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1076:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(986);\n\nvar bbox = __webpack_require__(1036);\n\nvar vec2 = __webpack_require__(983);\n\nvar polygonContain = __webpack_require__(1077);\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1077:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar windingLine = __webpack_require__(1050);\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n/***/ }),\n\n/***/ 1078:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(978);\n\n__webpack_require__(1033);\n\n__webpack_require__(1138);\n\n__webpack_require__(1139);\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n/***/ }),\n\n/***/ 1079:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(978);\n\n__webpack_require__(1063);\n\n__webpack_require__(1141);\n\n__webpack_require__(1064);\n\nvar legendFilter = __webpack_require__(1142);\n\nvar Component = __webpack_require__(990);\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n\n/***/ 1081:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1145);\n\n__webpack_require__(1146);\n\n__webpack_require__(1147);\n\n__webpack_require__(1148);\n\n__webpack_require__(1149);\n\n__webpack_require__(1150);\n\n__webpack_require__(1155);\n\n/***/ }),\n\n/***/ 1082:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(978);\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;\n\n/***/ }),\n\n/***/ 1083:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(982);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(977);\n\nvar graphic = __webpack_require__(979);\n\nvar modelUtil = __webpack_require__(981);\n\nvar brushHelper = __webpack_require__(1084);\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1084:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(986);\n\nvar _cursorHelper = __webpack_require__(1066);\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = __webpack_require__(979);\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;\n\n/***/ }),\n\n/***/ 1085:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(990);\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});\n\n/***/ }),\n\n/***/ 1086:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(978);\n\necharts.registerProcessor(function (ecModel, api) {\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // We calculate window and reset axis here but not in model\n    // init stage and not after action dispatch handler, because\n    // reset should be called after seriesData.restoreData.\n    dataZoomModel.eachTargetAxis(resetSingleAxis); // Caution: data zoom filtering is order sensitive when using\n    // percent range and no min/max/scale set on axis.\n    // For example, we have dataZoom definition:\n    // [\n    //      {xAxisIndex: 0, start: 30, end: 70},\n    //      {yAxisIndex: 0, start: 20, end: 80}\n    // ]\n    // In this case, [20, 80] of y-dataZoom should be based on data\n    // that have filtered by x-dataZoom using range of [30, 70],\n    // but should not be based on full raw data. Thus sliding\n    // x-dataZoom will change both ranges of xAxis and yAxis,\n    // while sliding y-dataZoom will only change the range of yAxis.\n    // So we should filter x-axis after reset x-axis immediately,\n    // and then reset y-axis and filter y-axis.\n\n    dataZoomModel.eachTargetAxis(filterSingleAxis);\n  });\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // Fullfill all of the range props so that user\n    // is able to get them from chart.getOption().\n    var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n    var percentRange = axisProxy.getDataPercentWindow();\n    var valueRange = axisProxy.getDataValueWindow();\n    dataZoomModel.setRawRange({\n      start: percentRange[0],\n      end: percentRange[1],\n      startValue: valueRange[0],\n      endValue: valueRange[1]\n    }, true);\n  });\n});\n\nfunction resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n}\n\nfunction filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n}\n\n/***/ }),\n\n/***/ 1087:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(978);\n\nvar zrUtil = __webpack_require__(977);\n\nvar helper = __webpack_require__(1029);\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});\n\n/***/ }),\n\n/***/ 1088:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar axisDefault = __webpack_require__(1165);\n\nvar ComponentModel = __webpack_require__(990);\n\nvar _layout = __webpack_require__(989);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1089:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(977);\n\nvar vec2 = __webpack_require__(983);\n\nvar Draggable = __webpack_require__(1090);\n\nvar Eventful = __webpack_require__(1000);\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1090:\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1091:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(977);\n\nvar env = __webpack_require__(985);\n\nvar Group = __webpack_require__(1008);\n\nvar timsort = __webpack_require__(1023);\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1092:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Animator = __webpack_require__(1043);\n\nvar log = __webpack_require__(1022);\n\nvar _util = __webpack_require__(977);\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1093:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar easingFuncs = __webpack_require__(1094);\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1094:\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1095:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1009);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = __webpack_require__(977);\n\nvar log = __webpack_require__(1022);\n\nvar BoundingRect = __webpack_require__(986);\n\nvar timsort = __webpack_require__(1023);\n\nvar Layer = __webpack_require__(1096);\n\nvar requestAnimationFrame = __webpack_require__(1047);\n\nvar Image = __webpack_require__(1024);\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1096:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(977);\n\nvar _config = __webpack_require__(1009);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = __webpack_require__(1045);\n\nvar Pattern = __webpack_require__(1046);\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1097:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(977);\n\nvar _event = __webpack_require__(997);\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = __webpack_require__(1047);\n\nvar Animator = __webpack_require__(1043);\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1098:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _event = __webpack_require__(997);\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = __webpack_require__(977);\n\nvar Eventful = __webpack_require__(1000);\n\nvar env = __webpack_require__(985);\n\nvar GestureMgr = __webpack_require__(1099);\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1099:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eventUtil = __webpack_require__(997);\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1100:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(982);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(977);\n\nvar modelUtil = __webpack_require__(981);\n\nvar Model = __webpack_require__(988);\n\nvar ComponentModel = __webpack_require__(990);\n\nvar globalDefault = __webpack_require__(1124);\n\nvar colorPaletteMinin = __webpack_require__(1052);\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1101:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1010);\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1102:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1010);\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1103:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(992);\n\nvar graphicUtil = __webpack_require__(979);\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1104:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(987);\n\nvar PathProxy = __webpack_require__(1006);\n\nvar transformPath = __webpack_require__(1108);\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n/***/ }),\n\n/***/ 1105:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(1006);\n\nvar line = __webpack_require__(1071);\n\nvar cubic = __webpack_require__(1106);\n\nvar quadratic = __webpack_require__(1072);\n\nvar arc = __webpack_require__(1107);\n\nvar _util = __webpack_require__(1049);\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = __webpack_require__(998);\n\nvar windingLine = __webpack_require__(1050);\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1106:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(998);\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1107:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1049);\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1108:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(1006);\n\nvar _vector = __webpack_require__(983);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1109:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(987);\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1110:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(987);\n\nvar fixClipWithShadow = __webpack_require__(1059);\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1111:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(987);\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1112:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(987);\n\nvar polyHelper = __webpack_require__(1051);\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1113:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(983);\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1114:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(983);\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1115:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(987);\n\nvar polyHelper = __webpack_require__(1051);\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1116:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(987);\n\nvar roundRectHelper = __webpack_require__(1048);\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1117:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(987);\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1118:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(987);\n\nvar vec2 = __webpack_require__(983);\n\nvar _curve = __webpack_require__(998);\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1119:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(987);\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1120:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(987);\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1121:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar Gradient = __webpack_require__(1018);\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1122:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1010);\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1123:\n/***/ (function(module, exports) {\n\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1124:\n/***/ (function(module, exports) {\n\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1125:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1126:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar modelUtil = __webpack_require__(981);\n\nvar ComponentModel = __webpack_require__(990);\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1127:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(977);\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = __webpack_require__(1128);\n\nvar _model = __webpack_require__(981);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1128:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar modelUtil = __webpack_require__(981);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1129:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Gradient = __webpack_require__(1018);\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1130:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar graphic = __webpack_require__(979);\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1131:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar createListFromArray = __webpack_require__(1015);\n\nvar axisHelper = __webpack_require__(995);\n\nvar axisModelCommonMixin = __webpack_require__(1027);\n\nvar Model = __webpack_require__(988);\n\nvar _completeDimensions = __webpack_require__(1003);\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = __webpack_require__(1002);\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n/***/ }),\n\n/***/ 1132:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar Scale = __webpack_require__(1013);\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1133:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar numberUtil = __webpack_require__(980);\n\nvar formatUtil = __webpack_require__(984);\n\nvar scaleHelper = __webpack_require__(1053);\n\nvar IntervalScale = __webpack_require__(1019);\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1134:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar Scale = __webpack_require__(1013);\n\nvar numberUtil = __webpack_require__(980);\n\nvar IntervalScale = __webpack_require__(1019);\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1135:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar modelUtil = __webpack_require__(981);\n\nvar modelHelper = __webpack_require__(1014);\n\nvar findPointFromSeries = __webpack_require__(1054);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1136:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(978);\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1137:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(978);\n\nvar globalListener = __webpack_require__(1055);\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1138:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(978);\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1139:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(978);\n\nvar zrUtil = __webpack_require__(977);\n\nvar env = __webpack_require__(985);\n\nvar TooltipContent = __webpack_require__(1140);\n\nvar formatUtil = __webpack_require__(984);\n\nvar numberUtil = __webpack_require__(980);\n\nvar graphic = __webpack_require__(979);\n\nvar findPointFromSeries = __webpack_require__(1054);\n\nvar layoutUtil = __webpack_require__(989);\n\nvar Model = __webpack_require__(988);\n\nvar globalListener = __webpack_require__(1055);\n\nvar axisHelper = __webpack_require__(995);\n\nvar axisPointerViewHelper = __webpack_require__(1034);\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1140:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar zrColor = __webpack_require__(1001);\n\nvar eventUtil = __webpack_require__(997);\n\nvar env = __webpack_require__(985);\n\nvar formatUtil = __webpack_require__(984);\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1141:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(978);\n\nvar zrUtil = __webpack_require__(977);\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n\n/***/ 1142:\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1145:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(978);\n\nvar zrUtil = __webpack_require__(977);\n\nvar featureManager = __webpack_require__(996);\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  mergeDefaultAndTheme: function (option) {\n    ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      normal: {\n        borderColor: '#666',\n        color: 'none'\n      },\n      emphasis: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1146:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(978);\n\nvar zrUtil = __webpack_require__(977);\n\nvar textContain = __webpack_require__(992);\n\nvar featureManager = __webpack_require__(996);\n\nvar graphic = __webpack_require__(979);\n\nvar Model = __webpack_require__(988);\n\nvar DataDiffer = __webpack_require__(1012);\n\nvar listComponentHelper = __webpack_require__(1056);\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getModel('normal').getItemStyle());\n        path.hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  updateLayout: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n    });\n  },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1147:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(985);\n\nvar lang = __webpack_require__(1004);\n\nvar featureManager = __webpack_require__(996);\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1148:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(978);\n\nvar zrUtil = __webpack_require__(977);\n\nvar lang = __webpack_require__(1004);\n\nvar featureManager = __webpack_require__(996);\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1149:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(978);\n\nvar zrUtil = __webpack_require__(977);\n\nvar eventTool = __webpack_require__(997);\n\nvar lang = __webpack_require__(1004);\n\nvar featureManager = __webpack_require__(996);\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1150:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(978);\n\nvar zrUtil = __webpack_require__(977);\n\nvar BrushController = __webpack_require__(1065);\n\nvar BrushTargetManager = __webpack_require__(1083);\n\nvar history = __webpack_require__(1057);\n\nvar sliderMove = __webpack_require__(1039);\n\nvar lang = __webpack_require__(1004);\n\nvar featureManager = __webpack_require__(996);\n\n__webpack_require__(1151);\n\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom;\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1151:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1085);\n\n__webpack_require__(1028);\n\n__webpack_require__(1030);\n\n__webpack_require__(1153);\n\n__webpack_require__(1154);\n\n__webpack_require__(1086);\n\n__webpack_require__(1087);\n\n/***/ }),\n\n/***/ 1152:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar numberUtil = __webpack_require__(980);\n\nvar helper = __webpack_require__(1029);\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    } // Culculate data window and data extent, and record them.\n\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, this.getTargetSeriesModels());\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n\n\n    var otherAxisModel = this.getOtherAxisModel();\n\n    if (dataZoomModel.get('$fromToolbox') && otherAxisModel && otherAxisModel.get('type') === 'category') {\n      filterMode = 'empty';\n    } // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n      if (filterMode === 'weakFilter') {\n        seriesData && seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        seriesData && each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            seriesData.filterSelf(dim, isInWindow);\n          }\n        });\n      }\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n        var seriesExtent = seriesData.getDataExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1153:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomModel = __webpack_require__(1028);\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1154:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DataZoomView = __webpack_require__(1030);\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1155:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(978);\n\nvar history = __webpack_require__(1057);\n\nvar lang = __webpack_require__(1004);\n\nvar featureManager = __webpack_require__(996);\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1156:\n/***/ (function(module, exports) {\n\nfunction _default(seriesType, ecModel) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    var dims = [];\n    var coordDims = coordSys.dimensions;\n\n    for (var i = 0; i < coordDims.length; i++) {\n      dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n    }\n\n    if (dims.length === 1) {\n      data.each(dims[0], function (x, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n      });\n    } else if (dims.length === 2) {\n      data.each(dims, function (x, y, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) || isNaN(y) ? [NaN, NaN] : coordSys.dataToPoint([x, y]));\n      }, true);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1157:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(982);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(977);\n\nvar BoundingRect = __webpack_require__(986);\n\nvar _layout = __webpack_require__(989);\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = __webpack_require__(995);\n\nvar Cartesian2D = __webpack_require__(1180);\n\nvar Axis2D = __webpack_require__(1182);\n\nvar CoordinateSystem = __webpack_require__(1005);\n\n__webpack_require__(1183);\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.getFormattedLabels();\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransfrom(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1158:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar ComponentModel = __webpack_require__(990);\n\nvar axisModelCreator = __webpack_require__(1088);\n\nvar axisModelCommonMixin = __webpack_require__(1027);\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1163:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _model = __webpack_require__(981);\n\nvar otherDimToDataDim = _model.otherDimToDataDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction findLabelValueDim(data) {\n  var valueDim;\n  var labelDims = otherDimToDataDim(data, 'label');\n\n  if (labelDims.length) {\n    valueDim = labelDims[0];\n  } else {\n    // Get last value dim\n    var dimensions = data.dimensions.slice();\n    var dataType;\n\n    while (dimensions.length && (valueDim = dimensions.pop(), dataType = data.getDimensionInfo(valueDim).type, dataType === 'ordinal' || dataType === 'time')) {} // jshint ignore:line\n\n  }\n\n  return valueDim;\n}\n\nexports.findLabelValueDim = findLabelValueDim;\n\n/***/ }),\n\n/***/ 1164:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(987);\n\nvar vec2 = __webpack_require__(983);\n\nvar fixClipWithShadow = __webpack_require__(1059);\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n/***/ }),\n\n/***/ 1165:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1175:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(978);\n\nvar zrUtil = __webpack_require__(977);\n\n__webpack_require__(1176);\n\n__webpack_require__(1177);\n\nvar visualSymbol = __webpack_require__(1040);\n\nvar layoutPoints = __webpack_require__(1156);\n\nvar dataSample = __webpack_require__(1179);\n\n__webpack_require__(1058);\n\n// In case developer forget to include grid component\necharts.registerVisual(zrUtil.curry(visualSymbol, 'line', 'circle', 'line'));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(dataSample, 'line'));\n\n/***/ }),\n\n/***/ 1176:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(982);\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = __webpack_require__(1015);\n\nvar SeriesModel = __webpack_require__(999);\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      normal: {\n        position: 'top'\n      }\n    },\n    // itemStyle: {\n    //     normal: {},\n    //     emphasis: {}\n    // },\n    lineStyle: {\n      normal: {\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // areaStyle: {},\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1177:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(982);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(977);\n\nvar SymbolDraw = __webpack_require__(1067);\n\nvar SymbolClz = __webpack_require__(1068);\n\nvar lineAnimationDiff = __webpack_require__(1178);\n\nvar graphic = __webpack_require__(979);\n\nvar modelUtil = __webpack_require__(981);\n\nvar _poly = __webpack_require__(1164);\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = __webpack_require__(1011);\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.3 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Array.<Array.<number>>} points\n * @private\n */\n\n\nfunction getStackedOnPoints(coordSys, data) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = 0;\n\n  if (!baseAxis.onZero) {\n    var extent = valueAxis.scale.getExtent();\n\n    if (extent[0] > 0) {\n      // Both positive\n      valueStart = extent[0];\n    } else if (extent[1] < 0) {\n      // Both negative\n      valueStart = extent[1];\n    } // If is one positive, and one negative, onZero shall be true\n\n  }\n\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  return data.mapArray([valueDim], function (val, idx) {\n    var stackedOnSameSign;\n    var stackedOn = data.stackedOn; // Find first stacked value with same sign\n\n    while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n      stackedOnSameSign = stackedOn;\n      break;\n    }\n\n    var stackedData = [];\n    stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n    stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n    return coordSys.dataToPoint(stackedData);\n  }, true);\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.normal.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    // Can only be x or y\n    if (visualMetaList[i].dimension < 2) {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta || coordSys.type !== 'cartesian2d') {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var dimension = visualMeta.dimension;\n  var dimName = data.dimensions[dimension];\n  var axis = coordSys.getAxis(dimName); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[dimName] = minCoord;\n  gradient[dimName + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n    var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n    var points = data.mapArray(data.getItemLayout, true);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var stackedOnPoints = getStackedOnPoints(coordSys, data);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOn = data.stackedOn;\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOn) {\n        var stackedOnSeries = stackedOn.hostModel;\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1178:\n/***/ (function(module, exports) {\n\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n\nfunction getStackedOnPoint(coordSys, data, idx) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = baseAxis.onZero ? 0 : valueAxis.scale.getExtent()[0];\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  var stackedOnSameSign;\n  var stackedOn = data.stackedOn;\n  var val = data.get(valueDim, idx); // Find first stacked value with same sign\n\n  while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n    stackedOnSameSign = stackedOn;\n    break;\n  }\n\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n  stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n  return coordSys.dataToPoint(stackedData);\n} // function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\n\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var dims = newCoordSys.dimensions;\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1179:\n/***/ (function(module, exports) {\n\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType, ecModel, api) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var sampling = seriesModel.get('sampling');\n    var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n    if (coordSys.type === 'cartesian2d' && sampling) {\n      var baseAxis = coordSys.getBaseAxis();\n      var valueAxis = coordSys.getOtherAxis(baseAxis);\n      var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n      var size = extent[1] - extent[0];\n      var rate = Math.round(data.count() / size);\n\n      if (rate > 1) {\n        var sampler;\n\n        if (typeof sampling === 'string') {\n          sampler = samplers[sampling];\n        } else if (typeof sampling === 'function') {\n          sampler = sampling;\n        }\n\n        if (sampler) {\n          data = data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler);\n          seriesModel.setData(data);\n        }\n      }\n    }\n  }, this);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1180:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar Cartesian = __webpack_require__(1181);\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)), yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))];\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp), yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)];\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1181:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1182:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar Axis = __webpack_require__(1016);\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1183:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1158);\n\nvar ComponentModel = __webpack_require__(990);\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1184:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1158);\n\n__webpack_require__(1185);\n\n/***/ }),\n\n/***/ 1185:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar graphic = __webpack_require__(979);\n\nvar AxisBuilder = __webpack_require__(1020);\n\nvar AxisView = __webpack_require__(1021);\n\nvar cartesianAxisHelper = __webpack_require__(1062);\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n/***/ }),\n\n/***/ 1187:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1058);\n\n__webpack_require__(1060);\n\n__webpack_require__(1033);\n\n/***/ }),\n\n/***/ 1188:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1079);\n\n__webpack_require__(1189);\n\n__webpack_require__(1190);\n\n__webpack_require__(1191);\n\n/***/ }),\n\n/***/ 1189:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LegendModel = __webpack_require__(1063);\n\nvar _layout = __webpack_require__(989);\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1190:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar graphic = __webpack_require__(979);\n\nvar layoutUtil = __webpack_require__(989);\n\nvar LegendView = __webpack_require__(1064);\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1191:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(978);\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n/***/ }),\n\n/***/ 976:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__ = __webpack_require__(978);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__ = __webpack_require__(1078);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_grid__ = __webpack_require__(1187);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_grid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_grid__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_line__ = __webpack_require__(1175);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_line___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_line__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_legendScroll__ = __webpack_require__(1188);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_legendScroll___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_legendScroll__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_echarts_lib_component_toolbox__ = __webpack_require__(1081);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_echarts_lib_component_toolbox___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_echarts_lib_component_toolbox__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}//必须\nvar LineReact=function(_React$Component){_inherits(LineReact,_React$Component);function LineReact(props){_classCallCheck(this,LineReact);var _this=_possibleConstructorReturn(this,(LineReact.__proto__||Object.getPrototypeOf(LineReact)).call(this,props));_this.initPie=function(){var _this$props$option=_this.props.option,option=_this$props$option===undefined?{}:_this$props$option;//外部传入的data数据\nvar myChart=__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default.a.init(_this.ID);//初始化echarts\n//设置options\nmyChart.setOption(option);window.onresize=function(){myChart.resize();};};return _this;}_createClass(LineReact,[{key:'componentDidMount',value:function componentDidMount(){//alert(1);\nthis.initPie();}},{key:'componentDidUpdate',value:function componentDidUpdate(){//alert(2);\nthis.initPie();}},{key:'render',value:function render(){var _this2=this;var _props=this.props,_props$width=_props.width,width=_props$width===undefined?\"100%\":_props$width,_props$height=_props.height,height=_props$height===undefined?\"300px\":_props$height;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{ref:function ref(ID){return _this2.ID=ID;},style:{width:width,height:height},id:'line-chart'});}}]);return LineReact;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);/* harmony default export */ __webpack_exports__[\"default\"] = (LineReact);\n\n/***/ }),\n\n/***/ 977:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n/***/ }),\n\n/***/ 978:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(982);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = __webpack_require__(1031);\n\nvar zrUtil = __webpack_require__(977);\n\nvar colorTool = __webpack_require__(1001);\n\nvar env = __webpack_require__(985);\n\nvar timsort = __webpack_require__(1023);\n\nvar Eventful = __webpack_require__(1000);\n\nvar GlobalModel = __webpack_require__(1100);\n\nvar ExtensionAPI = __webpack_require__(1125);\n\nvar CoordinateSystemManager = __webpack_require__(1005);\n\nvar OptionManager = __webpack_require__(1126);\n\nvar backwardCompat = __webpack_require__(1127);\n\nvar ComponentModel = __webpack_require__(990);\n\nvar SeriesModel = __webpack_require__(999);\n\nvar ComponentView = __webpack_require__(1038);\n\nvar ChartView = __webpack_require__(1011);\n\nvar graphic = __webpack_require__(979);\n\nvar modelUtil = __webpack_require__(981);\n\nvar _throttle = __webpack_require__(1007);\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = __webpack_require__(1129);\n\nvar loadingDefault = __webpack_require__(1130);\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = __webpack_require__(1074);\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n/***/ }),\n\n/***/ 979:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar pathTool = __webpack_require__(1104);\n\nvar colorTool = __webpack_require__(1001);\n\nvar matrix = __webpack_require__(993);\n\nvar vector = __webpack_require__(983);\n\nvar Path = __webpack_require__(987);\n\nvar Transformable = __webpack_require__(1035);\n\nvar Image = __webpack_require__(1024);\n\nexports.Image = Image;\n\nvar Group = __webpack_require__(1008);\n\nexports.Group = Group;\n\nvar Text = __webpack_require__(1037);\n\nexports.Text = Text;\n\nvar Circle = __webpack_require__(1109);\n\nexports.Circle = Circle;\n\nvar Sector = __webpack_require__(1110);\n\nexports.Sector = Sector;\n\nvar Ring = __webpack_require__(1111);\n\nexports.Ring = Ring;\n\nvar Polygon = __webpack_require__(1112);\n\nexports.Polygon = Polygon;\n\nvar Polyline = __webpack_require__(1115);\n\nexports.Polyline = Polyline;\n\nvar Rect = __webpack_require__(1116);\n\nexports.Rect = Rect;\n\nvar Line = __webpack_require__(1117);\n\nexports.Line = Line;\n\nvar BezierCurve = __webpack_require__(1118);\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = __webpack_require__(1119);\n\nexports.Arc = Arc;\n\nvar CompoundPath = __webpack_require__(1120);\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = __webpack_require__(1073);\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = __webpack_require__(1121);\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = __webpack_require__(986);\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n/***/ }),\n\n/***/ 980:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n/***/ }),\n\n/***/ 981:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar formatUtil = __webpack_require__(984);\n\nvar nubmerUtil = __webpack_require__(980);\n\nvar Model = __webpack_require__(988);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;\n\n/***/ }),\n\n/***/ 982:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(23)))\n\n/***/ }),\n\n/***/ 983:\n/***/ (function(module, exports) {\n\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n/***/ }),\n\n/***/ 984:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar textContain = __webpack_require__(992);\n\nvar numberUtil = __webpack_require__(980);\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n/***/ }),\n\n/***/ 985:\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 986:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(983);\n\nvar matrix = __webpack_require__(993);\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 987:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1017);\n\nvar zrUtil = __webpack_require__(977);\n\nvar PathProxy = __webpack_require__(1006);\n\nvar pathContain = __webpack_require__(1105);\n\nvar Pattern = __webpack_require__(1046);\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 988:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar env = __webpack_require__(985);\n\nvar clazzUtil = __webpack_require__(991);\n\nvar lineStyleMixin = __webpack_require__(1101);\n\nvar areaStyleMixin = __webpack_require__(1102);\n\nvar textStyleMixin = __webpack_require__(1103);\n\nvar itemStyleMixin = __webpack_require__(1122);\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 989:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar BoundingRect = __webpack_require__(986);\n\nvar _number = __webpack_require__(980);\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = __webpack_require__(984);\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n/***/ }),\n\n/***/ 990:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(977);\n\nvar Model = __webpack_require__(988);\n\nvar componentUtil = __webpack_require__(1026);\n\nvar clazzUtil = __webpack_require__(991);\n\nvar layout = __webpack_require__(989);\n\nvar boxLayoutMixin = __webpack_require__(1123);\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 991:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(982);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(977);\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n/***/ }),\n\n/***/ 992:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(986);\n\nvar imageHelper = __webpack_require__(1025);\n\nvar _util = __webpack_require__(977);\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n/***/ }),\n\n/***/ 993:\n/***/ (function(module, exports) {\n\n/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n/***/ }),\n\n/***/ 994:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var _config = __webpack_require__(982);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(977);\n\nvar Model = __webpack_require__(988);\n\nvar DataDiffer = __webpack_require__(1012);\n\nvar modelUtil = __webpack_require__(981);\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(23)))\n\n/***/ }),\n\n/***/ 995:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(982);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(977);\n\nvar textContain = __webpack_require__(992);\n\nvar OrdinalScale = __webpack_require__(1132);\n\nvar IntervalScale = __webpack_require__(1019);\n\nvar Scale = __webpack_require__(1013);\n\nvar numberUtil = __webpack_require__(980);\n\n__webpack_require__(1133);\n\n__webpack_require__(1134);\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n/***/ }),\n\n/***/ 996:\n/***/ (function(module, exports) {\n\nvar features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;\n\n/***/ }),\n\n/***/ 997:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Eventful = __webpack_require__(1000);\n\nexports.Dispatcher = Eventful;\n\nvar env = __webpack_require__(985);\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n/***/ }),\n\n/***/ 998:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(983);\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n/***/ }),\n\n/***/ 999:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(982);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(977);\n\nvar env = __webpack_require__(985);\n\nvar _format = __webpack_require__(984);\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = __webpack_require__(991);\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = __webpack_require__(981);\n\nvar ComponentModel = __webpack_require__(990);\n\nvar colorPaletteMixin = __webpack_require__(1052);\n\nvar _layout = __webpack_require__(989);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/LineReact.cb314362.chunk.js","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Eventful.js\n// module id = 1000\n// module chunks = 0 1 2","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/color.js\n// module id = 1001\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/symbol.js\n// module id = 1002\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/completeDimensions.js\n// module id = 1003\n// module chunks = 0 1 2","var _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/lang.js\n// module id = 1004\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/CoordinateSystem.js\n// module id = 1005\n// module chunks = 0 1 2","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/PathProxy.js\n// module id = 1006\n// module chunks = 0 1 2","var ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/throttle.js\n// module id = 1007\n// module chunks = 0 1 2","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/container/Group.js\n// module id = 1008\n// module chunks = 0 1 2","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/config.js\n// module id = 1009\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 1010\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/view/Chart.js\n// module id = 1011\n// module chunks = 0 1 2","function defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/DataDiffer.js\n// module id = 1012\n// module chunks = 0 1 2","var clazzUtil = require(\"../util/clazz\");\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Scale.js\n// module id = 1013\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 1014\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createListFromArray.js\n// module id = 1015\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/Axis.js\n// module id = 1016\n// module chunks = 0 1 2","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Displayable.js\n// module id = 1017\n// module chunks = 0 1 2","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Gradient.js\n// module id = 1018\n// module chunks = 0 1 2","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Interval.js\n// module id = 1019\n// module chunks = 0 1 2","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisBuilder.js\n// module id = 1020\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisView.js\n// module id = 1021\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/log.js\n// module id = 1022\n// module chunks = 0 1 2","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/timsort.js\n// module id = 1023\n// module chunks = 0 1 2","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Image.js\n// module id = 1024\n// module chunks = 0 1 2","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/image.js\n// module id = 1025\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/component.js\n// module id = 1026\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 1027\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js\n// module id = 1028\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/helper.js\n// module id = 1029\n// module chunks = 0 1 2","var ComponentView = require(\"../../view/Component\");\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/DataZoomView.js\n// module id = 1030\n// module chunks = 0 1 2","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/zrender.js\n// module id = 1031\n// module chunks = 0 1 2","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/text.js\n// module id = 1032\n// module chunks = 0 1 2","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer.js\n// module id = 1033\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 1034\n// module chunks = 0 1 2","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Transformable.js\n// module id = 1035\n// module chunks = 0 1 2","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/bbox.js\n// module id = 1036\n// module chunks = 0 1 2","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Text.js\n// module id = 1037\n// module chunks = 0 1 2","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/view/Component.js\n// module id = 1038\n// module chunks = 0 1 2","/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/sliderMove.js\n// module id = 1039\n// module chunks = 0 1 2","function _default(seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n    var symbolSize = seriesModel.get('symbolSize');\n    data.setVisual({\n      legendSymbol: legendSymbol || symbolType,\n      symbol: symbolType,\n      symbolSize: symbolSize\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof symbolSize === 'function') {\n        data.each(function (idx) {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        });\n      }\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var itemSymbolType = itemModel.getShallow('symbol', true);\n        var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n        if (itemSymbolType != null) {\n          data.setItemVisual(idx, 'symbol', itemSymbolType);\n        }\n\n        if (itemSymbolSize != null) {\n          // PENDING Transform symbolSize ?\n          data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/symbol.js\n// module id = 1040\n// module chunks = 0 1","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/guid.js\n// module id = 1041\n// module chunks = 0 1 2","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Element.js\n// module id = 1042\n// module chunks = 0 1 2","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Animator.js\n// module id = 1043\n// module chunks = 0 1 2","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/LRU.js\n// module id = 1044\n// module chunks = 0 1 2","var STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Style.js\n// module id = 1045\n// module chunks = 0 1 2","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Pattern.js\n// module id = 1046\n// module chunks = 0 1 2","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/requestAnimationFrame.js\n// module id = 1047\n// module chunks = 0 1 2","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/roundRect.js\n// module id = 1048\n// module chunks = 0 1 2","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/util.js\n// module id = 1049\n// module chunks = 0 1 2","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/windingLine.js\n// module id = 1050\n// module chunks = 0 1 2","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/poly.js\n// module id = 1051\n// module chunks = 0 1 2","var _clazz = require(\"../../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/colorPalette.js\n// module id = 1052\n// module chunks = 0 1 2","var numberUtil = require(\"../util/number\");\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/helper.js\n// module id = 1053\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 1054\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/globalListener.js\n// module id = 1055\n// module chunks = 0 1 2","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/listComponent.js\n// module id = 1056\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/history.js\n// module id = 1057\n// module chunks = 0 1 2","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/gridSimple.js\n// module id = 1058\n// module chunks = 0 1","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 1059\n// module chunks = 0 1 2","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../axis/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 1060\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 1061\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 1062\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    this._data = legendData;\n    var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n      return series.name;\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        availableNames = availableNames.concat(data.mapArray(data.getName));\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 1063\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 1064\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/BrushController.js\n// module id = 1065\n// module chunks = 0 1 2","var IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/cursorHelper.js\n// module id = 1066\n// module chunks = 0 1 2","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, idx, isIgnore) {\n  var point = data.getItemLayout(idx); // Is an object\n  // if (point && point.hasOwnProperty('point')) {\n  //     point = point.point;\n  // }\n\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx)) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Array.<boolean>} [isIgnore]\n */\n\n\nsymbolDrawProto.updateData = function (data, isIgnore) {\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = {\n    itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label.normal'),\n    hoverLabelModel: seriesModel.getModel('label.emphasis'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data;\n\n  if (data) {\n    if (enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  }\n};\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 1067\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar findLabelValueDim = _labelHelper.findLabelValueDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\nvar normalLabelAccessPath = ['label', 'normal'];\nvar emphasisLabelAccessPath = ['label', 'emphasis'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  var valueDim = !useNameLabel && findLabelValueDim(data);\n\n  if (useNameLabel || valueDim != null) {\n    graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n      labelFetcher: seriesModel,\n      labelDataIndex: idx,\n      defaultText: useNameLabel ? data.getName(idx) : data.get(valueDim, idx),\n      isRectText: true,\n      autoColor: color\n    });\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/Symbol.js\n// module id = 1068\n// module chunks = 0 1","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/mixin/RectText.js\n// module id = 1070\n// module chunks = 0 1 2","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/line.js\n// module id = 1071\n// module chunks = 0 1 2","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/quadratic.js\n// module id = 1072\n// module chunks = 0 1 2","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/LinearGradient.js\n// module id = 1073\n// module chunks = 0 1 2","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\nvar _parseGeoJson = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/export.js\n// module id = 1074\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/parseGeoJson.js\n// module id = 1075\n// module chunks = 0 1 2","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/Region.js\n// module id = 1076\n// module chunks = 0 1 2","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/polygon.js\n// module id = 1077\n// module chunks = 0 1 2","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip.js\n// module id = 1078\n// module chunks = 0 1 2","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 1079\n// module chunks = 0 1 2","require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox.js\n// module id = 1081\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/interactionMutex.js\n// module id = 1082\n// module chunks = 0 1 2","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/BrushTargetManager.js\n// module id = 1083\n// module chunks = 0 1 2","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/brushHelper.js\n// module id = 1084\n// module chunks = 0 1 2","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js\n// module id = 1085\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\necharts.registerProcessor(function (ecModel, api) {\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // We calculate window and reset axis here but not in model\n    // init stage and not after action dispatch handler, because\n    // reset should be called after seriesData.restoreData.\n    dataZoomModel.eachTargetAxis(resetSingleAxis); // Caution: data zoom filtering is order sensitive when using\n    // percent range and no min/max/scale set on axis.\n    // For example, we have dataZoom definition:\n    // [\n    //      {xAxisIndex: 0, start: 30, end: 70},\n    //      {yAxisIndex: 0, start: 20, end: 80}\n    // ]\n    // In this case, [20, 80] of y-dataZoom should be based on data\n    // that have filtered by x-dataZoom using range of [30, 70],\n    // but should not be based on full raw data. Thus sliding\n    // x-dataZoom will change both ranges of xAxis and yAxis,\n    // while sliding y-dataZoom will only change the range of yAxis.\n    // So we should filter x-axis after reset x-axis immediately,\n    // and then reset y-axis and filter y-axis.\n\n    dataZoomModel.eachTargetAxis(filterSingleAxis);\n  });\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // Fullfill all of the range props so that user\n    // is able to get them from chart.getOption().\n    var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n    var percentRange = axisProxy.getDataPercentWindow();\n    var valueRange = axisProxy.getDataValueWindow();\n    dataZoomModel.setRawRange({\n      start: percentRange[0],\n      end: percentRange[1],\n      startValue: valueRange[0],\n      endValue: valueRange[1]\n    }, true);\n  });\n});\n\nfunction resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n}\n\nfunction filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js\n// module id = 1086\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js\n// module id = 1087\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisModelCreator.js\n// module id = 1088\n// module chunks = 0 1","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Handler.js\n// module id = 1089\n// module chunks = 0 1 2","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Draggable.js\n// module id = 1090\n// module chunks = 0 1 2","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Storage.js\n// module id = 1091\n// module chunks = 0 1 2","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Animatable.js\n// module id = 1092\n// module chunks = 0 1 2","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Clip.js\n// module id = 1093\n// module chunks = 0 1 2","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/easing.js\n// module id = 1094\n// module chunks = 0 1 2","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Painter.js\n// module id = 1095\n// module chunks = 0 1 2","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Layer.js\n// module id = 1096\n// module chunks = 0 1 2","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Animation.js\n// module id = 1097\n// module chunks = 0 1 2","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/dom/HandlerProxy.js\n// module id = 1098\n// module chunks = 0 1 2","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/GestureMgr.js\n// module id = 1099\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMinin = require(\"./mixin/colorPalette\");\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Global.js\n// module id = 1100\n// module chunks = 0 1 2","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/lineStyle.js\n// module id = 1101\n// module chunks = 0 1 2","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/areaStyle.js\n// module id = 1102\n// module chunks = 0 1 2","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/textStyle.js\n// module id = 1103\n// module chunks = 0 1 2","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/path.js\n// module id = 1104\n// module chunks = 0 1 2","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/path.js\n// module id = 1105\n// module chunks = 0 1 2","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/cubic.js\n// module id = 1106\n// module chunks = 0 1 2","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/arc.js\n// module id = 1107\n// module chunks = 0 1 2","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/transformPath.js\n// module id = 1108\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Circle.js\n// module id = 1109\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Sector.js\n// module id = 1110\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Ring.js\n// module id = 1111\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Polygon.js\n// module id = 1112\n// module chunks = 0 1 2","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 1113\n// module chunks = 0 1 2","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 1114\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Polyline.js\n// module id = 1115\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Rect.js\n// module id = 1116\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Line.js\n// module id = 1117\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 1118\n// module chunks = 0 1 2","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Arc.js\n// module id = 1119\n// module chunks = 0 1 2","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/CompoundPath.js\n// module id = 1120\n// module chunks = 0 1 2","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/RadialGradient.js\n// module id = 1121\n// module chunks = 0 1 2","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/itemStyle.js\n// module id = 1122\n// module chunks = 0 1 2","var _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/boxLayout.js\n// module id = 1123\n// module chunks = 0 1 2","var platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/globalDefault.js\n// module id = 1124\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/ExtensionAPI.js\n// module id = 1125\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/OptionManager.js\n// module id = 1126\n// module chunks = 0 1 2","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/preprocessor/backwardCompat.js\n// module id = 1127\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 1128\n// module chunks = 0 1 2","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/seriesColor.js\n// module id = 1129\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/loading/default.js\n// module id = 1130\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/helper.js\n// module id = 1131\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Ordinal.js\n// module id = 1132\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Time.js\n// module id = 1133\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Log.js\n// module id = 1134\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 1135\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 1136\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 1137\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 1138\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipView.js\n// module id = 1139\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 1140\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 1141\n// module chunks = 0 1 2","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = 1142\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  mergeDefaultAndTheme: function (option) {\n    ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      normal: {\n        borderColor: '#666',\n        color: 'none'\n      },\n      emphasis: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/ToolboxModel.js\n// module id = 1145\n// module chunks = 0 1 2","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getModel('normal').getItemStyle());\n        path.hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  updateLayout: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n    });\n  },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/ToolboxView.js\n// module id = 1146\n// module chunks = 0 1 2","var env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js\n// module id = 1147\n// module chunks = 0 1 2","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/MagicType.js\n// module id = 1148\n// module chunks = 0 1 2","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/DataView.js\n// module id = 1149\n// module chunks = 0 1 2","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom;\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js\n// module id = 1150\n// module chunks = 0 1 2","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoomSelect.js\n// module id = 1151\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    } // Culculate data window and data extent, and record them.\n\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, this.getTargetSeriesModels());\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n\n\n    var otherAxisModel = this.getOtherAxisModel();\n\n    if (dataZoomModel.get('$fromToolbox') && otherAxisModel && otherAxisModel.get('type') === 'category') {\n      filterMode = 'empty';\n    } // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n      if (filterMode === 'weakFilter') {\n        seriesData && seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        seriesData && each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            seriesData.filterSelf(dim, isInWindow);\n          }\n        });\n      }\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n        var seriesExtent = seriesData.getDataExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/AxisProxy.js\n// module id = 1152\n// module chunks = 0 1 2","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js\n// module id = 1153\n// module chunks = 0 1 2","var DataZoomView = require(\"./DataZoomView\");\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js\n// module id = 1154\n// module chunks = 0 1 2","var echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/Restore.js\n// module id = 1155\n// module chunks = 0 1 2","function _default(seriesType, ecModel) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    var dims = [];\n    var coordDims = coordSys.dimensions;\n\n    for (var i = 0; i < coordDims.length; i++) {\n      dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n    }\n\n    if (dims.length === 1) {\n      data.each(dims[0], function (x, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n      });\n    } else if (dims.length === 2) {\n      data.each(dims, function (x, y, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) || isNaN(y) ? [NaN, NaN] : coordSys.dataToPoint([x, y]));\n      }, true);\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/layout/points.js\n// module id = 1156\n// module chunks = 0 1","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./GridModel\");\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.getFormattedLabels();\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransfrom(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Grid.js\n// module id = 1157\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 1158\n// module chunks = 0 1","var _model = require(\"../../util/model\");\n\nvar otherDimToDataDim = _model.otherDimToDataDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction findLabelValueDim(data) {\n  var valueDim;\n  var labelDims = otherDimToDataDim(data, 'label');\n\n  if (labelDims.length) {\n    valueDim = labelDims[0];\n  } else {\n    // Get last value dim\n    var dimensions = data.dimensions.slice();\n    var dataType;\n\n    while (dimensions.length && (valueDim = dimensions.pop(), dataType = data.getDimensionInfo(valueDim).type, dataType === 'ordinal' || dataType === 'time')) {} // jshint ignore:line\n\n  }\n\n  return valueDim;\n}\n\nexports.findLabelValueDim = findLabelValueDim;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/labelHelper.js\n// module id = 1163\n// module chunks = 0 1","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/poly.js\n// module id = 1164\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisDefault.js\n// module id = 1165\n// module chunks = 0 1","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerVisual(zrUtil.curry(visualSymbol, 'line', 'circle', 'line'));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(dataSample, 'line'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line.js\n// module id = 1175\n// module chunks = 0 1","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      normal: {\n        position: 'top'\n      }\n    },\n    // itemStyle: {\n    //     normal: {},\n    //     emphasis: {}\n    // },\n    lineStyle: {\n      normal: {\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // areaStyle: {},\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/LineSeries.js\n// module id = 1176\n// module chunks = 0 1","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.3 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Array.<Array.<number>>} points\n * @private\n */\n\n\nfunction getStackedOnPoints(coordSys, data) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = 0;\n\n  if (!baseAxis.onZero) {\n    var extent = valueAxis.scale.getExtent();\n\n    if (extent[0] > 0) {\n      // Both positive\n      valueStart = extent[0];\n    } else if (extent[1] < 0) {\n      // Both negative\n      valueStart = extent[1];\n    } // If is one positive, and one negative, onZero shall be true\n\n  }\n\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  return data.mapArray([valueDim], function (val, idx) {\n    var stackedOnSameSign;\n    var stackedOn = data.stackedOn; // Find first stacked value with same sign\n\n    while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n      stackedOnSameSign = stackedOn;\n      break;\n    }\n\n    var stackedData = [];\n    stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n    stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n    return coordSys.dataToPoint(stackedData);\n  }, true);\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.normal.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    // Can only be x or y\n    if (visualMetaList[i].dimension < 2) {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta || coordSys.type !== 'cartesian2d') {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var dimension = visualMeta.dimension;\n  var dimName = data.dimensions[dimension];\n  var axis = coordSys.getAxis(dimName); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[dimName] = minCoord;\n  gradient[dimName + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n    var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n    var points = data.mapArray(data.getItemLayout, true);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var stackedOnPoints = getStackedOnPoints(coordSys, data);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOn = data.stackedOn;\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOn) {\n        var stackedOnSeries = stackedOn.hostModel;\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/LineView.js\n// module id = 1177\n// module chunks = 0 1","// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n\nfunction getStackedOnPoint(coordSys, data, idx) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = baseAxis.onZero ? 0 : valueAxis.scale.getExtent()[0];\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  var stackedOnSameSign;\n  var stackedOn = data.stackedOn;\n  var val = data.get(valueDim, idx); // Find first stacked value with same sign\n\n  while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n    stackedOnSameSign = stackedOn;\n    break;\n  }\n\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n  stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n  return coordSys.dataToPoint(stackedData);\n} // function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\n\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var dims = newCoordSys.dimensions;\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 1178\n// module chunks = 0 1","var samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType, ecModel, api) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var sampling = seriesModel.get('sampling');\n    var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n    if (coordSys.type === 'cartesian2d' && sampling) {\n      var baseAxis = coordSys.getBaseAxis();\n      var valueAxis = coordSys.getOtherAxis(baseAxis);\n      var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n      var size = extent[1] - extent[0];\n      var rate = Math.round(data.count() / size);\n\n      if (rate > 1) {\n        var sampler;\n\n        if (typeof sampling === 'string') {\n          sampler = samplers[sampling];\n        } else if (typeof sampling === 'function') {\n          sampler = sampling;\n        }\n\n        if (sampler) {\n          data = data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler);\n          seriesModel.setData(data);\n        }\n      }\n    }\n  }, this);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataSample.js\n// module id = 1179\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)), yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))];\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp), yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)];\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 1180\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 1181\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 1182\n// module chunks = 0 1","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/GridModel.js\n// module id = 1183\n// module chunks = 0 1","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis.js\n// module id = 1184\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"./cartesianAxisHelper\");\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/CartesianAxisView.js\n// module id = 1185\n// module chunks = 0 1","require(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/grid.js\n// module id = 1187\n// module chunks = 0 1","require(\"./legend\");\n\nrequire(\"./legend/ScrollableLegendModel\");\n\nrequire(\"./legend/ScrollableLegendView\");\n\nrequire(\"./legend/scrollableLegendAction\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legendScroll.js\n// module id = 1188\n// module chunks = 0 1","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js\n// module id = 1189\n// module chunks = 0 1","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendView.js\n// module id = 1190\n// module chunks = 0 1","var echarts = require(\"../../echarts\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/scrollableLegendAction.js\n// module id = 1191\n// module chunks = 0 1","import React from 'react'\nimport echarts from 'echarts/lib/echarts' //必须\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/grid'\nimport 'echarts/lib/chart/line'\nimport 'echarts/lib/component/legendScroll'\nimport 'echarts/lib/component/toolbox'\n\nexport default class LineReact extends React.Component {\n  \n  constructor(props) {\n    super(props);\n  }\n  \n  initPie = () => {\n    const { option={} } = this.props; //外部传入的data数据\n    let myChart = echarts.init(this.ID); //初始化echarts\n\n\n    //设置options\n    myChart.setOption(option)\n    window.onresize = function() {\n      myChart.resize()\n    }\n  }\n  \n  componentDidMount() {\n    //alert(1);\n    this.initPie()\n  }\n  \n  componentDidUpdate() {\n    //alert(2);\n    this.initPie()\n  }\n  \n  render() {\n    const { width=\"100%\", height=\"300px\" } = this.props\n    return <div ref={ID => this.ID = ID} style={{width, height}} id=\"line-chart\"></div>\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Echarts/LineReact.js","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/util.js\n// module id = 977\n// module chunks = 0 1 2","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar loadingDefault = require(\"./loading/default\");\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/echarts.js\n// module id = 978\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar Image = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = Image;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/graphic.js\n// module id = 979\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/number.js\n// module id = 980\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"./format\");\n\nvar nubmerUtil = require(\"./number\");\n\nvar Model = require(\"../model/Model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/model.js\n// module id = 981\n// module chunks = 0 1 2","// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/config.js\n// module id = 982\n// module chunks = 0 1 2","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/vector.js\n// module id = 983\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/format.js\n// module id = 984\n// module chunks = 0 1 2","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/env.js\n// module id = 985\n// module chunks = 0 1 2","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/BoundingRect.js\n// module id = 986\n// module chunks = 0 1 2","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Path.js\n// module id = 987\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Model.js\n// module id = 988\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/layout.js\n// module id = 989\n// module chunks = 0 1 2","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Component.js\n// module id = 990\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/clazz.js\n// module id = 991\n// module chunks = 0 1 2","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/text.js\n// module id = 992\n// module chunks = 0 1 2","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/matrix.js\n// module id = 993\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar modelUtil = require(\"../util/model\");\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/List.js\n// module id = 994\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisHelper.js\n// module id = 995\n// module chunks = 0 1 2","var features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/featureManager.js\n// module id = 996\n// module chunks = 0 1 2","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/event.js\n// module id = 997\n// module chunks = 0 1 2","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/curve.js\n// module id = 998\n// module chunks = 0 1 2","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Series.js\n// module id = 999\n// module chunks = 0 1 2"],"sourceRoot":""}