{"version":3,"sources":["../static/js/PieReact.7559485c.chunk.js","../node_modules/zrender/lib/core/PathProxy.js","../node_modules/zrender/lib/config.js","../node_modules/zrender/lib/container/Group.js","../node_modules/echarts/lib/view/Chart.js","../node_modules/echarts/lib/data/DataDiffer.js","../node_modules/echarts/lib/scale/Scale.js","../node_modules/echarts/lib/component/axisPointer/modelHelper.js","../node_modules/echarts/lib/model/mixin/makeStyleMapper.js","../node_modules/echarts/lib/coord/Axis.js","../node_modules/echarts/lib/chart/helper/createListFromArray.js","../node_modules/zrender/lib/graphic/Displayable.js","../node_modules/zrender/lib/graphic/Gradient.js","../node_modules/echarts/lib/util/throttle.js","../node_modules/echarts/lib/scale/Interval.js","../node_modules/echarts/lib/component/axis/AxisBuilder.js","../node_modules/echarts/lib/component/axis/AxisView.js","../node_modules/zrender/lib/graphic/helper/image.js","../node_modules/echarts/lib/util/component.js","../node_modules/zrender/lib/core/timsort.js","../node_modules/echarts/lib/coord/axisModelCommonMixin.js","../node_modules/echarts/lib/component/dataZoom/DataZoomModel.js","../node_modules/echarts/lib/component/dataZoom/helper.js","../node_modules/echarts/lib/component/dataZoom/DataZoomView.js","../node_modules/echarts/lib/component/axisPointer.js","../node_modules/echarts/lib/component/axisPointer/viewHelper.js","../node_modules/zrender/lib/mixin/Transformable.js","../node_modules/zrender/lib/core/log.js","../node_modules/zrender/lib/graphic/helper/text.js","../node_modules/zrender/lib/graphic/Image.js","../node_modules/echarts/lib/view/Component.js","../node_modules/echarts/lib/component/helper/sliderMove.js","../node_modules/zrender/lib/core/LRU.js","../node_modules/zrender/lib/graphic/Style.js","../node_modules/zrender/lib/Element.js","../node_modules/zrender/lib/core/guid.js","../node_modules/zrender/lib/animation/Animator.js","../node_modules/zrender/lib/graphic/helper/roundRect.js","../node_modules/zrender/lib/contain/util.js","../node_modules/zrender/lib/graphic/Pattern.js","../node_modules/zrender/lib/graphic/helper/poly.js","../node_modules/echarts/lib/model/mixin/colorPalette.js","../node_modules/zrender/lib/animation/requestAnimationFrame.js","../node_modules/echarts/lib/scale/helper.js","../node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","../node_modules/echarts/lib/component/axisPointer/globalListener.js","../node_modules/echarts/lib/component/helper/listComponent.js","../node_modules/echarts/lib/component/dataZoom/history.js","../node_modules/zrender/lib/core/bbox.js","../node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","../node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","../node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","../node_modules/echarts/lib/component/axis/cartesianAxisHelper.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","../node_modules/echarts/lib/component/helper/BrushController.js","../node_modules/echarts/lib/component/helper/cursorHelper.js","../node_modules/zrender/lib/graphic/mixin/RectText.js","../node_modules/zrender/lib/contain/line.js","../node_modules/zrender/lib/contain/quadratic.js","../node_modules/zrender/lib/contain/windingLine.js","../node_modules/zrender/lib/graphic/Text.js","../node_modules/zrender/lib/graphic/LinearGradient.js","../node_modules/zrender/lib/zrender.js","../node_modules/echarts/lib/component/tooltip.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/processor/dataFilter.js","../node_modules/echarts/lib/component/toolbox.js","../node_modules/echarts/lib/component/helper/interactionMutex.js","../node_modules/echarts/lib/component/helper/BrushTargetManager.js","../node_modules/echarts/lib/component/helper/brushHelper.js","../node_modules/echarts/lib/component/dataZoom/typeDefaulter.js","../node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js","../node_modules/echarts/lib/component/dataZoom/dataZoomAction.js","../node_modules/echarts/lib/model/Global.js","../node_modules/echarts/lib/model/mixin/lineStyle.js","../node_modules/echarts/lib/model/mixin/areaStyle.js","../node_modules/echarts/lib/model/mixin/textStyle.js","../node_modules/zrender/lib/tool/path.js","../node_modules/zrender/lib/mixin/Animatable.js","../node_modules/zrender/lib/animation/Clip.js","../node_modules/zrender/lib/animation/easing.js","../node_modules/zrender/lib/contain/path.js","../node_modules/zrender/lib/contain/cubic.js","../node_modules/zrender/lib/contain/arc.js","../node_modules/zrender/lib/tool/transformPath.js","../node_modules/zrender/lib/graphic/shape/Circle.js","../node_modules/zrender/lib/graphic/shape/Sector.js","../node_modules/zrender/lib/graphic/shape/Ring.js","../node_modules/zrender/lib/graphic/shape/Polygon.js","../node_modules/zrender/lib/graphic/helper/smoothSpline.js","../node_modules/zrender/lib/graphic/helper/smoothBezier.js","../node_modules/zrender/lib/graphic/shape/Polyline.js","../node_modules/zrender/lib/graphic/shape/Rect.js","../node_modules/zrender/lib/graphic/shape/Line.js","../node_modules/zrender/lib/graphic/shape/BezierCurve.js","../node_modules/zrender/lib/graphic/shape/Arc.js","../node_modules/zrender/lib/graphic/CompoundPath.js","../node_modules/zrender/lib/graphic/RadialGradient.js","../node_modules/echarts/lib/model/mixin/itemStyle.js","../node_modules/echarts/lib/model/mixin/boxLayout.js","../node_modules/echarts/lib/model/globalDefault.js","../node_modules/echarts/lib/ExtensionAPI.js","../node_modules/echarts/lib/model/OptionManager.js","../node_modules/echarts/lib/preprocessor/backwardCompat.js","../node_modules/echarts/lib/preprocessor/helper/compatStyle.js","../node_modules/zrender/lib/Handler.js","../node_modules/zrender/lib/mixin/Draggable.js","../node_modules/zrender/lib/Storage.js","../node_modules/zrender/lib/animation/Animation.js","../node_modules/zrender/lib/dom/HandlerProxy.js","../node_modules/zrender/lib/core/GestureMgr.js","../node_modules/zrender/lib/Painter.js","../node_modules/zrender/lib/Layer.js","../node_modules/echarts/lib/visual/seriesColor.js","../node_modules/echarts/lib/loading/default.js","../node_modules/echarts/lib/scale/Ordinal.js","../node_modules/echarts/lib/scale/Time.js","../node_modules/echarts/lib/scale/Log.js","../node_modules/echarts/lib/helper.js","../node_modules/echarts/lib/component/axisPointer/axisTrigger.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","../node_modules/echarts/lib/component/tooltip/TooltipModel.js","../node_modules/echarts/lib/component/tooltip/TooltipView.js","../node_modules/echarts/lib/component/tooltip/TooltipContent.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/helper/selectableMixin.js","../node_modules/echarts/lib/visual/dataColor.js","../node_modules/echarts/lib/component/toolbox/ToolboxModel.js","../node_modules/echarts/lib/component/toolbox/ToolboxView.js","../node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js","../node_modules/echarts/lib/component/toolbox/feature/MagicType.js","../node_modules/echarts/lib/component/toolbox/feature/DataView.js","../node_modules/echarts/lib/component/toolbox/feature/DataZoom.js","../node_modules/echarts/lib/component/dataZoomSelect.js","../node_modules/echarts/lib/component/dataZoom/AxisProxy.js","../node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js","../node_modules/echarts/lib/component/dataZoom/SelectZoomView.js","../node_modules/echarts/lib/component/toolbox/feature/Restore.js","../node_modules/echarts/lib/action/createDataSelectAction.js","../node_modules/echarts/lib/chart/pie.js","../node_modules/echarts/lib/chart/pie/PieSeries.js","../node_modules/echarts/lib/chart/pie/PieView.js","../node_modules/echarts/lib/chart/pie/pieLayout.js","../node_modules/echarts/lib/chart/pie/labelLayout.js","Echarts/PieReact.js","../node_modules/zrender/lib/core/util.js","../node_modules/echarts/lib/echarts.js","../node_modules/echarts/lib/util/graphic.js","../node_modules/echarts/lib/util/number.js","../node_modules/echarts/lib/util/model.js","../node_modules/zrender/lib/core/vector.js","../node_modules/echarts/lib/util/format.js","../node_modules/zrender/lib/core/env.js","../node_modules/echarts/lib/model/Model.js","../node_modules/zrender/lib/graphic/Path.js","../node_modules/echarts/lib/util/layout.js","../node_modules/zrender/lib/core/BoundingRect.js","../node_modules/echarts/lib/model/Component.js","../node_modules/echarts/lib/util/clazz.js","../node_modules/zrender/lib/contain/text.js","../node_modules/zrender/lib/core/matrix.js","../node_modules/echarts/lib/data/List.js","../node_modules/echarts/lib/coord/axisHelper.js","../node_modules/echarts/lib/component/toolbox/featureManager.js","../node_modules/zrender/lib/core/event.js","../node_modules/zrender/lib/core/curve.js","../node_modules/zrender/lib/mixin/Eventful.js","../node_modules/zrender/lib/tool/color.js","../node_modules/echarts/lib/model/Series.js","../node_modules/echarts/lib/data/helper/completeDimensions.js","../node_modules/echarts/lib/util/symbol.js","../node_modules/echarts/lib/lang.js","../node_modules/echarts/lib/CoordinateSystem.js"],"names":["webpackJsonp","1000","module","exports","__webpack_require__","curve","vec2","bbox","BoundingRect","dpr","devicePixelRatio","CMD","M","L","C","Q","A","Z","R","min","max","min2","max2","mathMin","Math","mathMax","mathCos","cos","mathSin","sin","mathSqrt","sqrt","mathAbs","abs","hasTypedArray","Float32Array","PathProxy","notSaveData","this","_saveData","data","_ctx","prototype","constructor","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","setScale","sx","sy","getContext","beginPath","ctx","moveTo","x","y","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","x1","y1","x2","y2","x3","y3","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","cx","cy","r","startAngle","endAngle","anticlockwise","arcTo","radius","rect","w","h","closePath","x0","y0","fill","toStatic","stroke","setLineDash","lineDash","Array","lineDashSum","i","length","setLineDashOffset","offset","len","setData","appendPath","path","appendSize","appendPathData","k","cmd","arguments","_expandData","_prevCmd","newData","dash","idx","dashSum","dx","dy","dist","nDash","t","cubicAt","bezierLen","tmpLen","getBoundingRect","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","width","height","rebuildPath","d","ux","uy","theta","dTheta","psi","fs","scaleX","scaleY","isEllipse","translate","rotate","scale","1001","window","config","debugMode","1002","zrUtil","Element","Group","opts","call","key","hasOwnProperty","_children","__storage","__dirty","isGroup","type","silent","children","slice","childAt","childOfName","name","childCount","add","child","parent","push","_doAdd","addBefore","nextSibling","indexOf","splice","remove","storage","zr","__zr","addToStorage","addChildrenToStorage","refresh","delFromStorage","delChildrenFromStorage","removeAll","eachChild","cb","context","traverse","dirty","includeChildren","tmpRect","tmpMat","ignore","invisible","childRect","transform","getLocalTransform","copy","applyTransform","clone","union","inherits","1003","Chart","group","uid","componentUtil","getUID","elSetState","el","state","trigger","toggleHighlight","payload","dataIndex","modelUtil","queryDataIndex","each","normalizeToArray","dataIdx","getItemGraphicEl","eachItemGraphicEl","clazzUtil","init","ecModel","api","render","seriesModel","highlight","getData","downplay","dispose","chartProto","updateView","updateLayout","updateVisual","enableClassExtend","enableClassManagement","registerWhenExtend","1004","defaultKeyGetter","item","DataDiffer","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","arr","map","keyArr","keyGetterName","dataDiffer","existence","func","_add","update","_update","_remove","execute","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","unshift","j","1005","Scale","setting","_setting","_extent","Infinity","_interval","apply","scaleProto","parse","val","getSetting","contain","extent","normalize","unionExtent","other","unionExtentFromData","dim","getDataExtent","getExtent","setExtent","start","end","thisExtent","isNaN","getTicksLabels","labels","ticks","getTicks","getLabel","isBlank","_isBlank","setBlank","1006","collectAxesInfo","result","globalTooltipModel","getComponent","globalAxisPointerModel","linksOption","get","linkGroups","getCoordinateSystems","coordSys","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axis","axisPointerModel","model","getModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","axesInfo","useHandle","seriesModels","axesInfoInCoordSys","seriesInvolved","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysAxesInfo","coordSysMap","coordSysModel","getAxes","curry","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","label","show","crossStyle","lineStyle","defaults","textStyle","Model","collectSeriesInfo","eachSeries","coordinateSystem","seriesTooltipTrigger","seriesTooltipShow","getAxis","seriesDataCount","count","axisModel","linkOption","checkPropInLink","id","componentIndex","linkPropValue","axisPropValue","isArray","helper","collect","fixValue","getAxisInfo","option","status","value","reverse","getAxisPointerModel","1007","properties","excludes","includes","style","propName","getShallow","1008","fixExtentWithBands","nTick","size","margin","numberUtil","linearMap","axisHelper","normalizedExtent","Axis","inverse","onBand","_labelInterval","coord","containData","dataToCoord","getPixelPrecision","dataExtent","clamp","coordToData","pointToData","point","getTicksCoords","alignWithLabel","bands","getBands","coords","getLabelsCoords","span","getBandWidth","axisExtent","getLabelInterval","labelInterval","labelModel","interval","isHorizontal","getAxisLabelInterval","getFormattedLabels","getFont","1009","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","getDataItemValue","createListFromArray","__DEV__","Error","coordSysName","creator","creators","registeredCoordSys","CoordinateSystem","completeDimOpt","encodeDef","dimsDef","dimensions","getDimensionsInfo","completeDimensions","categoryIndex","list","List","nameList","createNameList","categories","dimValueGetter","itemOpt","dimName","dimIndex","isDataItemOption","hasItemOption","converDataValue","categoryAxesModels","getCategories","initData","isStackable","axisType","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","queryComponents","mainType","index","xAxisModel","yAxisModel","retrieve","xAxisType","yAxisType","stackable","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","angle","geo","1010","Displayable","Style","_rect","__clipPaths","RectText","z","z2","zlevel","draggable","dragging","culling","cursor","rectHover","progressive","beforeBrush","afterBrush","brush","prevEl","rectContain","transformCoordToLocal","animateStyle","loop","animate","attrKV","set","setStyle","useStyle","obj","mixin","1011","Gradient","colorStops","addColorStop","color","1012","lib","ORIGIN_METHOD","RATE","throttle","fn","delay","debounce","exec","lastExec","Date","getTime","timer","scope","args","currCall","diff","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","clear","debounceDelay","createOrUpdate","fnAttr","rate","throttleType","originFn","lastThrottleType","1013","formatUtil","roundNumber","round","IntervalScale","extend","_intervalPrecision","parseFloat","getInterval","setInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","opt","precision","getPrecisionSafe","addCommas","niceTicks","splitNumber","minInterval","maxInterval","isFinite","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","niceExtent","expandSize","fixMax","fixMin","floor","ceil","create","1014","makeAxisEventDataBase","eventData","componentType","endTextLayout","textPosition","textRotate","textAlign","textVerticalAlign","rotationDiff","remRadian","rotation","onLeft","isRadianAroundZero","PI","isSilent","tooltipOpt","fixMinMaxLabelShow","labelEls","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","next","labelLayout","firstRect","nextRect","mRotationBack","matrix","identity","mul","intersect","isNameLocationCenter","nameLocation","buildAxisTick","axisBuilder","tickModel","lineStyleModel","tickLen","tickInterval","ticksCoords","pt1","pt2","_transform","ticksCnt","ifIgnoreOnTick","tickCoord","tickDirection","v2ApplyTransform","tickEl","graphic","Line","subPixelOptimizeLine","anid","shape","getLineStyle","buildAxisLabel","axisLabelShow","labelMargin","labelRotation","labelRotate","innerTextLayout","labelDirection","categoryData","triggerEvent","tickVal","itemLabelModel","textColor","getTextColor","pos","labelOffset","labelStr","textEl","Text","position","setTextStyle","text","textFill","targetType","_dumbGroup","updateTransform","decomposeTransform","AxisBuilder","nameDirection","dumbGroup","hasBuilder","builders","getGroup","axisLine","lineCap","strokeContainThreshold","axisTickLabel","axisName","textStyleModel","gap","gapSignal","nameRotation","axisNameAvailableWidth","textFont","truncateOpt","ellipsis","maxWidth","nameTruncateMaxWidth","truncatedText","truncateText","minChar","placeholder","formatterParams","$vars","__fullText","__truncatedText","tooltip","content","formatter","axisRotation","textRotation","direction","rawTick","1015","updateAxisPointer","axisView","forceRender","Clazz","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","extendComponentView","superApply","force","axisPointerClazz","registerAxisPointerClass","clazz","1016","imageOnLoad","cachedImgObj","__cachedImgObj","onload","pending","pendingWrap","cbPayload","hostEl","LRU","globalImageCache","findExistImage","newImageOrSrc","image","createOrUpdateImage","__zrImageSrc","isImageReady","Image","put","src","1017","parseClassType","base","random","join","enableSubTypeDefaulter","entity","subTypeDefaulters","registerSubTypeDefaulter","defaulter","main","determineSubType","componentTypeMain","hasSubTypes","enableTopologicalTravel","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","stack","removeEdgeAndAdd","targetNameSet","currComponentType","pop","currVertex","isInTargetNameSet","1018","minRunLength","n","DEFAULT_MIN_MERGE","makeAscendingRun","array","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","left","right","gallopLeft","hint","lastOffset","maxOffset","tmp","m","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","sort","remaining","ts","minRun","1019","getName","isObject","getMin","origin","rangeStart","eqNaN","getMax","rangeEnd","getNeedCrossZero","getCoordSysModel","noop","setRange","resetRange","1020","retrieveRaw","ret","updateRangeUse","dataZoomModel","rawOption","rangePropMode","_rangePropMode","rangeModeInOption","names","percentSpecified","valueSpecified","env","echarts","AxisProxy","eachAxisDim","DataZoomModel","extendComponentModel","dependencies","defaultOption","orient","xAxisIndex","yAxisIndex","filterMode","startValue","endValue","minSpan","maxSpan","minValueSpan","maxValueSpan","rangeMode","parentModel","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","mergeDefaultAndTheme","doInit","mergeOption","newOption","merge","thisOption","canvasSupported","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","dependentModels","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxisIndex","axisIndices","axisModels","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","animation","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","indices","getAxisProxy","getAxisModel","setRawRange","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getRangePropMode","1021","AXIS_DIMS","COORDS","isCoordSupported","coordType","createNameEach","attrs","capitalNames","capitalFirst","capitalAttrs","nameObj","capital","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","isNodeAbsorded","node","nodes","isLinked","hasLink","edgeType","edgeId","records","absorb","sourceNode","processSingleNode","existsLink","1022","ComponentView","getTargetCoordInfo","save","coordModel","store","coordIndex","coordSysLists","1023","axisTrigger","registerPreprocessor","link","registerProcessor","PRIORITY","PROCESSOR","STATISTIC","registerAction","event","1024","confineInContainer","viewWidth","getWidth","viewHeight","getHeight","textContain","buildElStyle","axisPointerType","styleModel","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","normalizeCssArray","font","textRect","align","verticalAlign","bgColor","lineWidth","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","seriesDataIndices","params","getAxisRawValue","seriesData","idxItem","series","getSeriesByIndex","seriesIndex","dataIndexInside","dataParams","getDataParams","isString","replace","isFunction","getTransformedPosition","layoutInfo","buildCartesianSingleLabelElOption","textLayout","makeLineShape","p1","p2","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","1025","isNotAroundZero","EPSILON","vector","mIdentity","Transformable","transformableProto","needLocalTransform","parentHasTransform","invTransform","invert","setTransform","restoreTransform","tmpTransform","atan2","getGlobalScale","v2","transformCoordToGlobal","target","1026","console","log","1027","normalizeStyle","makeFont","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","textPadding","util","renderPlainText","setCtx","DEFAULT_FONT","contentBlock","__textCotentBlock","parsePlainText","truncate","outerHeight","textLines","lines","lineHeight","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","adjustTextY","textX","textY","needDrawBg","needDrawBackground","textWidth","outerWidth","boxX","adjustTextX","drawBackground","getTextXForPadding","textShadowBlur","textShadowColor","textShadowOffsetX","textShadowOffsetY","textStrokeWidth","textStroke","getStroke","getFill","strokeText","fillText","renderRichText","parseRichText","drawRichText","contentWidth","xLeft","lineTop","xRight","token","line","tokens","tokenCount","usedWidth","leftIndex","lineXLeft","lineXRight","rightIndex","placeToken","textOrigin","tokenStyle","rich","styleName","isLineHolder","textHeight","retrieve3","retrieve2","textBackgroundColor","textBorderWidth","textBorderColor","isPlainBg","textBoxShadowBlur","textBoxShadowColor","textBoxShadowOffsetX","textBoxShadowOffsetY","textBorderRadius","roundRectHelper","buildPath","imageHelper","onBgImageLoaded","drawImage","blockHeiht","parsePercent","res","adjustTextPositionOnRect","textDistance","textOffset","prop","maxValue","lastIndexOf","center","top","bottom","middle","normalizeTextStyle","renderText","needDrawText","1028","ZImage","bind","_image","aspect","sWidth","sHeight","drawRectText","1029","Component","componentModel","componentProto","1030","getSpanSign","handleEnds","handleIndex","sign","restrict","delta","extentSpan","originalDistSign","extentMinSpan","realExtent","currDistSign","1031","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","prev","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","1032","createLinearGradient","global","createRadialGradient","STYLE_COMMON_PROPS","host","extendFrom","opacity","lineDashOffset","strokeNoScale","fontStyle","fontWeight","fontSize","fontFamily","textTag","textLineHeight","transformText","blend","prevStyle","firstDraw","fillStyle","strokeStyle","globalAlpha","globalCompositeOperation","hasStroke","getLineScale","hasFill","otherStyle","overwrite","newStyle","getGradient","method","canvasGradient","styleProto","1033","guid","Eventful","Animatable","clipPath","drift","beforeUpdate","afterUpdate","hide","attr","setClipPath","addSelfToZr","removeClipPath","__clipTarget","removeSelfFromZr","animators","addAnimator","removeAnimator","1034","idStart","1035","defaultGetter","defaultSetter","interpolateNumber","p0","percent","interpolateString","interpolateArray","out","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","p3","t2","t3","catmullRomInterpolate","v0","v1","cloneValue","isArrayLike","rgba2String","rgba","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","a","b","time","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","range","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","props","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","self","clipCount","addClip","oldOnFrame","stop","forwardToLast","clipList","removeClip","done","getClips","1036","r1","r2","r3","r4","total","1037","PI2","normalizeRadian","1038","Pattern","repeat","getCanvasPattern","createPattern","1039","smoothSpline","smoothBezier","points","smooth","controlPoints","smoothConstraint","cp1","cp2","p","l","1040","classUtil","clearColorPalette","getColorFromPalette","colorIdx","colorNameMap","colorPalette","1041","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","1042","nice","fixExtent","tick","1043","finder","getTooltipPosition","dataToPoint","getValues","coordDimToDataDim","1044","initGlobalListeners","useHandler","eventType","on","e","dis","makeDispatchAction","record","dispatchAction","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","handler","currTrigger","pendingList","makeGetter","globalListener","register","getZr","unregister","1045","layout","boxLayoutParams","getBoxLayoutParams","padding","viewportSize","getLayoutRect","box","positionElement","makeBackground","getItemStyle","Rect","1046","giveStore","ATTR","history","newSnapshot","batchItem","dataZoomId","subType","percentRange","snapshot","1049","extremity","fromPoints","xDim","yDim","cubicExtrema","quadraticExtremum","quadraticAt","tx","ty","vec2Min","vec2Max","1050","shadowTemp","orignalBrush","browser","ie","version","modified","clipPaths","1051","getCartesian","grid","getAxisDimIndex","BaseAxisPointer","viewHelper","cartesianAxisHelper","CartesianAxisPointer","makeElOption","otherExtent","getOtherAxis","getGlobalExtent","pixelValue","toGlobalCoord","elStyle","pointerOption","pointerShapeBuilder","graphicKey","pointer","getHandleTransform","labelInside","updateHandleTransform","currPosition","cursorOtherValue","cursorPoint","tooltipOptions","tooltipOption","targetShape","shadow","bandWidth","1052","updateProps","animationModel","moveAnimation","propsEqual","lastProp","stopAnimation","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","eventTool","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","_api","handle","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerEl","handleModel","isInit","createIcon","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","_doDispatchAxisPointer","payloadInfo","axisDim","doClear","buildLabel","1053","gridModel","rawAxisPosition","axisPosition","onZero","getRect","rectBound","axisOffset","posBound","otherAxis","onZeroAxisIndex","onZeroCoord","dirMap","1054","LegendModel","layoutMode","ignoreSize","selected","superCall","optionUpdated","_updateData","legendData","_data","hasSelected","isSelected","select","dataItem","availableNames","getSeries","legendDataProvider","concat","mapArray","_availableNames","unSelect","toggleSelected","backgroundColor","borderColor","borderRadius","borderWidth","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","1055","dispatchSelectAction","dispatchHighlightAction","dataName","getDisplayList","useHoverLayer","seriesName","dispatchDownplayAction","symbolCreator","listComponentHelper","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","positionInfo","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","createHashMap","selectMode","itemModel","newline","getSeriesByName","getVisual","legendSymbolType","symbolType","_createItem","eachRawSeries","indexOfName","getItemVisual","warn","itemGroup","itemIcon","tooltipModel","legendGlobalTooltipModel","createSymbol","hitRect","legendIndex","setHoverStyle","__legendDataIndex","contentRect","1056","BrushController","assert","_zr","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_mounted","_uid","baseUID","_handlers","mouseHandlers","eventName","doEnableBrush","controller","brushOption","interactionMutex","take","MUTEX_RESOURCE_KEY","brushType","DEFAULT_BRUSH_OPT","doDisableBrush","release","off","createCover","cover","coverRenderers","__brushOption","updateZ","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","COVER_Z","updateCoverAfterCreation","updateCommon","getPanelByPoint","localCursorPoint","panels","panel","pn","isTargetByCursor","getPanelByCover","panelId","clearCovers","covers","originalLength","areas","isEnd","removeOnClick","shouldShowCover","track","mathPow","UNSELECT_THRESHOLD","getTrackEnds","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","brushStyle","MIN_RESIZE_LINE_WIDTH","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","transformable","mainEl","globalDir","getGlobalDirection","CURSOR_MAP","setShape","pointsToRect","clipByPanel","formatRectRange","getTransform","localDirection","split","s","inverseMap","transformDirection","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","DIRECTION_MAP","driftPolygon","thisGroup","localD","localZero","xmin","ymin","resetCursor","currPanel","setCursorStyle","preventDefault","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","brushMode","determineBrushType","getCreatingRange","defaultBrushType","handleDragEnd","offsetX","offsetY","getLineRenderer","xyIndex","localTrack","ends","getLinearBrushOtherExtent","pow","ne","sw","nw","se","enableBrush","setPanels","panelOpts","mount","enableGlobalPan","eachCover","updateCovers","brushOptionList","getKey","tmpIdPrefix","oldGetKey","addOrUpdate","newIndex","oldIndex","newBrushOption","oldCovers","newCovers","unmount","mousedown","mousemove","mouseup","lineX","lineY","polygon","Polyline","Polygon","1057","IRRELEVANT_EXCLUDES","onIrrelevantElement","targetCoordSysModel","getComponentByElement","topTarget","1060","textHelper","restore","1061","containStroke","_l","_a","_b","1062","quadraticProjectPoint","1063","dir","1064","1065","LinearGradient","globalCoord","1066","delInstance","instances","Handler","Storage","Animation","HandlerProxy","useVML","painterCtors","canvas","zrender","dom","ZRender","getInstance","registerPainter","Ctor","rendererType","renderer","vml","painter","handerProxy","getViewportRoot","root","stage","flush","_needsRefresh","oldDelFromStorage","oldAddToStorage","getId","addRoot","delRoot","configLayer","zLevel","refreshImmediately","_needsRefreshHover","refreshHoverImmediately","addHover","refreshHover","removeHover","clearHover","resize","clearAnimation","pathToImage","cursorStyle","findHover","eventHandler","1067","1068","1069","seriesType","legendModels","findComponents","eachSeriesByType","filterSelf","1070","1071","getStore","resourceKey","userKey","isTaken","1072","BrushTargetManager","targetInfoList","_targetInfoList","info","foundCpts","parseFinder","targetInfoBuilders","builder","include","formatMinMax","minMax","includeMainTypes","INCLUDE_FINDER_MAIN_TYPES","axisConvert","axisNameIndex","to","rangeOrCoordRange","values","toLocalCoord","xyMinMax","NaN","axisDiffProcessor","refer","scales","getScales","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","getSize","sizeOrigin","brushHelper","COORD_CONVERTS","proto","setOutputRanges","matchOutputRanges","area","coordRange","coordRanges","coordConvert","__rangeOffset","diffProcessor","targetInfo","findTargetInfo","coordSyses","setInputRanges","rangeOffset","makePanelOpts","getDefaultBrushType","getPanelRect","makeRectPanelClipPath","makeRectIsTargetByCursor","makeLinearBrushOtherExtent","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","getCartesians","cartesian","panelRectBuilder","xAxisDeclared","yAxisDeclared","geoModels","geoModel","xminymin","xmaxymax","1073","normalizeRect","cursorHelper","graphicUtil","localPoints","clipPointsByRect","specifiedXYIndex","brushWidth","targetModel","1074","1075","resetSingleAxis","reset","filterSingleAxis","filterData","eachComponent","valueRange","1076","linkedNodesFinder","effectedModels","query","1080","mergeTheme","theme","themeItem","ComponentModel","hasClass","initBase","baseOption","OPTION_INNER_KEY","_componentsMap","_seriesIndices","_theme","globalDefault","getComponentsByTypes","componentsMap","types","newCptOption","existComponent","createSeriesIndices","filterBySubType","components","condition","filter","cpt","assertSeriesInitialized","GlobalModel","optionManager","_optionManager","setOption","optionPreprocessorFuncs","resetOption","optionChanged","mountOption","restoreData","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","mapResult","mappingToExists","makeIdAndName","keyInfo","exist","resultItem","ComponentModelClass","getClass","extraOpt","newCptTypes","componentOption","getAllClassMainTypes","getOption","isIdInner","getTheme","cpts","isIdArray","isNameArray","queryCond","q","indexAttr","idAttr","nameAttr","component","queryResult","oneSeries","getSeriesByType","rawSeriesIndex","eachRawSeriesByType","isSeriesFiltered","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","1081","getLineDash","lineType","dotSize","dashSize","1082","1083","PATH_COLOR","isEmphasis","getTextRect","1084","processArc","fa","psiDeg","xp","yp","lambda","f","cxp","cyp","vAngle","u","v","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","str","c","charAt","shift","ctlPtx","ctlPty","pathData","createPathOptions","pathProxy","transformPath","Path","vMag","acos","createFromString","extendFromString","mergePath","pathEls","pathList","pathEl","createPathProxy","__dirtyPath","pathBundle","1085","animatingShape","pathSplitted","animateTo","_animateToShallow","source","objShallow","propertyCount","1086","options","_life","_initialized","onrestart","_pausedTime","easingFuncs","step","globalTime","deltaTime","_startTime","easingFunc","schedule","fire","restart","_needsRemove","remainder","arg","1087","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","asin","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","1088","isAroundEqual","swapExtrema","extrema","windingCubic","nRoots","cubicRootAt","roots","y0_","y1_","nExtrema","unit","windingQuadratic","quadraticRootAt","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","_x","1089","cubicProjectPoint","1090","1091","nPoint","mathAtan2","1092","inBundle","1093","fixClipWithShadow","unitX","unitY","1094","1095","polyHelper","1096","interpolate","isLoop","distance","segs","w2","w3","1097","v2Min","v2Max","v2Scale","v2Distance","v2Add","constraint","prevPoint","nextPoint","cps","sub","d0","d1","sum","cp0","1098","1099","1100","pointAt","1101","someVectorAt","isTangent","cpx2","cpy2","cubicDerivativeAt","cpx1","cpy1","quadraticDerivativeAt","curveTool","quadraticSubdivide","cubicSubdivide","tangentAt","1102","1103","paths","_updatePathDirty","dirtyPath","1104","RadialGradient","1105","getBorderLineDash","1106","1107","platform","navigator","match","blendMode","animationDuration","animationEasing","animationEasingUpdate","progressiveThreshold","hoverLayerThreshold","useUTC","1108","ExtensionAPI","chartInstance","echartsAPIList","1109","OptionManager","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","toLowerCase","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","1110","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","isTheme","seriesOpt","clockWise","pointerColor","dataRange","visualMap","componentName","1111","compatItemStyle","itemStyleOpt","itemStyle","POSSIBLE_STYLES","normalItemStyleOpt","normal","emphasisItemStyleOpt","emphasis","compatTextStyle","labelOptSingle","TEXT_STYLE_OPTIONS","compatLabelTextStyle","labelOpt","processSeries","upperLabel","edgeLabel","markPoint","markLine","markArea","mpData","mlData","toArr","o","toObj","axes","axisOpt","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","regions","regionObj","1112","makeEventPacket","eveType","cancelBubble","zrX","zrY","gestureEvent","pinchX","pinchY","pinchScale","wheelDelta","zrDelta","zrByTouch","which","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","proxy","painterRoot","_hovered","_lastTouchMoment","_lastX","_lastY","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","nodeType","dispatch","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","1113","_dragStart","_drag","_dragEnd","param","draggingTarget","_draggingTarget","_y","dropTarget","lastDropTarget","_dropTarget","1114","shapeCompareFunc","timsort","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","displayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","displayableSortFunc","1115","Dispatcher","_clips","_running","_time","_pauseStart","clips","deferredEvents","deferredClips","_startLoop","1116","eventNameFix","firefox","processGesture","gestureMgr","_gestureMgr","gestureInfo","recognize","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","addEventListener","GestureMgr","pointerEventsSupported","touchEventsSupported","removeEventListener","normalizeEvent","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","touchmove","touchend","click","handlerDomProxyProto","1117","pointPair","eventUtil","_doTrack","_recognize","touches","trackItem","touch","clientToLocal","recognizers","pinch","pinchEnd","pinchPre","pinchCenter","1118","parseInt10","parseInt","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","document","createElement","cssText","Layer","Painter","singleCanvas","nodeName","toUpperCase","_opts","_singleCanvas","rootStyle","innerHTML","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","initContext","_domRoot","_getSize","appendChild","_progressiveLayers","_hoverlayer","_hoverElements","getType","isSingleCanvas","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","paintAll","_paintList","_startProgessive","hoverStyle","__hoverMir","elMirror","__from","hoverElements","from","hoverLayer","getLayer","originalEl","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","elCount","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","display","clearLayer","getRenderedCanvas","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","pixelRatio","clearColor","whIdx","cwh","plt","prb","stl","defaultView","getComputedStyle","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","clearRect","pathTransform","ImageShape","imgShape","1119","returnFalse","createDom","newDom","newDomStyle","setAttribute","domStyle","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","__currentValues","createBackBuffer","clearAll","haveMotionBLur","clearColorGradientOrPattern","__canvasGradient","fillRect","1120","encodeColor","colorAccessPath","visualColorAccessPath","setVisual","setItemVisual","getItemModel","1121","maskColor","mask","Arc","labelRect","animateShape","1122","OrdinalScale","rank","1123","scaleHelper","intervalScaleProto","mathCeil","mathFloor","bisect","TimeScale","stepLvl","_stepLvl","date","formatTime","ONE_HOUR","getFullYear","getMonth","getDate","approxTickNum","approxInterval","scaleLevelsLen","scaleLevels","level","yearSpan","timezoneOffset","getTimezoneOffset","parseDate","methodName","ONE_SECOND","ONE_MINUTE","ONE_DAY","1124","fixRoundingError","originalVal","roundingErrorFix","mathLog","LogScale","$constructor","_originalScale","originalScale","originalExtent","powVal","__fixMin","__fixMax","quantity","err","1125","symbolUtil","axisModelCommonMixin","createList","createScale","createScaleByModel","niceScaleExtent","mixinAxisModelCommonMethods","1126","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","containPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","minDist","minDiff","seriesNestestValue","dataIndices","dataDim","getAxisTooltipData","nestestValue","indicesOfNearest","getRawIndex","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","valueLabelOpt","outputAxesInfo","valItem","escapeConnect","lastHighlights","newHighlights","toHighlight","toDownplay","batch","1127","AxisPointerModel","triggerOn","shadowStyle","icon","1128","AxisPonterView","disopse","_model","1129","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","transitionDuration","enterable","extraCssText","1130","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","clientWidth","clientHeight","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","TooltipContent","axisPointerViewHelper","proxyRect","tooltipContent","getDom","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","setEnterable","_initGlobalListener","_keepShow","_tryShow","_hide","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","hideLater","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","formatTooltip","firstLine","encodeHTML","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","dataModel","dataType","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","formatTpl","cbTicket","setContent","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","newIndices","lastIdxItem","newIdxItem","1131","assembleTransition","duration","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","zrColor","toHex","borderName","camelCase","toCamelCase","container","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","onmouseleave","_hideDelay","currentStyle","viewportRootOffset","isShow","1132","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","1133","1134","updateSelectedMap","targetList","_targetList","_selectTargetMap","reduce","targetMap","1135","paletteScope","dataAll","getRawData","idxMap","rawIdx","filteredIdx","singleDataColor","1136","featureManager","ToolboxModel","feature","featureOpt","featureName","Feature","itemSize","showTitle","iconStyle","1137","isUserFeatureName","toolboxModel","process","featureNames","oldName","featureOpts","featureModel","onclick","features","unusable","createIconPaths","setIconStatus","iconName","iconPaths","iconStatus","iconStyleModel","icons","getIcons","titles","title","iconStr","__title","_features","_featureNames","titleText","needPutOnTop","topOffset","1138","SaveAsImage","lang","toolbox","saveAsImage","excludeComponents","$a","download","url","getConnectedDataURL","href","MouseEvent","edge","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","charCodeAt","blob","Blob","tab","open","write","evt","view","bubbles","cancelable","dispatchEvent","1139","MagicType","magicType","bar","tiled","availableIcons","seriesOptGenreator","seriesId","radioTypes","generateNewSeriesTypes","newSeriesOpt","categoryAxis","getAxesByScale","boundaryGap","radio","currentType","1140","groupSeries","seriesGroupByCategoryAxis","otherSeries","meta","baseAxis","getBaseAxis","valueAxis","assembleSeriesWithCategoryAxis","tables","valueAxisDim","headers","columns","ITEM_SPLITER","items","BLOCK_SPLITER","assembleOtherSeries","vals","argLen","getContentFromModel","trim","isTSVFormat","block","parseTSVContents","tsv","tsvLines","itemSplitRegex","header","parseListContents","hasName","parseContents","blockMetaList","blocks","blockMeta","axisKey","DataView","_dom","tryMergeDataOption","originalData","newVal","original","dataView","readOnly","optionToContent","contentToOption","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","close","viewMain","textarea","htmlOrDom","isDom","buttonContainer","buttonStyle","closeButton","refreshButton","keyCode","selectionStart","selectionEnd","substring","newSeriesOptList","1141","DataZoom","_brushController","_onBrush","_isZoomActive","retrieveAxisSetting","updateBackBtnStatus","updateZoomBtnStatus","zoomActive","dataZoomSelectActive","brushTargetManager","sliderMove","dataZoom","DATA_ZOOM_ID_BASE","zoom","back","handlers","nextActive","_dispatchZoomAction","setBatch","findDataZoom","minMaxSpan","getMinMaxSpan","found","dzModel","addForAxis","dataZoomOpt","axisIndicesName","givenAxisIndices","forEachComponent","newOpt","$fromToolbox","dataZoomOpts","toolboxOpt","1142","1143","calculateDataExtent","seriesExtent","fixExtentByAxis","axisDataLen","setAxisModel","isRestore","percentWindow","_percentWindow","valueWindow","_valueWindow","useOrigin","toFixed","setMinMaxSpan","_minMaxSpan","_dataZoomModel","valueSpan","_dataExtent","asc","_dimName","_axisIndex","getTargetSeriesModels","getOtherAxisModel","otherAxisDim","coordSysIndexName","isCartesian","foundOtherAxisModel","otherAxisModel","calculateDataWindow","percentExtent","boundValue","boundPercent","dataWindow","isInWindow","dataDims","leftOut","rightOut","hasValue","thisHasValue","thisLeftOut","thisRightOut","1144","1145","1146","Restore","1150","actionInfos","actionInfo","1158","registerVisual","registerLayout","1159","dataSelectableMixin","PieSeries","extendSeriesModel","_defaultLabelLine","getInitialData","valueList","getPercentWithPrecision","hostModel","defaultEmphasis","labelLine","labelLineNormalOpt","labelLineEmphasisOpt","legendHoverLink","hoverAnimation","minAngle","selectedOffset","hoverOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","animationType","1160","updateDataSelected","hasAnimation","toggleItemSelected","getItemLayout","midAngle","PiePiece","onEmphasis","polyline","hoverIgnore","onNormal","normalIgnore","sector","Sector","updateData","piePieceProto","firstCreate","sectorShape","initProps","itemStyleModel","visualColor","lineJoin","isAnimationEnabled","_updateLabel","labelText","linePoints","labelHoverModel","labelLineModel","labelLineHoverModel","setLabelStyle","labelFetcher","labelDataIndex","defaultText","autoColor","useInsideStyle","inside","Pie","sectorGroup","_sectorGroup","oldData","isFirstRender","onSectorClick","piePiece","setItemGraphicEl","newIdx","oldIdx","_createClipPath","itemLayout","1161","RADIAN","validDataCount","getSum","unitRadian","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","setItemLayout","1162","adjustSingleSide","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","labelPosition","labelLineLen","labelLineLen2","isLabelInside","getFormattedLabel","970","__webpack_exports__","_classCallCheck","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","Object","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__","__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default","__WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__","__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend__","__WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie__","__WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_toolbox__","_createClass","defineProperties","descriptor","protoProps","staticProps","PieReact","_React$Component","_this","getPrototypeOf","initPie","_props$option","undefined","myChart","ID","onresize","_this2","_props","_props$width","_props$height","ref","972","typeStr","objToString","TYPED_ARRAY","BUILTIN_OBJECT","isPrimitive","targetProp","sourceProp","isBuiltInObject","mergeAll","targetAndSources","overlay","createCanvas","baseClazz","F","clazzPrototype","forEach","nativeForEach","nativeMap","memo","nativeReduce","nativeFilter","find","nativeSlice","ownerDocument","value0","value1","value2","Function","message","setAsPrimitive","primitiveKey","HashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","toString","arrayProto","prefixedKey","removeKey","973","createRegisterEventWithLowercaseName","MessageCenter","ECharts","prioritySortFunc","prio","themeStorage","_throttledZrFlush","backwardCompat","_chartsViews","_chartsMap","_componentsViews","_coordSysMgr","CoordinateSystemManager","createExtensionAPI","_messageCenter","_initEvents","_pendingActions","visualFuncs","dataProcessorFuncs","_onframe","doConvertPixel","coordSysList","updateDirectly","ecIns","callView","__alive","__model","__viewId","doDispatchAction","payloadType","actionWrap","actions","cptType","updateMethod","IN_MAIN_PROCESS","payloads","batched","eventObj","eventObjBatch","isHighDown","action","OPTION_UPDATED","updateMethods","prepareAndUpdate","flushPendingActions","pendingActions","triggerUpdatedEvent","invokeUpdateMethod","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","viewId","classType","ChartView","__id","__ecComponentInfo","processData","stackSeriesData","stackedDataMap","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","doRender","componentView","chartView","frameDrawNum","needProgressive","ecInstance","coordSysMgr","modelInfo","enableConnect","updateConnectedChartsStatus","charts","STATUS_KEY","eventActionMap","actionType","connectedGroups","makeActionFromEvent","otherCharts","otherChart","SeriesModel","colorTool","ACTION_REG","one","echartsProto","notMerge","lazyUpdate","setTheme","getDevicePixelRatio","getDataURL","excludesComponentViews","toDataURL","groupId","canvasList","boundingRect","getBoundingClientRect","targetCanvas","img","convertToPixel","convertFromPixel","containPixel","models","visualType","defaultMainType","indexOfRawIndex","getViewOfComponentModel","getViewOfSeriesModel","colorArr","stringify","background","clearAllVisual","_loadingFX","showLoading","cfg","hideLoading","loadingEffects","weChat","MOUSE_EVENT_NAMES","eveName","isDisposed","_disposed","idBase","groupIdBase","existInstance","getInstanceByDom","connect","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","preprocessorFunc","priority","processorFunc","registerPostUpdate","postUpdateFunc","test","registerCoordinateSystem","getCoordinateSystemDimensions","coordSysCreator","layoutFunc","visualFunc","registerLoading","loadingFx","extendChartView","setCanvasCreator","number","format","FILTER","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","974","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","insideRollbackOpt","rollbackInsideStyle","applyInsideStyle","insideOriginalTextPosition","doSingleLeaveHover","normalStl","doEnterHover","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setTextStyleCommon","EMPTY_OBJ","isRectText","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","setTokenTextStyle","forceRich","richItemNameMap","isBlock","getAutoColor","originalTextPosition","insideRollback","disableBox","animateOrSetProps","isUpdate","animatableModel","postfix","animationDelay","getAnimationDelayParams","pathTool","Circle","Ring","BezierCurve","CompoundPath","extendShape","extendPath","makePath","resizePath","pathRect","calculateTransform","subPixelOptimize","subPixelOptimizeRect","originX","originY","originWidth","originHeight","positiveOrNegative","doubledPosition","hoverSilentOnTouch","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","labelDimIndex","showNormal","showEmphasis","baseText","normalStyleText","emphasisStyleText","specifiedTextStyle","setText","defaultColor","gTextStyleModel","ancestor","mat","hBase","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","elMap1","g","elMap","oldEl","newProp","clipRectByRect","targetRect","975","_trim","quantityExponent","LN10","domain","subDomain","subRange","all","returnStr","getPrecision","eIndex","dotIndex","pixelExtent","dataQuantity","sizeQuantity","acc","digits","votesPerQuota","targetSeats","seats","votes","currentSum","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","radian","pi2","TIME_REG","hour","UTC","nf","exponent","exp10","reformIntervals","littleThan","lg","curr","currClose","isNumeric","976","has","nubmerUtil","subOpts","emphasisOpt","normalOpt","subOptName","dimInfo","dimType","createDataFormatModel","dataFormatMixin","rawValue","getRawValue","rawDataIndex","getRawDataItem","componentSubType","marker","getTooltipMarker","labelProp","exists","newCptOptions","cptOption","idMap","existCpt","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","otherDataIndices","lenj","mapToArray","isData","mapA","mapB","hostObj","parsedKey","queryType","queryParam","dataDimToCoordDim","getDimension","dimItem","getDimensionInfo","coordDim","coordDimIndex","otherDimToDataDim","otherDim","otherDims","977","ArrayCtor","scaleAndAdd","lenSquare","div","dot","distanceSquare","negate","lerp","lengthSquare","distSquare","978","upperCaseFirst","group1","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","tpl","paramsList","encode","seriesLen","alias","formatTplSimple","s2d","isUTC","utc","substr","979","os","ua","userAgent","980","doGet","pathArr","getParent","getParentMethod","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","customizeGetParent","981","pathContain","pathProxyForDraw","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","_fillGradient","_strokeGradient","ctxLineDash","shapeCfg","needsUpdateRect","rectWithStroke","_rectWithStroke","lineScale","localPos","Sub","defaultShape","thisShape","982","boxLayout","maxHeight","currentLineMaxSize","nextX","nextY","nextChild","nextChildRect","moveX","moveY","LOCATION_PARAMS","HV_NAMES","vbox","hbox","getAvailableSize","containerRect","containerWidth","containerHeight","verticalMargin","horizontalMargin","hv","boundingMode","elPos","sizeCalculable","hvIdx","mergeLayoutParam","targetOption","newParams","newValueCount","merged","mergedValueCount","hasProp","hResult","vResult","getLayoutParams","copyLayoutParams","983","lt","rb","lb","rt","maxX","maxY","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","984","getDependencies","deps","getClassesByMainType","arrayPush","inputPositionParams","themeModel","getDefaultOption","hasOwn","optList","Class","getReferringComponents","985","checkClassType","IS_CONTAINER","RootClass","mandatoryMethods","ExtendedClass","makeContainer","registerClass","componentMainType","throwWhenNotFound","originalExtend","986","getTextWidth","textWidthCache","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getRichTextRect","getPlainTextRect","halfHeight","prepareTruncateOptions","truncateSingleLine","maxIterations","cnCharWidth","ascCharWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","getLineHeight","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","contentHeight","stlPadding","truncateWidth","truncateHeight","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","paddingW","remianTruncWidth","isEmptyStr","strs","tokensLen","987","m1","m2","out0","out1","out2","out3","out4","out5","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","988","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","_storage","originalStorage","dimStore","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","pure","getItem","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","_dimensionInfos","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","isDataArray","nameDimIdx","dimensionInfoMap","idList","nameRepeatCount","itemName","DataCtor","stackedValue","dimData","dimExtent","rawIndex","maxDistance","nearestIndices","dims","dimSize","keep","tmpRetValue","retValue","downSample","dimension","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setLayout","getLayout","clearItemLayouts","itemVisual","setItemDataAndSeriesIndex","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","TRANSFERABLE_METHODS","CHANGABLE_METHODS","989","getScaleExtent","scaleType","ifAxisCrossZero","tickCoords","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","labelFormatter","990","ctor","991","calculate","defaultGetZrXY","layerX","layerY","clientX","clientY","targetTouches","changedTouches","detail","button","MOUSE_EVENT_REG","isDomLevel2","attachEvent","detachEvent","notLeftMouse","stopPropagation","returnValue","992","isAroundZero","onet","B","t1","disc","K","discSqrt","Y1","Y2","ONE_THIRD","T","ASqrt","THREE_SQRT","p01","p12","p23","p012","p123","p0123","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","divider","v2Create","993","arrySlice","_$handlers","_h","newList","triggerWithContext","994","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","setRgba","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba2hsla","H","S","G","vMin","vMax","deltaR","deltaG","deltaB","fastLerp","normalizedValue","colors","leftColor","rightColor","dv","fullOutput","modifyHSL","modifyAlpha","arrColor","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fastMapToColor","mapToColor","995","colorPaletteMixin","themeSubType","fillDataTextStyle","newSeriesOption","getLinkedData","multipleSeries","formattedValue","setEachItem","dimIdx","valStr","vertially","tooltipName","tooltipDims","colorEl","animationEnabled","996","sysDims","applyDim","OTHER_DIMS","coordDimNameMap","genName","fromZero","dataDimNameMap","dimCount","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","997","Triangle","Diamond","Pin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","Symbol","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","symbolPath","setColor","998","999","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator"],"mappings":"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","file":"static/js/PieReact.7559485c.chunk.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 1000:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(992);\n    var vec2 = __webpack_require__(977);\n    var bbox = __webpack_require__(1049);\n    var BoundingRect = __webpack_require__(983);\n    var dpr = __webpack_require__(1001).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n\n/***/ 1001:\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n\n/***/ 1002:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(972);\n    var Element = __webpack_require__(1033);\n    var BoundingRect = __webpack_require__(983);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n\n/***/ 1003:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(1002);\n    var componentUtil = __webpack_require__(1017);\n    var clazzUtil = __webpack_require__(985);\n    var modelUtil = __webpack_require__(976);\n    var zrUtil = __webpack_require__(972);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n\n/***/ 1004:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    /**\n     * @param {Array} oldArr\n     * @param {Array} newArr\n     * @param {Function} oldKeyGetter\n     * @param {Function} newKeyGetter\n     * @param {Object} [context] Can be visited by this.context in callback.\n     */\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n\n        this.context = context;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n\n/***/ 1005:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(985);\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n\n/***/ 1006:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(972);\n    var Model = __webpack_require__(980);\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ 1007:\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(972);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n\n/***/ 1008:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(975);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(972);\n    var axisHelper = __webpack_require__(989);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n\n/***/ 1009:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(988);\n    var completeDimensions = __webpack_require__(996);\n    var zrUtil = __webpack_require__(972);\n    var modelUtil = __webpack_require__(976);\n    var CoordinateSystem = __webpack_require__(999);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n\n/***/ 1010:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(972);\n\n    var Style = __webpack_require__(1032);\n\n    var Element = __webpack_require__(1033);\n    var RectText = __webpack_require__(1060);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style, this);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj, this);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n\n/***/ 1011:\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n\n/***/ 1012:\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n\n/***/ 1013:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(975);\n    var formatUtil = __webpack_require__(978);\n    var Scale = __webpack_require__(1005);\n    var helper = __webpack_require__(1042);\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         * @param {number} [maxInterval]\n         */\n        niceTicks: function (splitNumber, minInterval, maxInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(\n                extent, splitNumber, minInterval, maxInterval\n            );\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval]\n         * @param {boolean} [opt.maxInterval]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n\n/***/ 1014:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(972);\n    var formatUtil = __webpack_require__(978);\n    var graphic = __webpack_require__(974);\n    var Model = __webpack_require__(980);\n    var numberUtil = __webpack_require__(975);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(977);\n    var matrix = __webpack_require__(987);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTickLabel: function () {\n            var axisModel = this.axisModel;\n            var opt = this.opt;\n\n            var tickEls = buildAxisTick(this, axisModel, opt);\n            var labelEls = buildAxisLabel(this, axisModel, opt);\n\n            fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (isNameLocationCenter(nameLocation)) {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            // FIXME\n            // truncate rich text? (consider performance)\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            graphic.setTextStyle(textEl.style, textStyleModel, {\n                text: truncatedText,\n                textFont: textFont,\n                textFill: textStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color'),\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.textVerticalAlign\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n        // FIXME\n        // Have not consider onBand yet, where tick els is more than label els.\n\n        labelEls = labelEls || [];\n        tickEls = tickEls || [];\n\n        var firstLabel = labelEls[0];\n        var nextLabel = labelEls[1];\n        var lastLabel = labelEls[labelEls.length - 1];\n        var prevLabel = labelEls[labelEls.length - 2];\n\n        var firstTick = tickEls[0];\n        var nextTick = tickEls[1];\n        var lastTick = tickEls[tickEls.length - 1];\n        var prevTick = tickEls[tickEls.length - 2];\n\n        if (showMinLabel === false) {\n            ignoreEl(firstLabel);\n            ignoreEl(firstTick);\n        }\n        else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            if (showMinLabel) {\n                ignoreEl(nextLabel);\n                ignoreEl(nextTick);\n            }\n            else {\n                ignoreEl(firstLabel);\n                ignoreEl(firstTick);\n            }\n        }\n\n        if (showMaxLabel === false) {\n            ignoreEl(lastLabel);\n            ignoreEl(lastTick);\n        }\n        else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            if (showMaxLabel) {\n                ignoreEl(prevLabel);\n                ignoreEl(prevTick);\n            }\n            else {\n                ignoreEl(lastLabel);\n                ignoreEl(lastTick);\n            }\n        }\n    }\n\n    function ignoreEl(el) {\n        el && (el.ignore = true);\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n    function isNameLocationCenter(nameLocation) {\n        return nameLocation === 'middle' || nameLocation === 'center';\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (\n        axis,\n        i,\n        interval,\n        ticksCnt,\n        showMinLabel,\n        showMaxLabel\n    ) {\n        if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n            return false;\n        }\n\n        // FIXME\n        // Have not consider label overlap (if label is too long) yet.\n\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    function buildAxisTick(axisBuilder, axisModel, opt) {\n        var axis = axisModel.axis;\n\n        if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n            return;\n        }\n\n        var tickModel = axisModel.getModel('axisTick');\n\n        var lineStyleModel = tickModel.getModel('lineStyle');\n        var tickLen = tickModel.get('length');\n\n        var tickInterval = getInterval(tickModel, opt.labelInterval);\n        var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n        // FIXME\n        // Corresponds to ticksCoords ?\n        var ticks = axis.scale.getTicks();\n\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n        var pt1 = [];\n        var pt2 = [];\n        var matrix = axisBuilder._transform;\n\n        var tickEls = [];\n\n        var ticksCnt = ticksCoords.length;\n        for (var i = 0; i < ticksCnt; i++) {\n            // Only ordinal scale support tick interval\n            if (ifIgnoreOnTick(\n                axis, i, tickInterval, ticksCnt,\n                showMinLabel, showMaxLabel\n            )) {\n                continue;\n            }\n\n            var tickCoord = ticksCoords[i];\n\n            pt1[0] = tickCoord;\n            pt1[1] = 0;\n            pt2[0] = tickCoord;\n            pt2[1] = opt.tickDirection * tickLen;\n\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n            // Tick line, Not use group transform to have better line draw\n            var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n                // Id for animation\n                anid: 'tick_' + ticks[i],\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.defaults(\n                    lineStyleModel.getLineStyle(),\n                    {\n                        stroke: axisModel.get('axisLine.lineStyle.color')\n                    }\n                ),\n                z2: 2,\n                silent: true\n            }));\n            axisBuilder.group.add(tickEl);\n            tickEls.push(tickEl);\n        }\n\n        return tickEls;\n    }\n\n    function buildAxisLabel(axisBuilder, axisModel, opt) {\n        var axis = axisModel.axis;\n        var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n        if (!show || axis.scale.isBlank()) {\n            return;\n        }\n\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelMargin = labelModel.get('margin');\n        var ticks = axis.scale.getTicks();\n        var labels = axisModel.getFormattedLabels();\n\n        // Special label rotate.\n        var labelRotation = (\n            retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n        ) * PI / 180;\n\n        var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n        var categoryData = axisModel.get('data');\n\n        var labelEls = [];\n        var silent = isSilent(axisModel);\n        var triggerEvent = axisModel.get('triggerEvent');\n\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n        zrUtil.each(ticks, function (tickVal, index) {\n            if (ifIgnoreOnTick(\n                axis, index, opt.labelInterval, ticks.length,\n                showMinLabel, showMaxLabel\n            )) {\n                    return;\n            }\n\n            var itemLabelModel = labelModel;\n            if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                itemLabelModel = new Model(\n                    categoryData[tickVal].textStyle, labelModel, axisModel.ecModel\n                );\n            }\n\n            var textColor = itemLabelModel.getTextColor()\n                || axisModel.get('axisLine.lineStyle.color');\n\n            var tickCoord = axis.dataToCoord(tickVal);\n            var pos = [\n                tickCoord,\n                opt.labelOffset + opt.labelDirection * labelMargin\n            ];\n            var labelStr = axis.scale.getLabel(tickVal);\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'label_' + tickVal,\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: silent,\n                z2: 10\n            });\n\n            graphic.setTextStyle(textEl.style, itemLabelModel, {\n                text: labels[index],\n                textAlign: itemLabelModel.getShallow('align', true)\n                    || labelLayout.textAlign,\n                textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true)\n                    || itemLabelModel.getShallow('baseline', true)\n                    || labelLayout.textVerticalAlign,\n                textFill: typeof textColor === 'function'\n                    ? textColor(\n                        // (1) In category axis with data zoom, tick is not the original\n                        // index of axis.data. So tick should not be exposed to user\n                        // in category axis.\n                        // (2) Compatible with previous version, which always returns labelStr.\n                        // But in interval scale labelStr is like '223,445', which maked\n                        // user repalce ','. So we modify it to return original val but remain\n                        // it as 'string' to avoid error in replacing.\n                        axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                        index\n                    )\n                    : textColor\n            });\n\n            // Pack data for mouse event\n            if (triggerEvent) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisLabel';\n                textEl.eventData.value = labelStr;\n            }\n\n            // FIXME\n            axisBuilder._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            labelEls.push(textEl);\n            axisBuilder.group.add(textEl);\n\n            textEl.decomposeTransform();\n\n        });\n\n        return labelEls;\n    }\n\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n\n/***/ 1015:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisPointerModelHelper = __webpack_require__(1006);\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = __webpack_require__(973).extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n/***/ }),\n\n/***/ 1016:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var LRU = __webpack_require__(1031);\n    var globalImageCache = new LRU(50);\n\n    var helper = {};\n\n    /**\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.findExistImage = function (newImageOrSrc) {\n        if (typeof newImageOrSrc === 'string') {\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n            return cachedImgObj && cachedImgObj.image;\n        }\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    /**\n     * Caution: User should cache loaded images, but not just count on LRU.\n     * Consider if required images more than LRU size, will dead loop occur?\n     *\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n     * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n     * @param {Function} [cb] params: (image, cbPayload)\n     * @param {Object} [cbPayload] Payload on cb calling.\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.createOrUpdateImage = function (newImageOrSrc, image, hostEl, cb, cbPayload) {\n        if (!newImageOrSrc) {\n            return image;\n        }\n        else if (typeof newImageOrSrc === 'string') {\n\n            // Image should not be loaded repeatly.\n            if ((image && image.__zrImageSrc === newImageOrSrc) || !hostEl) {\n                return image;\n            }\n\n            // Only when there is no existent image or existent image src\n            // is different, this method is responsible for load.\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n\n            var pendingWrap = {hostEl: hostEl, cb: cb, cbPayload: cbPayload};\n\n            if (cachedImgObj) {\n                image = cachedImgObj.image;\n                !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n            }\n            else {\n                !image && (image = new Image());\n                image.onload = imageOnLoad;\n\n                globalImageCache.put(\n                    newImageOrSrc,\n                    image.__cachedImgObj = {\n                        image: image,\n                        pending: [pendingWrap]\n                    }\n                );\n\n                image.src = image.__zrImageSrc = newImageOrSrc;\n            }\n\n            return image;\n        }\n        // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    function imageOnLoad() {\n        var cachedImgObj = this.__cachedImgObj;\n        this.onload = this.__cachedImgObj = null;\n\n        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n            var pendingWrap = cachedImgObj.pending[i];\n            var cb = pendingWrap.cb;\n            cb && cb(this, pendingWrap.cbPayload);\n            pendingWrap.hostEl.dirty();\n        }\n        cachedImgObj.pending.length = 0;\n    }\n\n    var isImageReady = helper.isImageReady = function (image) {\n        return image && image.width && image.height;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ 1017:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(972);\n    var clazz = __webpack_require__(985);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n\n/***/ 1018:\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n\n/***/ 1019:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(972);\n    var axisHelper = __webpack_require__(989);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis\n                && min != null\n                && min !== 'dataMin'\n                && typeof min !== 'function'\n                && !zrUtil.eqNaN(min)\n            ) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis\n                && max != null\n                && max !== 'dataMax'\n                && typeof max !== 'function'\n                && !zrUtil.eqNaN(max)\n            ) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1020:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    var zrUtil = __webpack_require__(972);\n    var env = __webpack_require__(979);\n    var echarts = __webpack_require__(973);\n    var modelUtil = __webpack_require__(976);\n    var helper = __webpack_require__(1021);\n    var AxisProxy = __webpack_require__(1143);\n    var each = zrUtil.each;\n    var eachAxisDim = helper.eachAxisDim;\n\n    var DataZoomModel = echarts.extendComponentModel({\n\n        type: 'dataZoom',\n\n        dependencies: [\n            'xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'\n        ],\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            zlevel: 0,\n            z: 4,                   // Higher than normal component (z: 2).\n            orient: null,           // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n            xAxisIndex: null,       // Default the first horizontal category axis.\n            yAxisIndex: null,       // Default the first vertical category axis.\n\n            filterMode: 'filter',   // Possible values: 'filter' or 'empty' or 'weakFilter'.\n                                    // 'filter': data items which are out of window will be removed. This option is\n                                    //          applicable when filtering outliers. For each data item, it will be\n                                    //          filtered if one of the relevant dimensions is out of the window.\n                                    // 'weakFilter': data items which are out of window will be removed. This option\n                                    //          is applicable when filtering outliers. For each data item, it will be\n                                    //          filtered only if all  of the relevant dimensions are out of the same\n                                    //          side of the window.\n                                    // 'empty': data items which are out of window will be set to empty.\n                                    //          This option is applicable when user should not neglect\n                                    //          that there are some data items out of window.\n                                    // 'none': Do not filter.\n                                    // Taking line chart as an example, line will be broken in\n                                    // the filtered points when filterModel is set to 'empty', but\n                                    // be connected when set to 'filter'.\n\n            throttle: null,         // Dispatch action by the fixed rate, avoid frequency.\n                                    // default 100. Do not throttle when use null/undefined.\n                                    // If animation === true and animationDurationUpdate > 0,\n                                    // default value is 100, otherwise 20.\n            start: 0,               // Start percent. 0 ~ 100\n            end: 100,               // End percent. 0 ~ 100\n            startValue: null,       // Start value. If startValue specified, start is ignored.\n            endValue: null,         // End value. If endValue specified, end is ignored.\n            minSpan: null,          // 0 ~ 100\n            maxSpan: null,          // 0 ~ 100\n            minValueSpan: null,     // The range of dataZoom can not be smaller than that.\n            maxValueSpan: null,     // The range of dataZoom can not be larger than that.\n            rangeMode: null         // Array, can be 'value' or 'percent'.\n        },\n\n        /**\n         * @override\n         */\n        init: function (option, parentModel, ecModel) {\n\n            /**\n             * key like x_0, y_1\n             * @private\n             * @type {Object}\n             */\n            this._dataIntervalByAxis = {};\n\n            /**\n             * @private\n             */\n            this._dataInfo = {};\n\n            /**\n             * key like x_0, y_1\n             * @private\n             */\n            this._axisProxies = {};\n\n            /**\n             * @readOnly\n             */\n            this.textStyleModel;\n\n            /**\n             * @private\n             */\n            this._autoThrottle = true;\n\n            /**\n             * 'percent' or 'value'\n             * @private\n             */\n            this._rangePropMode = ['percent', 'percent'];\n\n            var rawOption = retrieveRaw(option);\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function (newOption) {\n            var rawOption = retrieveRaw(newOption);\n\n            //FIX #2591\n            zrUtil.merge(this.option, newOption, true);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @protected\n         */\n        doInit: function (rawOption) {\n            var thisOption = this.option;\n\n            // Disable realtime view update if canvas is not supported.\n            if (!env.canvasSupported) {\n                thisOption.realtime = false;\n            }\n\n            this._setDefaultThrottle(rawOption);\n\n            updateRangeUse(this, rawOption);\n\n            each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n                // start/end has higher priority over startValue/endValue if they\n                // both set, but we should make chart.setOption({endValue: 1000})\n                // effective, rather than chart.setOption({endValue: 1000, end: null}).\n                if (this._rangePropMode[index] === 'value') {\n                    thisOption[names[0]] = null;\n                }\n                // Otherwise do nothing and use the merge result.\n            }, this);\n\n            this.textStyleModel = this.getModel('textStyle');\n\n            this._resetTarget();\n\n            this._giveAxisProxies();\n        },\n\n        /**\n         * @private\n         */\n        _giveAxisProxies: function () {\n            var axisProxies = this._axisProxies;\n\n            this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n                var axisModel = this.dependentModels[dimNames.axis][axisIndex];\n\n                // If exists, share axisProxy with other dataZoomModels.\n                var axisProxy = axisModel.__dzAxisProxy || (\n                    // Use the first dataZoomModel as the main model of axisProxy.\n                    axisModel.__dzAxisProxy = new AxisProxy(\n                        dimNames.name, axisIndex, this, ecModel\n                    )\n                );\n                // FIXME\n                // dispose __dzAxisProxy\n\n                axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetTarget: function () {\n            var thisOption = this.option;\n\n            var autoMode = this._judgeAutoMode();\n\n            eachAxisDim(function (dimNames) {\n                var axisIndexName = dimNames.axisIndex;\n                thisOption[axisIndexName] = modelUtil.normalizeToArray(\n                    thisOption[axisIndexName]\n                );\n            }, this);\n\n            if (autoMode === 'axisIndex') {\n                this._autoSetAxisIndex();\n            }\n            else if (autoMode === 'orient') {\n                this._autoSetOrient();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _judgeAutoMode: function () {\n            // Auto set only works for setOption at the first time.\n            // The following is user's reponsibility. So using merged\n            // option is OK.\n            var thisOption = this.option;\n\n            var hasIndexSpecified = false;\n            eachAxisDim(function (dimNames) {\n                // When user set axisIndex as a empty array, we think that user specify axisIndex\n                // but do not want use auto mode. Because empty array may be encountered when\n                // some error occured.\n                if (thisOption[dimNames.axisIndex] != null) {\n                    hasIndexSpecified = true;\n                }\n            }, this);\n\n            var orient = thisOption.orient;\n\n            if (orient == null && hasIndexSpecified) {\n                return 'orient';\n            }\n            else if (!hasIndexSpecified) {\n                if (orient == null) {\n                    thisOption.orient = 'horizontal';\n                }\n                return 'axisIndex';\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetAxisIndex: function () {\n            var autoAxisIndex = true;\n            var orient = this.get('orient', true);\n            var thisOption = this.option;\n            var dependentModels = this.dependentModels;\n\n            if (autoAxisIndex) {\n                // Find axis that parallel to dataZoom as default.\n                var dimName = orient === 'vertical' ? 'y' : 'x';\n\n                if (dependentModels[dimName + 'Axis'].length) {\n                    thisOption[dimName + 'AxisIndex'] = [0];\n                    autoAxisIndex = false;\n                }\n                else {\n                    each(dependentModels.singleAxis, function (singleAxisModel) {\n                        if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n                            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n                            autoAxisIndex = false;\n                        }\n                    });\n                }\n            }\n\n            if (autoAxisIndex) {\n                // Find the first category axis as default. (consider polar)\n                eachAxisDim(function (dimNames) {\n                    if (!autoAxisIndex) {\n                        return;\n                    }\n                    var axisIndices = [];\n                    var axisModels = this.dependentModels[dimNames.axis];\n                    if (axisModels.length && !axisIndices.length) {\n                        for (var i = 0, len = axisModels.length; i < len; i++) {\n                            if (axisModels[i].get('type') === 'category') {\n                                axisIndices.push(i);\n                            }\n                        }\n                    }\n                    thisOption[dimNames.axisIndex] = axisIndices;\n                    if (axisIndices.length) {\n                        autoAxisIndex = false;\n                    }\n                }, this);\n            }\n\n            if (autoAxisIndex) {\n                // FIXME\n                // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n                // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n\n                // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n                // dataZoom component auto adopts series that reference to\n                // both xAxis and yAxis which type is 'value'.\n                this.ecModel.eachSeries(function (seriesModel) {\n                    if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n                        eachAxisDim(function (dimNames) {\n                            var axisIndices = thisOption[dimNames.axisIndex];\n\n                            var axisIndex = seriesModel.get(dimNames.axisIndex);\n                            var axisId = seriesModel.get(dimNames.axisId);\n\n                            var axisModel = seriesModel.ecModel.queryComponents({\n                                mainType: dimNames.axis,\n                                index: axisIndex,\n                                id: axisId\n                            })[0];\n\n                            if (__DEV__) {\n                                if (!axisModel) {\n                                    throw new Error(\n                                        dimNames.axis + ' \"' + zrUtil.retrieve(\n                                            axisIndex,\n                                            axisId,\n                                            0\n                                        ) + '\" not found'\n                                    );\n                                }\n                            }\n                            axisIndex = axisModel.componentIndex;\n\n                            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n                                axisIndices.push(axisIndex);\n                            }\n                        });\n                    }\n                }, this);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetOrient: function () {\n            var dim;\n\n            // Find the first axis\n            this.eachTargetAxis(function (dimNames) {\n                !dim && (dim = dimNames.name);\n            }, this);\n\n            this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n        },\n\n        /**\n         * @private\n         */\n        _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n            // FIXME\n            // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n            // 例如series.type === scatter时。\n\n            var is = true;\n            eachAxisDim(function (dimNames) {\n                var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n                var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n                if (!axisModel || axisModel.get('type') !== axisType) {\n                    is = false;\n                }\n            }, this);\n            return is;\n        },\n\n        /**\n         * @private\n         */\n        _setDefaultThrottle: function (rawOption) {\n            // When first time user set throttle, auto throttle ends.\n            if (rawOption.hasOwnProperty('throttle')) {\n                this._autoThrottle = false;\n            }\n            if (this._autoThrottle) {\n                var globalOption = this.ecModel.option;\n                this.option.throttle =\n                    (globalOption.animation && globalOption.animationDurationUpdate > 0)\n                    ? 100 : 20;\n            }\n        },\n\n        /**\n         * @public\n         */\n        getFirstTargetAxisModel: function () {\n            var firstAxisModel;\n            eachAxisDim(function (dimNames) {\n                if (firstAxisModel == null) {\n                    var indices = this.get(dimNames.axisIndex);\n                    if (indices.length) {\n                        firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n                    }\n                }\n            }, this);\n\n            return firstAxisModel;\n        },\n\n        /**\n         * @public\n         * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n         */\n        eachTargetAxis: function (callback, context) {\n            var ecModel = this.ecModel;\n            eachAxisDim(function (dimNames) {\n                each(\n                    this.get(dimNames.axisIndex),\n                    function (axisIndex) {\n                        callback.call(context, dimNames, axisIndex, this, ecModel);\n                    },\n                    this\n                );\n            }, this);\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n         */\n        getAxisProxy: function (dimName, axisIndex) {\n            return this._axisProxies[dimName + '_' + axisIndex];\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/model/Model} If not found, return null/undefined.\n         */\n        getAxisModel: function (dimName, axisIndex) {\n            var axisProxy = this.getAxisProxy(dimName, axisIndex);\n            return axisProxy && axisProxy.getAxisModel();\n        },\n\n        /**\n         * If not specified, set to undefined.\n         *\n         * @public\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         * @param {boolean} [ignoreUpdateRangeUsg=false]\n         */\n        setRawRange: function (opt, ignoreUpdateRangeUsg) {\n            each(['start', 'end', 'startValue', 'endValue'], function (name) {\n                // If any of those prop is null/undefined, we should alos set\n                // them, because only one pair between start/end and\n                // startValue/endValue can work.\n                this.option[name] = opt[name];\n            }, this);\n\n            !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n        },\n\n        /**\n         * @public\n         * @return {Array.<number>} [startPercent, endPercent]\n         */\n        getPercentRange: function () {\n            var axisProxy = this.findRepresentativeAxisProxy();\n            if (axisProxy) {\n                return axisProxy.getDataPercentWindow();\n            }\n        },\n\n        /**\n         * @public\n         * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n         *\n         * @param {string} [axisDimName]\n         * @param {number} [axisIndex]\n         * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n         */\n        getValueRange: function (axisDimName, axisIndex) {\n            if (axisDimName == null && axisIndex == null) {\n                var axisProxy = this.findRepresentativeAxisProxy();\n                if (axisProxy) {\n                    return axisProxy.getDataValueWindow();\n                }\n            }\n            else {\n                return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n            }\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n         *      corresponding to the axisModel\n         * @return {module:echarts/component/dataZoom/AxisProxy}\n         */\n        findRepresentativeAxisProxy: function (axisModel) {\n            if (axisModel) {\n                return axisModel.__dzAxisProxy;\n            }\n\n            // Find the first hosted axisProxy\n            var axisProxies = this._axisProxies;\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n\n            // If no hosted axis find not hosted axisProxy.\n            // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n            // and the option.start or option.end settings are different. The percentRange\n            // should follow axisProxy.\n            // (We encounter this problem in toolbox data zoom.)\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getRangePropMode: function () {\n            return this._rangePropMode.slice();\n        }\n\n    });\n\n    function retrieveRaw(option) {\n        var ret = {};\n        each(\n            ['start', 'end', 'startValue', 'endValue', 'throttle'],\n            function (name) {\n                option.hasOwnProperty(name) && (ret[name] = option[name]);\n            }\n        );\n        return ret;\n    }\n\n    function updateRangeUse(dataZoomModel, rawOption) {\n        var rangePropMode = dataZoomModel._rangePropMode;\n        var rangeModeInOption = dataZoomModel.get('rangeMode');\n\n        each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n            var percentSpecified = rawOption[names[0]] != null;\n            var valueSpecified = rawOption[names[1]] != null;\n            if (percentSpecified && !valueSpecified) {\n                rangePropMode[index] = 'percent';\n            }\n            else if (!percentSpecified && valueSpecified) {\n                rangePropMode[index] = 'value';\n            }\n            else if (rangeModeInOption) {\n                rangePropMode[index] = rangeModeInOption[index];\n            }\n            else if (percentSpecified) { // percentSpecified && valueSpecified\n                rangePropMode[index] = 'percent';\n            }\n            // else remain its original setting.\n        });\n    }\n\n    module.exports = DataZoomModel;\n\n\n\n/***/ }),\n\n/***/ 1021:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var formatUtil = __webpack_require__(978);\n    var zrUtil = __webpack_require__(972);\n\n    var helper = {};\n\n    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single'];\n    // Supported coords.\n    var COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n\n    /**\n     * @param {string} coordType\n     * @return {boolean}\n     */\n    helper.isCoordSupported = function (coordType) {\n        return zrUtil.indexOf(COORDS, coordType) >= 0;\n    };\n\n    /**\n     * Create \"each\" method to iterate names.\n     *\n     * @pubilc\n     * @param  {Array.<string>} names\n     * @param  {Array.<string>=} attrs\n     * @return {Function}\n     */\n    helper.createNameEach = function (names, attrs) {\n        names = names.slice();\n        var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n        attrs = (attrs || []).slice();\n        var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n\n        return function (callback, context) {\n            zrUtil.each(names, function (name, index) {\n                var nameObj = {name: name, capital: capitalNames[index]};\n\n                for (var j = 0; j < attrs.length; j++) {\n                    nameObj[attrs[j]] = name + capitalAttrs[j];\n                }\n\n                callback.call(context, nameObj);\n            });\n        };\n    };\n\n    /**\n     * Iterate each dimension name.\n     *\n     * @public\n     * @param {Function} callback The parameter is like:\n     *                            {\n     *                                name: 'angle',\n     *                                capital: 'Angle',\n     *                                axis: 'angleAxis',\n     *                                axisIndex: 'angleAixs',\n     *                                index: 'angleIndex'\n     *                            }\n     * @param {Object} context\n     */\n    helper.eachAxisDim = helper.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n\n    /**\n     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n     * dataZoomModels and 'links' make up one or more graphics.\n     * This function finds the graphic where the source dataZoomModel is in.\n     *\n     * @public\n     * @param {Function} forEachNode Node iterator.\n     * @param {Function} forEachEdgeType edgeType iterator\n     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n     */\n    helper.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {\n\n        return function (sourceNode) {\n            var result = {\n                nodes: [],\n                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n            };\n\n            forEachEdgeType(function (edgeType) {\n                result.records[edgeType.name] = {};\n            });\n\n            if (!sourceNode) {\n                return result;\n            }\n\n            absorb(sourceNode, result);\n\n            var existsLink;\n            do {\n                existsLink = false;\n                forEachNode(processSingleNode);\n            }\n            while (existsLink);\n\n            function processSingleNode(node) {\n                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n                    absorb(node, result);\n                    existsLink = true;\n                }\n            }\n\n            return result;\n        };\n\n        function isNodeAbsorded(node, result) {\n            return zrUtil.indexOf(result.nodes, node) >= 0;\n        }\n\n        function isLinked(node, result) {\n            var hasLink = false;\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] && (hasLink = true);\n                });\n            });\n            return hasLink;\n        }\n\n        function absorb(node, result) {\n            result.nodes.push(node);\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] = true;\n                });\n            });\n        }\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ 1022:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var ComponentView = __webpack_require__(1029);\n\n    module.exports = ComponentView.extend({\n\n        type: 'dataZoom',\n\n        render: function (dataZoomModel, ecModel, api, payload) {\n            this.dataZoomModel = dataZoomModel;\n            this.ecModel = ecModel;\n            this.api = api;\n        },\n\n        /**\n         * Find the first target coordinate system.\n         *\n         * @protected\n         * @return {Object} {\n         *                   grid: [\n         *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n         *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n         *                       ...\n         *                   ],  // cartesians must not be null/undefined.\n         *                   polar: [\n         *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n         *                       ...\n         *                   ],  // polars must not be null/undefined.\n         *                   singleAxis: [\n         *                       {model: coord0, axisModels: [], coordIndex: 0}\n         *                   ]\n         */\n        getTargetCoordInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var ecModel = this.ecModel;\n            var coordSysLists = {};\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n                if (axisModel) {\n                    var coordModel = axisModel.getCoordSysModel();\n                    coordModel && save(\n                        coordModel,\n                        axisModel,\n                        coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []),\n                        coordModel.componentIndex\n                    );\n                }\n            }, this);\n\n            function save(coordModel, axisModel, store, coordIndex) {\n                var item;\n                for (var i = 0; i < store.length; i++) {\n                    if (store[i].model === coordModel) {\n                        item = store[i];\n                        break;\n                    }\n                }\n                if (!item) {\n                    store.push(item = {\n                        model: coordModel, axisModels: [], coordIndex: coordIndex\n                    });\n                }\n                item.axisModels.push(axisModel);\n            }\n\n            return coordSysLists;\n        }\n\n    });\n\n\n\n/***/ }),\n\n/***/ 1023:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(973);\n    var axisPointerModelHelper = __webpack_require__(1006);\n    var axisTrigger = __webpack_require__(1126);\n    var zrUtil = __webpack_require__(972);\n\n    __webpack_require__(1127);\n    __webpack_require__(1128);\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    __webpack_require__(1051);\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n/***/ }),\n\n/***/ 1024:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(972);\n    var graphic = __webpack_require__(974);\n    var textContain = __webpack_require__(986);\n    var formatUtil = __webpack_require__(978);\n    var matrix = __webpack_require__(987);\n    var axisHelper = __webpack_require__(989);\n    var AxisBuilder = __webpack_require__(1014);\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = labelModel.getFont();\n        var textRect = textContain.getBoundingRect(text, font);\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            // TODO: rich\n            style: {\n                text: text,\n                textFont: font,\n                textFill: labelModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ 1025:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(987);\n    var vector = __webpack_require__(977);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {        \n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n\n/***/ 1026:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(1001);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n\n/***/ 1027:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(986);\n    var util = __webpack_require__(972);\n    var roundRectHelper = __webpack_require__(1036);\n    var imageHelper = __webpack_require__(1016);\n\n    var retrieve3 = util.retrieve3;\n    var retrieve2 = util.retrieve2;\n\n    // TODO: Have not support 'start', 'end' yet.\n    var VALID_TEXT_ALIGN = {left: 1, right: 1, center: 1};\n    var VALID_TEXT_VERTICAL_ALIGN = {top: 1, bottom: 1, middle: 1};\n\n    var helper = {};\n\n    /**\n     * @param {module:zrender/graphic/Style} style\n     * @return {module:zrender/graphic/Style} The input style.\n     */\n    helper.normalizeTextStyle = function (style) {\n        normalizeStyle(style);\n        util.each(style.rich, normalizeStyle);\n        return style;\n    };\n\n    function normalizeStyle(style) {\n        if (style) {\n\n            style.font = textContain.makeFont(style);\n\n            var textAlign = style.textAlign;\n            textAlign === 'middle' && (textAlign = 'center');\n            style.textAlign = (\n                textAlign == null || VALID_TEXT_ALIGN[textAlign]\n            ) ? textAlign : 'left';\n\n            // Compatible with textBaseline.\n            var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n            textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n            style.textVerticalAlign = (\n                textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign]\n            ) ? textVerticalAlign : 'top';\n\n            var textPadding = style.textPadding;\n            if (textPadding) {\n                style.textPadding = util.normalizeCssArray(style.textPadding);\n            }\n        }\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {string} text\n     * @param {module:zrender/graphic/Style} style\n     * @param {Object|boolean} [rect] {x, y, width, height}\n     *                  If set false, rect text is not used.\n     */\n    helper.renderText = function (hostEl, ctx, text, style, rect) {\n        style.rich\n            ? renderRichText(hostEl, ctx, text, style, rect)\n            : renderPlainText(hostEl, ctx, text, style, rect);\n    };\n\n    function renderPlainText(hostEl, ctx, text, style, rect) {\n        var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n\n        var textPadding = style.textPadding;\n\n        var contentBlock = hostEl.__textCotentBlock;\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(\n                text, font, textPadding, style.truncate\n            );\n        }\n\n        var outerHeight = contentBlock.outerHeight;\n\n        var textLines = contentBlock.lines;\n        var lineHeight = contentBlock.lineHeight;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var textX = baseX;\n        var textY = boxY;\n\n        var needDrawBg = needDrawBackground(style);\n        if (needDrawBg || textPadding) {\n            // Consider performance, do not call getTextWidth util necessary.\n            var textWidth = textContain.getWidth(text, font);\n            var outerWidth = textWidth;\n            textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n            var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n\n            needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n            if (textPadding) {\n                textX = getTextXForPadding(baseX, textAlign, textPadding);\n                textY += textPadding[0];\n            }\n        }\n\n        setCtx(ctx, 'textAlign', textAlign || 'left');\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n        setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0);\n\n        // `textBaseline` is set as 'middle'.\n        textY += lineHeight / 2;\n\n        var textStrokeWidth = style.textStrokeWidth;\n        var textStroke = getStroke(style.textStroke, textStrokeWidth);\n        var textFill = getFill(style.textFill);\n\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textStrokeWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n        }\n\n        for (var i = 0; i < textLines.length; i++) {\n            // Fill after stroke so the outline will not cover the main part.\n            textStroke && ctx.strokeText(textLines[i], textX, textY);\n            textFill && ctx.fillText(textLines[i], textX, textY);\n            textY += lineHeight;\n        }\n    }\n\n    function renderRichText(hostEl, ctx, text, style, rect) {\n        var contentBlock = hostEl.__textCotentBlock;\n\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n        }\n\n        drawRichText(hostEl, ctx, contentBlock, style, rect);\n    }\n\n    function drawRichText(hostEl, ctx, contentBlock, style, rect) {\n        var contentWidth = contentBlock.width;\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n        var textPadding = style.textPadding;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var xLeft = boxX;\n        var lineTop = boxY;\n        if (textPadding) {\n            xLeft += textPadding[3];\n            lineTop += textPadding[0];\n        }\n        var xRight = xLeft + contentWidth;\n\n        needDrawBackground(style) && drawBackground(\n            hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight\n        );\n\n        for (var i = 0; i < contentBlock.lines.length; i++) {\n            var line = contentBlock.lines[i];\n            var tokens = line.tokens;\n            var tokenCount = tokens.length;\n            var lineHeight = line.lineHeight;\n            var usedWidth = line.width;\n\n            var leftIndex = 0;\n            var lineXLeft = xLeft;\n            var lineXRight = xRight;\n            var rightIndex = tokenCount - 1;\n            var token;\n\n            while (\n                leftIndex < tokenCount\n                && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n                usedWidth -= token.width;\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            while (\n                rightIndex >= 0\n                && (token = tokens[rightIndex], token.textAlign === 'right')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n                usedWidth -= token.width;\n                lineXRight -= token.width;\n                rightIndex--;\n            }\n\n            // The other tokens are placed as textAlign 'center' if there is enough space.\n            lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n            while (leftIndex <= rightIndex) {\n                token = tokens[leftIndex];\n                // Consider width specified by user, use 'center' rather than 'left'.\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            lineTop += lineHeight;\n        }\n    }\n\n    function applyTextRotation(ctx, style, rect, x, y) {\n        // textRotation only apply in RectText.\n        if (rect && style.textRotation) {\n            var origin = style.textOrigin;\n            if (origin === 'center') {\n                x = rect.width / 2 + rect.x;\n                y = rect.height / 2 + rect.y;\n            }\n            else if (origin) {\n                x = origin[0] + rect.x;\n                y = origin[1] + rect.y;\n            }\n\n            ctx.translate(x, y);\n            // Positive: anticlockwise\n            ctx.rotate(-style.textRotation);\n            ctx.translate(-x, -y);\n        }\n    }\n\n    function placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n        var tokenStyle = style.rich[token.styleName] || {};\n\n        // 'ctx.textBaseline' is always set as 'middle', for sake of\n        // the bias of \"Microsoft YaHei\".\n        var textVerticalAlign = token.textVerticalAlign;\n        var y = lineTop + lineHeight / 2;\n        if (textVerticalAlign === 'top') {\n            y = lineTop + token.height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y = lineTop + lineHeight - token.height / 2;\n        }\n\n        !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(\n            hostEl,\n            ctx,\n            tokenStyle,\n            textAlign === 'right'\n                ? x - token.width\n                : textAlign === 'center'\n                ? x - token.width / 2\n                : x,\n            y - token.height / 2,\n            token.width,\n            token.height\n        );\n\n        var textPadding = token.textPadding;\n        if (textPadding) {\n            x = getTextXForPadding(x, textAlign, textPadding);\n            y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n        }\n\n        setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n        setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n        setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n\n        setCtx(ctx, 'textAlign', textAlign);\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n\n        var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n        var textFill = getFill(tokenStyle.textFill || style.textFill);\n        var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth);\n\n        // Fill after stroke so the outline will not cover the main part.\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textStrokeWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n            ctx.strokeText(token.text, x, y);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n            ctx.fillText(token.text, x, y);\n        }\n    }\n\n    function needDrawBackground(style) {\n        return style.textBackgroundColor\n            || (style.textBorderWidth && style.textBorderColor);\n    }\n\n    // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n    // shape: {x, y, width, height}\n    function drawBackground(hostEl, ctx, style, x, y, width, height) {\n        var textBackgroundColor = style.textBackgroundColor;\n        var textBorderWidth = style.textBorderWidth;\n        var textBorderColor = style.textBorderColor;\n        var isPlainBg = util.isString(textBackgroundColor);\n\n        setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n        if (isPlainBg || (textBorderWidth && textBorderColor)) {\n            ctx.beginPath();\n            var textBorderRadius = style.textBorderRadius;\n            if (!textBorderRadius) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, {\n                    x: x, y: y, width: width, height: height, r: textBorderRadius\n                });\n            }\n            ctx.closePath();\n        }\n\n        if (isPlainBg) {\n            setCtx(ctx, 'fillStyle', textBackgroundColor);\n            ctx.fill();\n        }\n        else if (util.isObject(textBackgroundColor)) {\n            var image = textBackgroundColor.image;\n\n            image = imageHelper.createOrUpdateImage(\n                image, null, hostEl, onBgImageLoaded, textBackgroundColor\n            );\n            if (image && imageHelper.isImageReady(image)) {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n\n        if (textBorderWidth && textBorderColor) {\n            setCtx(ctx, 'lineWidth', textBorderWidth);\n            setCtx(ctx, 'strokeStyle', textBorderColor);\n            ctx.stroke();\n        }\n    }\n\n    function onBgImageLoaded(image, textBackgroundColor) {\n        // Replace image, so that `contain/text.js#parseRichText`\n        // will get correct result in next tick.\n        textBackgroundColor.image = image;\n    }\n\n    function getBoxPosition(blockHeiht, style, rect) {\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var textAlign = style.textAlign;\n        var textVerticalAlign = style.textVerticalAlign;\n\n        // Text position represented by coord\n        if (rect) {\n            var textPosition = style.textPosition;\n            if (textPosition instanceof Array) {\n                // Percent\n                baseX = rect.x + parsePercent(textPosition[0], rect.width);\n                baseY = rect.y + parsePercent(textPosition[1], rect.height);\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, style.textDistance\n                );\n                baseX = res.x;\n                baseY = res.y;\n                // Default align and baseline when has textPosition\n                textAlign = textAlign || res.textAlign;\n                textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n            }\n\n            // textOffset is only support in RectText, otherwise\n            // we have to adjust boundingRect for textOffset.\n            var textOffset = style.textOffset;\n            if (textOffset) {\n                baseX += textOffset[0];\n                baseY += textOffset[1];\n            }\n        }\n\n        return {\n            baseX: baseX,\n            baseY: baseY,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function setCtx(ctx, prop, value) {\n        // FIXME ??? performance try\n        // if (ctx.__currentValues[prop] !== value) {\n            // ctx[prop] = ctx.__currentValues[prop] = value;\n        ctx[prop] = value;\n        // }\n        return ctx[prop];\n    }\n\n    /**\n     * @param {string} [stroke] If specified, do not check style.textStroke.\n     * @param {string} [lineWidth] If specified, do not check style.textStroke.\n     * @param {number} style\n     */\n    var getStroke = helper.getStroke = function (stroke, lineWidth) {\n        return (stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (stroke.image || stroke.colorStops)\n            ? '#000'\n            : stroke;\n    };\n\n    var getFill = helper.getFill = function (fill) {\n        return (fill == null || fill === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (fill.image || fill.colorStops)\n            ? '#000'\n            : fill;\n    };\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    function getTextXForPadding(x, textAlign, textPadding) {\n        return textAlign === 'right'\n            ? (x - textPadding[1])\n            : textAlign === 'center'\n            ? (x + textPadding[3] / 2 - textPadding[1] / 2)\n            : (x + textPadding[3]);\n    }\n\n    /**\n     * @param {string} text\n     * @param {module:zrender/Style} style\n     * @return {boolean}\n     */\n    helper.needDrawText = function (text, style) {\n        return text != null\n            && (text\n                || style.textBackgroundColor\n                || (style.textBorderWidth && style.textBorderColor)\n                || style.textPadding\n            );\n    };\n\n    module.exports = helper;\n\n\n\n\n/***/ }),\n\n/***/ 1028:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(1010);\n    var BoundingRect = __webpack_require__(983);\n    var zrUtil = __webpack_require__(972);\n    var imageHelper = __webpack_require__(1016);\n\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n\n            var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this);\n\n            if (!image || !imageHelper.isImageReady(image)) {\n                return;\n            }\n\n            // 图片已经加载完成\n            // if (image.nodeName.toUpperCase() == 'IMG') {\n            //     if (!image.complete) {\n            //         return;\n            //     }\n            // }\n            // Else is canvas\n\n            var x = style.x || 0;\n            var y = style.y || 0;\n            var width = style.width;\n            var height = style.height;\n            var aspect = image.width / image.height;\n            if (width == null && height != null) {\n                // Keep image/height ratio\n                width = height * aspect;\n            }\n            else if (height == null && width != null) {\n                height = width / aspect;\n            }\n            else if (width == null && height == null) {\n                width = image.width;\n                height = image.height;\n            }\n\n            // 设置transform\n            this.setTransform(ctx);\n\n            if (style.sWidth && style.sHeight) {\n                var sx = style.sx || 0;\n                var sy = style.sy || 0;\n                ctx.drawImage(\n                    image,\n                    sx, sy, style.sWidth, style.sHeight,\n                    x, y, width, height\n                );\n            }\n            else if (style.sx && style.sy) {\n                var sx = style.sx;\n                var sy = style.sy;\n                var sWidth = width - sx;\n                var sHeight = height - sy;\n                ctx.drawImage(\n                    image,\n                    sx, sy, sWidth, sHeight,\n                    x, y, width, height\n                );\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n\n/***/ 1029:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(1002);\n    var componentUtil = __webpack_require__(1017);\n    var clazzUtil = __webpack_require__(985);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n\n/***/ 1030:\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * Calculate slider move result.\n     * Usage:\n     * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n     * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n     * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n     *\n     * @param {number} delta Move length.\n     * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n     *              handleEnds will be modified in this method.\n     * @param {Array.<number>} extent handleEnds is restricted by extent.\n     *              extent[0] should less or equals than extent[1].\n     * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n     *              where the input minSpan and maxSpan will not work.\n     * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n     *              If not set, handle0 and cross handle1. If set as a non-negative\n     *              number (including `0`), handles will push each other when reaching\n     *              the minSpan.\n     * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n     * @return {Array.<number>} The input handleEnds.\n     */\n    module.exports = function (delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n        // Normalize firstly.\n        handleEnds[0] = restrict(handleEnds[0], extent);\n        handleEnds[1] = restrict(handleEnds[1], extent);\n\n        delta = delta || 0;\n\n        var extentSpan = extent[1] - extent[0];\n\n        // Notice maxSpan and minSpan can be null/undefined.\n        if (minSpan != null) {\n            minSpan = restrict(minSpan, [0, extentSpan]);\n        }\n        if (maxSpan != null) {\n            maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n        }\n        if (handleIndex === 'all') {\n            minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n            handleIndex = 0;\n        }\n\n        var originalDistSign = getSpanSign(handleEnds, handleIndex);\n\n        handleEnds[handleIndex] += delta;\n\n        // Restrict in extent.\n        var extentMinSpan = minSpan || 0;\n        var realExtent = extent.slice();\n        originalDistSign.sign < 0 ? (realExtent[0] += extentMinSpan) : (realExtent[1] -= extentMinSpan);\n        handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent);\n\n        // Expand span.\n        var currDistSign = getSpanSign(handleEnds, handleIndex);\n        if (minSpan != null && (\n            currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan\n        )) {\n            // If minSpan exists, 'cross' is forbinden.\n            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n        }\n\n        // Shrink span.\n        var currDistSign = getSpanSign(handleEnds, handleIndex);\n        if (maxSpan != null && currDistSign.span > maxSpan) {\n            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n        }\n\n        return handleEnds;\n    };\n\n    function getSpanSign(handleEnds, handleIndex) {\n        var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex];\n        // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n        // is at left of handleEnds[1] for non-cross case.\n        return {span: Math.abs(dist), sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1};\n    }\n\n    function restrict(value, extend) {\n        return Math.min(extend[1], Math.max(extend[0], value));\n    }\n\n\n/***/ }),\n\n/***/ 1031:\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n\n/***/ 1032:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts, host) {\n        this.extendFrom(opts, false);\n        this.host = host;\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {module:zrender/graphic/Displayable}\n         */\n        host: null,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * If `fontSize` or `fontFamily` exists, `font` will be reset by\n         * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n         * So do not visit it directly in upper application (like echarts),\n         * but use `contain/text#makeFont` instead.\n         * @type {string}\n         */\n        font: null,\n\n        /**\n         * The same as font. Use font please.\n         * @deprecated\n         * @type {string}\n         */\n        textFont: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontStyle: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontWeight: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * Should be 12 but not '12px'.\n         * @type {number}\n         */\n        fontSize: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontFamily: null,\n\n        /**\n         * Reserved for special functinality, like 'hr'.\n         * @type {string}\n         */\n        textTag: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * @type {number}\n         */\n        textWidth: null,\n\n        /**\n         * Only for textBackground.\n         * @type {number}\n         */\n        textHeight: null,\n\n        /**\n         * textStroke may be set as some color as a default\n         * value in upper applicaion, where the default value\n         * of textStrokeWidth should be 0 to make sure that\n         * user can choose to do not use text stroke.\n         * @type {number}\n         */\n        textStrokeWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textLineHeight: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * Based on x, y of rect.\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * @type {string}\n         */\n        textShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * @type {string}\n         */\n        textBoxShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetY: 0,\n\n        /**\n         * Whether transform text.\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        transformText: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and transformText is false.\n         */\n        textRotation: 0,\n\n        /**\n         * Text origin of text rotation, like [10, 40].\n         * Based on x, y of rect.\n         * Useful in label rotation of circular symbol.\n         * By default, this origin is textPosition.\n         * Can be 'center'.\n         * @type {string|Array.<number>}\n         */\n        textOrigin: null,\n\n        /**\n         * @type {string}\n         */\n        textBackgroundColor: null,\n\n        /**\n         * @type {string}\n         */\n        textBorderColor: null,\n\n        /**\n         * @type {number}\n         */\n        textBorderWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textBorderRadius: 0,\n\n        /**\n         * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n         * @type {number|Array.<number>}\n         */\n        textPadding: null,\n\n        /**\n         * Text styles for rich text.\n         * @type {Object}\n         */\n        rich: null,\n\n        /**\n         * {outerWidth, outerHeight, ellipsis, placeholder}\n         * @type {Object}\n         */\n        truncate: null,\n\n        /**\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         * @type {string}\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite true: overwrirte any way.\n         *                            false: overwrite only when !target.hasOwnProperty\n         *                            others: overwrite when property is not null/undefined.\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite === true\n                            || (\n                                overwrite === false\n                                    ? !this.hasOwnProperty(name)\n                                    : otherStyle[name] != null\n                            )\n                        )\n                    ) {\n                        this[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n\n/***/ 1033:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(1034);\n    var Eventful = __webpack_require__(993);\n    var Transformable = __webpack_require__(1025);\n    var Animatable = __webpack_require__(1085);\n    var zrUtil = __webpack_require__(972);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n\n/***/ 1034:\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n\n/***/ 1035:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(1086);\n    var color = __webpack_require__(994);\n    var util = __webpack_require__(972);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (!forceAnimate && isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} [easing]\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @param  {boolean} forceAnimate\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing, forceAnimate) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName, forceAnimate\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            // This optimization will help the case that in the upper application\n            // the view may be refreshed frequently, where animation will be\n            // called repeatly but nothing changed.\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n\n/***/ 1036:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1037:\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1038:\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n\n/***/ 1039:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(1096);\n    var smoothBezier = __webpack_require__(1097);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1040:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(985);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1041:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n/***/ }),\n\n/***/ 1042:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * For testable.\n */\n\n\n    var numberUtil = __webpack_require__(975);\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @param {number} [maxInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval, maxInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        if (maxInterval != null && interval > maxInterval) {\n            interval = result.interval = maxInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ 1043:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(972);\n    var modelUtil = __webpack_require__(976);\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n/***/ }),\n\n/***/ 1044:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(979);\n    var zrUtil = __webpack_require__(972);\n    var get = __webpack_require__(976).makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n/***/ }),\n\n/***/ 1045:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    // List layout\n    var layout = __webpack_require__(982);\n    var formatUtil = __webpack_require__(978);\n    var graphic = __webpack_require__(974);\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var boxLayoutParams = componentModel.getBoxLayoutParams();\n            var padding = componentModel.get('padding');\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n\n            var rect = layout.getLayoutRect(\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            layout.positionElement(\n                group,\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n        },\n\n        makeBackground: function (rect, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: rect.x - padding[3],\n                    y: rect.y - padding[0],\n                    width: rect.width + padding[1] + padding[3],\n                    height: rect.height + padding[0] + padding[2],\n                    r: componentModel.get('borderRadius')\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            // FIXME\n            // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n            // and background rect when setting like `left: 0`, `top: 0`.\n            // graphic.subPixelOptimizeRect(rect);\n\n            return rect;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1046:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file History manager.\n */\n\n\n    var zrUtil = __webpack_require__(972);\n    var each = zrUtil.each;\n\n    var ATTR = '\\0_ec_hist_store';\n\n    var history = {\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n         */\n        push: function (ecModel, newSnapshot) {\n            var store = giveStore(ecModel);\n\n            // If previous dataZoom can not be found,\n            // complete an range with current range.\n            each(newSnapshot, function (batchItem, dataZoomId) {\n                var i = store.length - 1;\n                for (; i >= 0; i--) {\n                    var snapshot = store[i];\n                    if (snapshot[dataZoomId]) {\n                        break;\n                    }\n                }\n                if (i < 0) {\n                    // No origin range set, create one by current range.\n                    var dataZoomModel = ecModel.queryComponents(\n                        {mainType: 'dataZoom', subType: 'select', id: dataZoomId}\n                    )[0];\n                    if (dataZoomModel) {\n                        var percentRange = dataZoomModel.getPercentRange();\n                        store[0][dataZoomId] = {\n                            dataZoomId: dataZoomId,\n                            start: percentRange[0],\n                            end: percentRange[1]\n                        };\n                    }\n                }\n            });\n\n            store.push(newSnapshot);\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object} snapshot\n         */\n        pop: function (ecModel) {\n            var store = giveStore(ecModel);\n            var head = store[store.length - 1];\n            store.length > 1 && store.pop();\n\n            // Find top for all dataZoom.\n            var snapshot = {};\n            each(head, function (batchItem, dataZoomId) {\n                for (var i = store.length - 1; i >= 0; i--) {\n                    var batchItem = store[i][dataZoomId];\n                    if (batchItem) {\n                        snapshot[dataZoomId] = batchItem;\n                        break;\n                    }\n                }\n            });\n\n            return snapshot;\n        },\n\n        /**\n         * @public\n         */\n        clear: function (ecModel) {\n            ecModel[ATTR] = null;\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {number} records. always >= 1.\n         */\n        count: function (ecModel) {\n            return giveStore(ecModel).length;\n        }\n\n    };\n\n    /**\n     * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n     * History length of each dataZoom may be different.\n     * this._history[0] is used to store origin range.\n     * @type {Array.<Object>}\n     */\n    function giveStore(ecModel) {\n        var store = ecModel[ATTR];\n        if (!store) {\n            store = ecModel[ATTR] = [{}];\n        }\n        return store;\n    }\n\n    module.exports = history;\n\n\n\n/***/ }),\n\n/***/ 1049:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(977);\n    var curve = __webpack_require__(992);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n\n/***/ 1050:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(979);\n\n    // Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n    // where exception \"unexpected call to method or property access\"\n    // might be thrown when calling ctx.fill or ctx.stroke after a path\n    // whose area size is zero is drawn and ctx.clip() is called and\n    // shadowBlur is set. See #4572, #3112, #5777.\n    // (e.g.,\n    //  ctx.moveTo(10, 10);\n    //  ctx.lineTo(20, 10);\n    //  ctx.closePath();\n    //  ctx.clip();\n    //  ctx.shadowBlur = 10;\n    //  ...\n    //  ctx.fill();\n    // )\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = function (orignalBrush) {\n\n        // version string can be: '11.0'\n        return (env.browser.ie && env.browser.version >= 11)\n\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var clipPath = clipPaths[i];\n                        var shape = clipPath && clipPath.shape;\n                        var type = clipPath && clipPath.type;\n\n                        if (shape && (\n                            (type === 'sector' && shape.startAngle === shape.endAngle)\n                            || (type === 'rect' && (!shape.width || !shape.height))\n                        )) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                // It is save to put shadowTemp static, because shadowTemp\n                                // will be all modified each item brush called.\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                orignalBrush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n\n            : orignalBrush;\n    };\n\n\n\n/***/ }),\n\n/***/ 1051:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(974);\n    var BaseAxisPointer = __webpack_require__(1052);\n    var viewHelper = __webpack_require__(1024);\n    var cartesianAxisHelper = __webpack_require__(1053);\n    var AxisView = __webpack_require__(1015);\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n/***/ }),\n\n/***/ 1052:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(972);\n    var clazzUtil = __webpack_require__(985);\n    var graphic = __webpack_require__(974);\n    var get = __webpack_require__(976).makeGetter();\n    var axisPointerModelHelper = __webpack_require__(1006);\n    var eventTool = __webpack_require__(991);\n    var throttle = __webpack_require__(1012);\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = graphic.createIcon(\n                    handleModel.get('icon'), \n                    {\n                        cursor: 'move',\n                        draggable: true,\n                        onmousemove: function (e) {\n                            // Fot mobile devicem, prevent screen slider on the button.\n                            eventTool.stop(e.event);\n                        },\n                        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                        drift: bind(this._onHandleDragMove, this),\n                        ondragend: bind(this._onHandleDragEnd, this)\n                    }\n                );\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals = equals && propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n/***/ }),\n\n/***/ 1053:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(972);\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n        var idx = {left: 0, right: 1, top: 0, bottom: 1, onZero: 2};\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posBound = axisDim === 'x'\n            ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset]\n            : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n        if (axis.onZero) {\n            var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n            var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n            posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0],\n            axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ 1054:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(972);\n    var Model = __webpack_require__(980);\n\n    var LegendModel = __webpack_require__(973).extendComponentModel({\n\n        type: 'legend.plain',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            // legend.width/height are maxWidth/maxHeight actually,\n            // whereas realy width/height is calculated by its content.\n            // (Setting {left: 10, right: 10} does not make sense).\n            // So consider the case:\n            // `setOption({legend: {left: 10});`\n            // then `setOption({legend: {right: 10});`\n            // The previous `left` should be cleared by setting `ignoreSize`.\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 0,\n            // bottom: null,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            borderRadius: 0,\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n/***/ }),\n\n/***/ 1055:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(972);\n    var symbolCreator = __webpack_require__(997);\n    var graphic = __webpack_require__(974);\n    var listComponentHelper = __webpack_require__(1045);\n    var layoutUtil = __webpack_require__(982);\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var Group = graphic.Group;\n\n    module.exports = __webpack_require__(973).extendComponentView({\n\n        type: 'legend.plain',\n\n        newlineDisabled: false,\n\n        /**\n         * @override\n         */\n        init: function () {\n\n            /**\n             * @private\n             * @type {module:zrender/container/Group}\n             */\n            this.group.add(this._contentGroup = new Group());\n\n            /**\n             * @private\n             * @type {module:zrender/Element}\n             */\n            this._backgroundEl;\n        },\n\n        /**\n         * @protected\n         */\n        getContentGroup: function () {\n            return this._contentGroup;\n        },\n\n        /**\n         * @override\n         */\n        render: function (legendModel, ecModel, api) {\n\n            this.resetInner();\n\n            if (!legendModel.get('show', true)) {\n                return;\n            }\n\n            var itemAlign = legendModel.get('align');\n            if (!itemAlign || itemAlign === 'auto') {\n                itemAlign = (\n                    legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical'\n                ) ? 'right' : 'left';\n            }\n\n            this.renderInner(itemAlign, legendModel, ecModel, api);\n\n            // Perform layout.\n            var positionInfo = legendModel.getBoxLayoutParams();\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n            var padding = legendModel.get('padding');\n\n            var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n            var mainRect = this.layoutInner(legendModel, itemAlign, maxSize);\n\n            // Place mainGroup, based on the calculated `mainRect`.\n            var layoutRect = layoutUtil.getLayoutRect(\n                zrUtil.defaults({width: mainRect.width, height: mainRect.height}, positionInfo),\n                viewportSize,\n                padding\n            );\n            this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]);\n\n            // Render background after group is layout.\n            this.group.add(\n                this._backgroundEl = listComponentHelper.makeBackground(mainRect, legendModel)\n            );\n        },\n\n        /**\n         * @protected\n         */\n        resetInner: function () {\n            this.getContentGroup().removeAll();\n            this._backgroundEl && this.group.remove(this._backgroundEl);\n        },\n\n        /**\n         * @protected\n         */\n        renderInner: function (itemAlign, legendModel, ecModel, api) {\n            var contentGroup = this.getContentGroup();\n            var legendDrawnMap = zrUtil.createHashMap();\n            var selectMode = legendModel.get('selectedMode');\n\n            each(legendModel.getData(), function (itemModel, dataIndex) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n                    contentGroup.add(new Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawnMap.get(name)) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, dataIndex, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawnMap.set(name, true);\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawnMap.get(name)) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, dataIndex, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawnMap.set(name, true);\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawnMap.get(name)) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n        },\n\n        _createItem: function (\n            name, dataIndex, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            itemGroup.add(new graphic.Text({\n                style: graphic.setTextStyle({}, textStyleModel, {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                })\n            }));\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n            this.getContentGroup().add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            itemGroup.__legendDataIndex = dataIndex;\n\n            return itemGroup;\n        },\n\n        /**\n         * @protected\n         */\n        layoutInner: function (legendModel, itemAlign, maxSize) {\n            var contentGroup = this.getContentGroup();\n\n            // Place items in contentGroup.\n            layoutUtil.box(\n                legendModel.get('orient'),\n                contentGroup,\n                legendModel.get('itemGap'),\n                maxSize.width,\n                maxSize.height\n            );\n\n            var contentRect = contentGroup.getBoundingRect();\n            contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n\n            return this.group.getBoundingRect();\n        }\n\n    });\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n\n\n/***/ }),\n\n/***/ 1056:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Box selection tool.\n *\n * @module echarts/component/helper/BrushController\n */\n\n\n\n    var Eventful = __webpack_require__(993);\n    var zrUtil = __webpack_require__(972);\n    var graphic = __webpack_require__(974);\n    var interactionMutex = __webpack_require__(1071);\n    var DataDiffer = __webpack_require__(1004);\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var map = zrUtil.map;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathPow = Math.pow;\n\n    var COVER_Z = 10000;\n    var UNSELECT_THRESHOLD = 6;\n    var MIN_RESIZE_LINE_WIDTH = 6;\n    var MUTEX_RESOURCE_KEY = 'globalPan';\n\n    var DIRECTION_MAP = {\n        w: [0, 0],\n        e: [0, 1],\n        n: [1, 0],\n        s: [1, 1]\n    };\n    var CURSOR_MAP = {\n        w: 'ew',\n        e: 'ew',\n        n: 'ns',\n        s: 'ns',\n        ne: 'nesw',\n        sw: 'nesw',\n        nw: 'nwse',\n        se: 'nwse'\n    };\n    var DEFAULT_BRUSH_OPT = {\n        brushStyle: {\n            lineWidth: 2,\n            stroke: 'rgba(0,0,0,0.3)',\n            fill: 'rgba(0,0,0,0.1)'\n        },\n        transformable: true,\n        brushMode: 'single',\n        removeOnClick: false\n    };\n\n    var baseUID = 0;\n\n    /**\n     * @alias module:echarts/component/helper/BrushController\n     * @constructor\n     * @mixin {module:zrender/mixin/Eventful}\n     * @event module:echarts/component/helper/BrushController#brush\n     *        params:\n     *            areas: Array.<Array>, coord relates to container group,\n     *                                    If no container specified, to global.\n     *            opt {\n     *                isEnd: boolean,\n     *                removeOnClick: boolean\n     *            }\n     *\n     * @param {module:zrender/zrender~ZRender} zr\n     */\n    function BrushController(zr) {\n\n        if (__DEV__) {\n            zrUtil.assert(zr);\n        }\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:zrender/zrender~ZRender}\n         * @private\n         */\n        this._zr = zr;\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *     'line', 'rect', 'polygon' or false\n         *     If passing false/null/undefined, disable brush.\n         *     If passing 'auto', determined by panel.defaultBrushType\n         * @private\n         * @type {string}\n         */\n        this._brushType;\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *\n         * @private\n         * @type {Object}\n         */\n        this._brushOption;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._panels;\n\n        /**\n         * @private\n         * @type {Array.<nubmer>}\n         */\n        this._track = [];\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._dragging;\n\n        /**\n         * @private\n         * @type {Array}\n         */\n        this._covers = [];\n\n        /**\n         * @private\n         * @type {moudule:zrender/container/Group}\n         */\n        this._creatingCover;\n\n        /**\n         * `true` means global panel\n         * @private\n         * @type {module:zrender/container/Group|boolean}\n         */\n        this._creatingPanel;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._enableGlobalPan;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        if (__DEV__) {\n            this._mounted;\n        }\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._uid = 'brushController_' + baseUID++;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._handlers = {};\n        each(mouseHandlers, function (handler, eventName) {\n            this._handlers[eventName] = zrUtil.bind(handler, this);\n        }, this);\n    }\n\n    BrushController.prototype = {\n\n        constructor: BrushController,\n\n        /**\n         * If set to null/undefined/false, select disabled.\n         * @param {Object} brushOption\n         * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n         *                          If passing false/null/undefined, disable brush.\n         *                          If passing 'auto', determined by panel.defaultBrushType.\n         *                              ('auto' can not be used in global panel)\n         * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n         * @param {boolean} [brushOption.transformable=true]\n         * @param {boolean} [brushOption.removeOnClick=false]\n         * @param {Object} [brushOption.brushStyle]\n         * @param {number} [brushOption.brushStyle.width]\n         * @param {number} [brushOption.brushStyle.lineWidth]\n         * @param {string} [brushOption.brushStyle.stroke]\n         * @param {string} [brushOption.brushStyle.fill]\n         * @param {number} [brushOption.z]\n         */\n        enableBrush: function (brushOption) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            this._brushType && doDisableBrush(this);\n            brushOption.brushType && doEnableBrush(this, brushOption);\n\n            return this;\n        },\n\n        /**\n         * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n         *        Each items: {\n         *            panelId, // mandatory.\n         *            clipPath, // mandatory. function.\n         *            isTargetByCursor, // mandatory. function.\n         *            defaultBrushType, // optional, only used when brushType is 'auto'.\n         *            getLinearBrushOtherExtent, // optional. function.\n         *        }\n         */\n        setPanels: function (panelOpts) {\n            if (panelOpts && panelOpts.length) {\n                var panels = this._panels = {};\n                zrUtil.each(panelOpts, function (panelOpts) {\n                    panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n                });\n            }\n            else {\n                this._panels = null;\n            }\n            return this;\n        },\n\n        /**\n         * @param {Object} [opt]\n         * @return {boolean} [opt.enableGlobalPan=false]\n         */\n        mount: function (opt) {\n            opt = opt || {};\n\n            if (__DEV__) {\n                this._mounted = true; // should be at first.\n            }\n\n            this._enableGlobalPan = opt.enableGlobalPan;\n\n            var thisGroup = this.group;\n            this._zr.add(thisGroup);\n\n            thisGroup.attr({\n                position: opt.position || [0, 0],\n                rotation: opt.rotation || 0,\n                scale: opt.scale || [1, 1]\n            });\n            this._transform = thisGroup.getLocalTransform();\n\n            return this;\n        },\n\n        eachCover: function (cb, context) {\n            each(this._covers, cb, context);\n        },\n\n        /**\n         * Update covers.\n         * @param {Array.<Object>} brushOptionList Like:\n         *        [\n         *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n         *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n         *            ...\n         *        ]\n         *        `brushType` is required in each cover info. (can not be 'auto')\n         *        `id` is not mandatory.\n         *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n         *        If brushOptionList is null/undefined, all covers removed.\n         */\n        updateCovers: function (brushOptionList) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n                return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n            });\n\n            var tmpIdPrefix = '\\0-brush-index-';\n            var oldCovers = this._covers;\n            var newCovers = this._covers = [];\n            var controller = this;\n            var creatingCover = this._creatingCover;\n\n            (new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey))\n                .add(addOrUpdate)\n                .update(addOrUpdate)\n                .remove(remove)\n                .execute();\n\n            return this;\n\n            function getKey(brushOption, index) {\n                return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index)\n                    + '-' + brushOption.brushType;\n            }\n\n            function oldGetKey(cover, index) {\n                return getKey(cover.__brushOption, index);\n            }\n\n            function addOrUpdate(newIndex, oldIndex) {\n                var newBrushOption = brushOptionList[newIndex];\n                // Consider setOption in event listener of brushSelect,\n                // where updating cover when creating should be forbiden.\n                if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n                    newCovers[newIndex] = oldCovers[oldIndex];\n                }\n                else {\n                    var cover = newCovers[newIndex] = oldIndex != null\n                        ? (\n                            oldCovers[oldIndex].__brushOption = newBrushOption,\n                            oldCovers[oldIndex]\n                        )\n                        : endCreating(controller, createCover(controller, newBrushOption));\n                    updateCoverAfterCreation(controller, cover);\n                }\n            }\n\n            function remove(oldIndex) {\n                if (oldCovers[oldIndex] !== creatingCover) {\n                    controller.group.remove(oldCovers[oldIndex]);\n                }\n            }\n        },\n\n        unmount: function () {\n            if (__DEV__) {\n                if (!this._mounted) {\n                    return;\n                }\n            }\n\n            this.enableBrush(false);\n\n            // container may 'removeAll' outside.\n            clearCovers(this);\n            this._zr.remove(this.group);\n\n            if (__DEV__) {\n                this._mounted = false; // should be at last.\n            }\n\n            return this;\n        },\n\n        dispose: function () {\n            this.unmount();\n            this.off();\n        }\n    };\n\n    zrUtil.mixin(BrushController, Eventful);\n\n    function doEnableBrush(controller, brushOption) {\n        var zr = controller._zr;\n\n        // Consider roam, which takes globalPan too.\n        if (!controller._enableGlobalPan) {\n            interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n        }\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.on(eventName, handler);\n        });\n\n        controller._brushType = brushOption.brushType;\n        controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    }\n\n    function doDisableBrush(controller) {\n        var zr = controller._zr;\n\n        interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.off(eventName, handler);\n        });\n\n        controller._brushType = controller._brushOption = null;\n    }\n\n    function createCover(controller, brushOption) {\n        var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n        cover.__brushOption = brushOption;\n        updateZ(cover, brushOption);\n        controller.group.add(cover);\n        return cover;\n    }\n\n    function endCreating(controller, creatingCover) {\n        var coverRenderer = getCoverRenderer(creatingCover);\n        if (coverRenderer.endCreating) {\n            coverRenderer.endCreating(controller, creatingCover);\n            updateZ(creatingCover, creatingCover.__brushOption);\n        }\n        return creatingCover;\n    }\n\n    function updateCoverShape(controller, cover) {\n        var brushOption = cover.__brushOption;\n        getCoverRenderer(cover).updateCoverShape(\n            controller, cover, brushOption.range, brushOption\n        );\n    }\n\n    function updateZ(cover, brushOption) {\n        var z = brushOption.z;\n        z == null && (z = COVER_Z);\n        cover.traverse(function (el) {\n            el.z = z;\n            el.z2 = z; // Consider in given container.\n        });\n    }\n\n    function updateCoverAfterCreation(controller, cover) {\n        getCoverRenderer(cover).updateCommon(controller, cover);\n        updateCoverShape(controller, cover);\n    }\n\n    function getCoverRenderer(cover) {\n        return coverRenderers[cover.__brushOption.brushType];\n    }\n\n    // return target panel or `true` (means global panel)\n    function getPanelByPoint(controller, e, localCursorPoint) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panel;\n        var transform = controller._transform;\n        each(panels, function (pn) {\n            pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n        });\n        return panel;\n    }\n\n    // Return a panel or true\n    function getPanelByCover(controller, cover) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panelId = cover.__brushOption.panelId;\n        // User may give cover without coord sys info,\n        // which is then treated as global panel.\n        return panelId != null ? panels[panelId] : true;\n    }\n\n    function clearCovers(controller) {\n        var covers = controller._covers;\n        var originalLength = covers.length;\n        each(covers, function (cover) {\n            controller.group.remove(cover);\n        }, controller);\n        covers.length = 0;\n\n        return !!originalLength;\n    }\n\n    function trigger(controller, opt) {\n        var areas = map(controller._covers, function (cover) {\n            var brushOption = cover.__brushOption;\n            var range = zrUtil.clone(brushOption.range);\n            return {\n                brushType: brushOption.brushType,\n                panelId: brushOption.panelId,\n                range: range\n            };\n        });\n\n        controller.trigger('brush', areas, {\n            isEnd: !!opt.isEnd,\n            removeOnClick: !!opt.removeOnClick\n        });\n    }\n\n    function shouldShowCover(controller) {\n        var track = controller._track;\n\n        if (!track.length) {\n            return false;\n        }\n\n        var p2 = track[track.length - 1];\n        var p1 = track[0];\n        var dx = p2[0] - p1[0];\n        var dy = p2[1] - p1[1];\n        var dist = mathPow(dx * dx + dy * dy, 0.5);\n\n        return dist > UNSELECT_THRESHOLD;\n    }\n\n    function getTrackEnds(track) {\n        var tail = track.length - 1;\n        tail < 0 && (tail = 0);\n        return [track[0], track[tail]];\n    }\n\n    function createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n        var cover = new graphic.Group();\n\n        cover.add(new graphic.Rect({\n            name: 'main',\n            style: makeStyle(brushOption),\n            silent: true,\n            draggable: true,\n            cursor: 'move',\n            drift: curry(doDrift, controller, cover, 'nswe'),\n            ondragend: curry(trigger, controller, {isEnd: true})\n        }));\n\n        each(\n            edgeNames,\n            function (name) {\n                cover.add(new graphic.Rect({\n                    name: name,\n                    style: {opacity: 0},\n                    draggable: true,\n                    silent: true,\n                    invisible: true,\n                    drift: curry(doDrift, controller, cover, name),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            }\n        );\n\n        return cover;\n    }\n\n    function updateBaseRect(controller, cover, localRange, brushOption) {\n        var lineWidth = brushOption.brushStyle.lineWidth || 0;\n        var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n        var x = localRange[0][0];\n        var y = localRange[1][0];\n        var xa = x - lineWidth / 2;\n        var ya = y - lineWidth / 2;\n        var x2 = localRange[0][1];\n        var y2 = localRange[1][1];\n        var x2a = x2 - handleSize + lineWidth / 2;\n        var y2a = y2 - handleSize + lineWidth / 2;\n        var width = x2 - x;\n        var height = y2 - y;\n        var widtha = width + lineWidth;\n        var heighta = height + lineWidth;\n\n        updateRectShape(controller, cover, 'main', x, y, width, height);\n\n        if (brushOption.transformable) {\n            updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n            updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n\n            updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n            updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n        }\n    }\n\n    function updateCommon(controller, cover) {\n        var brushOption = cover.__brushOption;\n        var transformable = brushOption.transformable;\n\n        var mainEl = cover.childAt(0);\n        mainEl.useStyle(makeStyle(brushOption));\n        mainEl.attr({\n            silent: !transformable,\n            cursor: transformable ? 'move' : 'default'\n        });\n\n        each(\n            ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'],\n            function (name) {\n                var el = cover.childOfName(name);\n                var globalDir = getGlobalDirection(controller, name);\n\n                el && el.attr({\n                    silent: !transformable,\n                    invisible: !transformable,\n                    cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n                });\n            }\n        );\n    }\n\n    function updateRectShape(controller, cover, name, x, y, w, h) {\n        var el = cover.childOfName(name);\n        el && el.setShape(pointsToRect(\n            clipByPanel(controller, cover, [[x, y], [x + w, y + h]])\n        ));\n    }\n\n    function makeStyle(brushOption) {\n        return zrUtil.defaults({strokeNoScale: true}, brushOption.brushStyle);\n    }\n\n    function formatRectRange(x, y, x2, y2) {\n        var min = [mathMin(x, x2), mathMin(y, y2)];\n        var max = [mathMax(x, x2), mathMax(y, y2)];\n\n        return [\n            [min[0], max[0]], // x range\n            [min[1], max[1]] // y range\n        ];\n    }\n\n    function getTransform(controller) {\n        return graphic.getTransform(controller.group);\n    }\n\n    function getGlobalDirection(controller, localDirection) {\n        if (localDirection.length > 1) {\n            localDirection = localDirection.split('');\n            var globalDir = [\n                getGlobalDirection(controller, localDirection[0]),\n                getGlobalDirection(controller, localDirection[1])\n            ];\n            (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n            return globalDir.join('');\n        }\n        else {\n            var map = {w: 'left', e: 'right', n: 'top', s: 'bottom'};\n            var inverseMap = {left: 'w', right: 'e', top: 'n', bottom: 's'};\n            var globalDir = graphic.transformDirection(\n                map[localDirection], getTransform(controller)\n            );\n            return inverseMap[globalDir];\n        }\n    }\n\n    function driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n        var brushOption = cover.__brushOption;\n        var rectRange = toRectRange(brushOption.range);\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(name.split(''), function (namePart) {\n            var ind = DIRECTION_MAP[namePart];\n            rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n        });\n\n        brushOption.range = fromRectRange(formatRectRange(\n            rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]\n        ));\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function driftPolygon(controller, cover, dx, dy, e) {\n        var range = cover.__brushOption.range;\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(range, function (point) {\n            point[0] += localDelta[0];\n            point[1] += localDelta[1];\n        });\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function toLocalDelta(controller, dx, dy) {\n        var thisGroup = controller.group;\n        var localD = thisGroup.transformCoordToLocal(dx, dy);\n        var localZero = thisGroup.transformCoordToLocal(0, 0);\n\n        return [localD[0] - localZero[0], localD[1] - localZero[1]];\n    }\n\n    function clipByPanel(controller, cover, data) {\n        var panel = getPanelByCover(controller, cover);\n\n        return (panel && panel !== true)\n            ? panel.clipPath(data, controller._transform)\n            : zrUtil.clone(data);\n    }\n\n    function pointsToRect(points) {\n        var xmin = mathMin(points[0][0], points[1][0]);\n        var ymin = mathMin(points[0][1], points[1][1]);\n        var xmax = mathMax(points[0][0], points[1][0]);\n        var ymax = mathMax(points[0][1], points[1][1]);\n\n        return {\n            x: xmin,\n            y: ymin,\n            width: xmax - xmin,\n            height: ymax - ymin\n        };\n    }\n\n    function resetCursor(controller, e, localCursorPoint) {\n        // Check active\n        if (!controller._brushType) {\n            return;\n        }\n\n        var zr = controller._zr;\n        var covers = controller._covers;\n        var currPanel = getPanelByPoint(controller, e, localCursorPoint);\n\n        // Check whether in covers.\n        if (!controller._dragging) {\n            for (var i = 0; i < covers.length; i++) {\n                var brushOption = covers[i].__brushOption;\n                if (currPanel\n                    && (currPanel === true || brushOption.panelId === currPanel.panelId)\n                    && coverRenderers[brushOption.brushType].contain(\n                        covers[i], localCursorPoint[0], localCursorPoint[1]\n                    )\n                ) {\n                    // Use cursor style set on cover.\n                    return;\n                }\n            }\n        }\n\n        currPanel && zr.setCursorStyle('crosshair');\n    }\n\n    function preventDefault(e) {\n        var rawE = e.event;\n        rawE.preventDefault && rawE.preventDefault();\n    }\n\n    function mainShapeContain(cover, x, y) {\n        return cover.childOfName('main').contain(x, y);\n    }\n\n    function updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n        var creatingCover = controller._creatingCover;\n        var panel = controller._creatingPanel;\n        var thisBrushOption = controller._brushOption;\n        var eventParams;\n\n        controller._track.push(localCursorPoint.slice());\n\n        if (shouldShowCover(controller) || creatingCover) {\n\n            if (panel && !creatingCover) {\n                thisBrushOption.brushMode === 'single' && clearCovers(controller);\n                var brushOption = zrUtil.clone(thisBrushOption);\n                brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n                brushOption.panelId = panel === true ? null : panel.panelId;\n                creatingCover = controller._creatingCover = createCover(controller, brushOption);\n                controller._covers.push(creatingCover);\n            }\n\n            if (creatingCover) {\n                var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n                var coverBrushOption = creatingCover.__brushOption;\n\n                coverBrushOption.range = coverRenderer.getCreatingRange(\n                    clipByPanel(controller, creatingCover, controller._track)\n                );\n\n                if (isEnd) {\n                    endCreating(controller, creatingCover);\n                    coverRenderer.updateCommon(controller, creatingCover);\n                }\n\n                updateCoverShape(controller, creatingCover);\n\n                eventParams = {isEnd: isEnd};\n            }\n        }\n        else if (\n            isEnd\n            && thisBrushOption.brushMode === 'single'\n            && thisBrushOption.removeOnClick\n        ) {\n            // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n            // But a single click do not clear covers, because user may have casual\n            // clicks (for example, click on other component and do not expect covers\n            // disappear).\n            // Only some cover removed, trigger action, but not every click trigger action.\n            if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n                eventParams = {isEnd: isEnd, removeOnClick: true};\n            }\n        }\n\n        return eventParams;\n    }\n\n    function determineBrushType(brushType, panel) {\n        if (brushType === 'auto') {\n            if (__DEV__) {\n                zrUtil.assert(\n                    panel && panel.defaultBrushType,\n                    'MUST have defaultBrushType when brushType is \"atuo\"'\n                );\n            }\n            return panel.defaultBrushType;\n        }\n        return brushType;\n    }\n\n    var mouseHandlers = {\n\n        mousedown: function (e) {\n            if (this._dragging) {\n                // In case some browser do not support globalOut,\n                // and release mose out side the browser.\n                handleDragEnd.call(this, e);\n            }\n            else if (!e.target || !e.target.draggable) {\n\n                preventDefault(e);\n\n                var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n\n                this._creatingCover = null;\n                var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n                if (panel) {\n                    this._dragging = true;\n                    this._track = [localCursorPoint.slice()];\n                }\n            }\n        },\n\n        mousemove: function (e) {\n            var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n\n            resetCursor(this, e, localCursorPoint);\n\n            if (this._dragging) {\n\n                preventDefault(e);\n\n                var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n\n                eventParams && trigger(this, eventParams);\n            }\n        },\n\n        mouseup: handleDragEnd //,\n\n        // FIXME\n        // in tooltip, globalout should not be triggered.\n        // globalout: handleDragEnd\n    };\n\n    function handleDragEnd(e) {\n        if (this._dragging) {\n\n            preventDefault(e);\n\n            var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n            var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n\n            this._dragging = false;\n            this._track = [];\n            this._creatingCover = null;\n\n            // trigger event shoule be at final, after procedure will be nested.\n            eventParams && trigger(this, eventParams);\n        }\n    }\n\n    /**\n     * key: brushType\n     * @type {Object}\n     */\n    var coverRenderers = {\n\n        lineX: getLineRenderer(0),\n\n        lineY: getLineRenderer(1),\n\n        rect: {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            return range;\n                        },\n                        function (range) {\n                            return range;\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                updateBaseRect(controller, cover, localRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        },\n\n        polygon: {\n            createCover: function (controller, brushOption) {\n                var cover = new graphic.Group();\n\n                // Do not use graphic.Polygon because graphic.Polyline do not close the\n                // border of the shape when drawing, which is a better experience for user.\n                cover.add(new graphic.Polyline({\n                    name: 'main',\n                    style: makeStyle(brushOption),\n                    silent: true\n                }));\n\n                return cover;\n            },\n            getCreatingRange: function (localTrack) {\n                return localTrack;\n            },\n            endCreating: function (controller, cover) {\n                cover.remove(cover.childAt(0));\n                // Use graphic.Polygon close the shape.\n                cover.add(new graphic.Polygon({\n                    name: 'main',\n                    draggable: true,\n                    drift: curry(driftPolygon, controller, cover),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                cover.childAt(0).setShape({\n                    points: clipByPanel(controller, cover, localRange)\n                });\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        }\n    };\n\n    function getLineRenderer(xyIndex) {\n        return {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            var rectRange = [range, [0, 100]];\n                            xyIndex && rectRange.reverse();\n                            return rectRange;\n                        },\n                        function (rectRange) {\n                            return rectRange[xyIndex];\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    [['w', 'e'], ['n', 's']][xyIndex]\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n                var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n\n                return [min, max];\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                var otherExtent;\n                // If brushWidth not specified, fit the panel.\n                var panel = getPanelByCover(controller, cover);\n                if (panel !== true && panel.getLinearBrushOtherExtent) {\n                    otherExtent = panel.getLinearBrushOtherExtent(\n                        xyIndex, controller._transform\n                    );\n                }\n                else {\n                    var zr = controller._zr;\n                    otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n                }\n                var rectRange = [localRange, otherExtent];\n                xyIndex && rectRange.reverse();\n\n                updateBaseRect(controller, cover, rectRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        };\n    }\n\n    module.exports = BrushController;\n\n\n/***/ }),\n\n/***/ 1057:\n/***/ (function(module, exports) {\n\n\n\n    var helper = {};\n\n    var IRRELEVANT_EXCLUDES = {'axisPointer': 1, 'tooltip': 1, 'brush': 1};\n\n    /**\n     * Avoid that: mouse click on a elements that is over geo or graph,\n     * but roam is triggered.\n     */\n    helper.onIrrelevantElement = function (e, api, targetCoordSysModel) {\n        var model = api.getComponentByElement(e.topTarget);\n        // If model is axisModel, it works only if it is injected with coordinateSystem.\n        var coordSys = model && model.coordinateSystem;\n        return model\n            && model !== targetCoordSysModel\n            && !IRRELEVANT_EXCLUDES[model.mainType]\n            && (coordSys && coordSys.model !== targetCoordSysModel);\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ 1060:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textHelper = __webpack_require__(1027);\n    var BoundingRect = __webpack_require__(983);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext2D} ctx\n         * @param  {Object} rect Displayable rect\n         */\n        drawRectText: function (ctx, rect) {\n            var style = this.style;\n\n            rect = style.textRect || rect;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.transformText) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // transformText and textRotation can not be used at the same time.\n            textHelper.renderText(this, ctx, text, style, rect);\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n\n/***/ 1061:\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1062:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(992);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1063:\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n\n/***/ 1064:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(1010);\n    var zrUtil = __webpack_require__(972);\n    var textContain = __webpack_require__(986);\n    var textHelper = __webpack_require__(1027);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            // Use props with prefix 'text'.\n            style.fill = style.stroke = style.shadowBlur = style.shadowColor =\n                style.shadowOffsetX = style.shadowOffsetY = null;\n\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            this.setTransform(ctx);\n\n            textHelper.renderText(this, ctx, text, style);\n\n            this.restoreTransform(ctx);\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            if (!this._rect) {\n                var text = style.text;\n                text != null ? (text += '') : (text = '');\n\n                var rect = textContain.getBoundingRect(\n                    style.text + '',\n                    style.font,\n                    style.textAlign,\n                    style.textVerticalAlign,\n                    style.textPadding,\n                    style.rich\n                );\n\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n\n                if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n                    var w = style.textStrokeWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n\n/***/ 1065:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(972);\n\n    var Gradient = __webpack_require__(1011);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n\n/***/ 1066:\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(1034);\n    var env = __webpack_require__(979);\n    var zrUtil = __webpack_require__(972);\n\n    var Handler = __webpack_require__(1112);\n    var Storage = __webpack_require__(1114);\n    var Animation = __webpack_require__(1115);\n    var HandlerProxy = __webpack_require__(1116);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(1118)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.6.3';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function (dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function (id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // var start = new Date();\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n            // var end = new Date();\n\n            // var log = document.getElementById('log');\n            // if (log) {\n            //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n            // }\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ }),\n\n/***/ 1067:\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(1023);\n\n    __webpack_require__(1129);\n\n    __webpack_require__(1130);\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(973).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(973).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n\n/***/ 1068:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    // Do not contain scrollable legend, for sake of file size.\n\n    __webpack_require__(1054);\n    __webpack_require__(1132);\n    __webpack_require__(1055);\n\n    var echarts = __webpack_require__(973);\n    // Series Filter\n    echarts.registerProcessor(__webpack_require__(1133));\n\n    __webpack_require__(984).registerSubTypeDefaulter('legend', function () {\n        // Default 'plain' when no type specified.\n        return 'plain';\n    });\n\n\n\n/***/ }),\n\n/***/ 1069:\n/***/ (function(module, exports) {\n\n\n    module.exports = function (seriesType, ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (!legendModels || !legendModels.length) {\n            return;\n        }\n        ecModel.eachSeriesByType(seriesType, function (series) {\n            var data = series.getData();\n            data.filterSelf(function (idx) {\n                var name = data.getName(idx);\n                // If in any legend component the status is not selected.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(name)) {\n                        return false;\n                    }\n                }\n                return true;\n            }, this);\n        }, this);\n    };\n\n\n/***/ }),\n\n/***/ 1070:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(1136);\n    __webpack_require__(1137);\n\n    __webpack_require__(1138);\n    __webpack_require__(1139);\n    __webpack_require__(1140);\n    __webpack_require__(1141);\n    __webpack_require__(1146);\n\n\n/***/ }),\n\n/***/ 1071:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var ATTR = '\\0_ec_interaction_mutex';\n\n    var interactionMutex = {\n\n        take: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            store[resourceKey] = userKey;\n        },\n\n        release: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            var uKey = store[resourceKey];\n\n            if (uKey === userKey) {\n                store[resourceKey] = null;\n            }\n        },\n\n        isTaken: function (zr, resourceKey) {\n            return !!getStore(zr)[resourceKey];\n        }\n    };\n\n    function getStore(zr) {\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    /**\n     * payload: {\n     *     type: 'takeGlobalCursor',\n     *     key: 'dataZoomSelect', or 'brush', or ...,\n     *         If no userKey, release global cursor.\n     * }\n     */\n    __webpack_require__(973).registerAction(\n        {type: 'takeGlobalCursor', event: 'globalCursorTaken', update: 'update'},\n        function () {}\n    );\n\n    module.exports = interactionMutex;\n\n\n/***/ }),\n\n/***/ 1072:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(972);\n    var graphic = __webpack_require__(974);\n    var modelUtil = __webpack_require__(976);\n    var brushHelper = __webpack_require__(1073);\n\n    var each = zrUtil.each;\n    var indexOf = zrUtil.indexOf;\n    var curry = zrUtil.curry;\n\n    var COORD_CONVERTS = ['dataToPoint', 'pointToData'];\n\n    // FIXME\n    // how to genarialize to more coordinate systems.\n    var INCLUDE_FINDER_MAIN_TYPES = [\n        'grid', 'xAxis', 'yAxis', 'geo', 'graph',\n        'polar', 'radiusAxis', 'angleAxis', 'bmap'\n    ];\n\n    /**\n     * [option in constructor]:\n     * {\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     * }\n     *\n     *\n     * [targetInfo]:\n     *\n     * There can be multiple axes in a single targetInfo. Consider the case\n     * of `grid` component, a targetInfo represents a grid which contains one or more\n     * cartesian and one or more axes. And consider the case of parallel system,\n     * which has multiple axes in a coordinate system.\n     * Can be {\n     *     panelId: ...,\n     *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n     *     coordSyses: all cartesians.\n     *     gridModel: <grid component>\n     *     xAxes: correspond to coordSyses on index\n     *     yAxes: correspond to coordSyses on index\n     * }\n     * or {\n     *     panelId: ...,\n     *     coordSys: <geo coord sys>\n     *     coordSyses: [<geo coord sys>]\n     *     geoModel: <geo component>\n     * }\n     *\n     *\n     * [panelOpt]:\n     *\n     * Make from targetInfo. Input to BrushController.\n     * {\n     *     panelId: ...,\n     *     rect: ...\n     * }\n     *\n     *\n     * [area]:\n     *\n     * Generated by BrushController or user input.\n     * {\n     *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n     *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     *     range: pixel range.\n     *     coordRange: representitive coord range (the first one of coordRanges).\n     *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n     * }\n     */\n\n    /**\n     * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n     *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} [opt]\n     * @param {Array.<string>} [opt.include] include coordinate system types.\n     */\n    function BrushTargetManager(option, ecModel, opt) {\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        var targetInfoList = this._targetInfoList = [];\n        var info = {};\n        var foundCpts = parseFinder(ecModel, option);\n\n        each(targetInfoBuilders, function (builder, type) {\n            if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n                builder(foundCpts, targetInfoList, info);\n            }\n        });\n    }\n\n    var proto = BrushTargetManager.prototype;\n\n    proto.setOutputRanges = function (areas, ecModel) {\n        this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            (area.coordRanges || (area.coordRanges = [])).push(coordRange);\n            // area.coordRange is the first of area.coordRanges\n            if (!area.coordRange) {\n                area.coordRange = coordRange;\n                // In 'category' axis, coord to pixel is not reversible, so we can not\n                // rebuild range by coordRange accrately, which may bring trouble when\n                // brushing only one item. So we use __rangeOffset to rebuilding range\n                // by coordRange. And this it only used in brush component so it is no\n                // need to be adapted to coordRanges.\n                var result = coordConvert[area.brushType](0, coordSys, coordRange);\n                area.__rangeOffset = {\n                    offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n                    xyMinMax: result.xyMinMax\n                };\n            }\n        });\n    };\n\n    proto.matchOutputRanges = function (areas, ecModel, cb) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (targetInfo && targetInfo !== true) {\n                zrUtil.each(\n                    targetInfo.coordSyses,\n                    function (coordSys) {\n                        var result = coordConvert[area.brushType](1, coordSys, area.range);\n                        cb(area, result.values, coordSys, ecModel);\n                    }\n                );\n            }\n        }, this);\n    };\n\n    proto.setInputRanges = function (areas, ecModel) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (__DEV__) {\n                zrUtil.assert(\n                    !targetInfo || targetInfo === true || area.coordRange,\n                    'coordRange must be specified when coord index specified.'\n                );\n                zrUtil.assert(\n                    !targetInfo || targetInfo !== true || area.range,\n                    'range must be specified in global brush.'\n                );\n            }\n\n            area.range = area.range || [];\n\n            // convert coordRange to global range and set panelId.\n            if (targetInfo && targetInfo !== true) {\n                area.panelId = targetInfo.panelId;\n                // (1) area.range shoule always be calculate from coordRange but does\n                // not keep its original value, for the sake of the dataZoom scenario,\n                // where area.coordRange remains unchanged but area.range may be changed.\n                // (2) Only support converting one coordRange to pixel range in brush\n                // component. So do not consider `coordRanges`.\n                // (3) About __rangeOffset, see comment above.\n                var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n                var rangeOffset = area.__rangeOffset;\n                area.range = rangeOffset\n                    ? diffProcessor[area.brushType](\n                        result.values,\n                        rangeOffset.offset,\n                        getScales(result.xyMinMax, rangeOffset.xyMinMax)\n                    )\n                    : result.values;\n            }\n        }, this);\n    };\n\n    proto.makePanelOpts = function (api, getDefaultBrushType) {\n        return zrUtil.map(this._targetInfoList, function (targetInfo) {\n            var rect = targetInfo.getPanelRect();\n            return {\n                panelId: targetInfo.panelId,\n                defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n                clipPath: brushHelper.makeRectPanelClipPath(rect),\n                isTargetByCursor: brushHelper.makeRectIsTargetByCursor(\n                    rect, api, targetInfo.coordSysModel\n                ),\n                getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n            };\n        });\n    };\n\n    proto.controlSeries = function (area, seriesModel, ecModel) {\n        // Check whether area is bound in coord, and series do not belong to that coord.\n        // If do not do this check, some brush (like lineX) will controll all axes.\n        var targetInfo = this.findTargetInfo(area, ecModel);\n        return targetInfo === true || (\n            targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0\n        );\n    };\n\n    /**\n     * If return Object, a coord found.\n     * If reutrn true, global found.\n     * Otherwise nothing found.\n     *\n     * @param {Object} area\n     * @param {Array} targetInfoList\n     * @return {Object|boolean}\n     */\n    proto.findTargetInfo = function (area, ecModel) {\n        var targetInfoList = this._targetInfoList;\n        var foundCpts = parseFinder(ecModel, area);\n\n        for (var i = 0; i < targetInfoList.length; i++) {\n            var targetInfo = targetInfoList[i];\n            var areaPanelId = area.panelId;\n            if (areaPanelId) {\n                if (targetInfo.panelId === areaPanelId) {\n                    return targetInfo;\n                }\n            }\n            else {\n                for (var i = 0; i < targetInfoMatchers.length; i++) {\n                    if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n                        return targetInfo;\n                    }\n                }\n            }\n        }\n\n        return true;\n    };\n\n    function formatMinMax(minMax) {\n        minMax[0] > minMax[1] && minMax.reverse();\n        return minMax;\n    }\n\n    function parseFinder(ecModel, option) {\n        return modelUtil.parseFinder(\n            ecModel, option, {includeMainTypes: INCLUDE_FINDER_MAIN_TYPES}\n        );\n    }\n\n    var targetInfoBuilders = {\n\n        grid: function (foundCpts, targetInfoList) {\n            var xAxisModels = foundCpts.xAxisModels;\n            var yAxisModels = foundCpts.yAxisModels;\n            var gridModels = foundCpts.gridModels;\n            // Remove duplicated.\n            var gridModelMap = zrUtil.createHashMap();\n            var xAxesHas = {};\n            var yAxesHas = {};\n\n            if (!xAxisModels && !yAxisModels && !gridModels) {\n                return;\n            }\n\n            each(xAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap.set(gridModel.id, gridModel);\n                xAxesHas[gridModel.id] = true;\n            });\n            each(yAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap.set(gridModel.id, gridModel);\n                yAxesHas[gridModel.id] = true;\n            });\n            each(gridModels, function (gridModel) {\n                gridModelMap.set(gridModel.id, gridModel);\n                xAxesHas[gridModel.id] = true;\n                yAxesHas[gridModel.id] = true;\n            });\n\n            gridModelMap.each(function (gridModel) {\n                var grid = gridModel.coordinateSystem;\n                var cartesians = [];\n\n                each(grid.getCartesians(), function (cartesian, index) {\n                    if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0\n                        || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0\n                    ) {\n                        cartesians.push(cartesian);\n                    }\n                });\n                targetInfoList.push({\n                    panelId: 'grid--' + gridModel.id,\n                    gridModel: gridModel,\n                    coordSysModel: gridModel,\n                    // Use the first one as the representitive coordSys.\n                    coordSys: cartesians[0],\n                    coordSyses: cartesians,\n                    getPanelRect: panelRectBuilder.grid,\n                    xAxisDeclared: xAxesHas[gridModel.id],\n                    yAxisDeclared: yAxesHas[gridModel.id]\n                });\n            });\n        },\n\n        geo: function (foundCpts, targetInfoList) {\n            each(foundCpts.geoModels, function (geoModel) {\n                var coordSys = geoModel.coordinateSystem;\n                targetInfoList.push({\n                    panelId: 'geo--' + geoModel.id,\n                    geoModel: geoModel,\n                    coordSysModel: geoModel,\n                    coordSys: coordSys,\n                    coordSyses: [coordSys],\n                    getPanelRect: panelRectBuilder.geo\n                });\n            });\n        }\n    };\n\n    var targetInfoMatchers = [\n\n        // grid\n        function (foundCpts, targetInfo) {\n            var xAxisModel = foundCpts.xAxisModel;\n            var yAxisModel = foundCpts.yAxisModel;\n            var gridModel = foundCpts.gridModel;\n\n            !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n            !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n\n            return gridModel && gridModel === targetInfo.gridModel;\n        },\n\n        // geo\n        function (foundCpts, targetInfo) {\n            var geoModel = foundCpts.geoModel;\n            return geoModel && geoModel === targetInfo.geoModel;\n        }\n    ];\n\n    var panelRectBuilder = {\n\n        grid: function () {\n            // grid is not Transformable.\n            return this.coordSys.grid.getRect().clone();\n        },\n\n        geo: function () {\n            var coordSys = this.coordSys;\n            var rect = coordSys.getBoundingRect().clone();\n            // geo roam and zoom transform\n            rect.applyTransform(graphic.getTransform(coordSys));\n            return rect;\n        }\n    };\n\n    var coordConvert = {\n\n        lineX: curry(axisConvert, 0),\n\n        lineY: curry(axisConvert, 1),\n\n        rect: function (to, coordSys, rangeOrCoordRange) {\n            var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n            var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n            var values = [\n                formatMinMax([xminymin[0], xmaxymax[0]]),\n                formatMinMax([xminymin[1], xmaxymax[1]])\n            ];\n            return {values: values, xyMinMax: values};\n        },\n\n        polygon: function (to, coordSys, rangeOrCoordRange) {\n            var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n            var values = zrUtil.map(rangeOrCoordRange, function (item) {\n                var p = coordSys[COORD_CONVERTS[to]](item);\n                xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n                xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n                xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n                xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n                return p;\n            });\n            return {values: values, xyMinMax: xyMinMax};\n        }\n    };\n\n    function axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n        if (__DEV__) {\n            zrUtil.assert(\n                coordSys.type === 'cartesian2d',\n                'lineX/lineY brush is available only in cartesian2d.'\n            );\n        }\n\n        var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n        var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n            return to\n                ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i]))\n                : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n        }));\n        var xyMinMax = [];\n        xyMinMax[axisNameIndex] = values;\n        xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n\n        return {values: values, xyMinMax: xyMinMax};\n    }\n\n    var diffProcessor = {\n        lineX: curry(axisDiffProcessor, 0),\n\n        lineY: curry(axisDiffProcessor, 1),\n\n        rect: function (values, refer, scales) {\n            return [\n                [values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]],\n                [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]\n            ];\n        },\n\n        polygon: function (values, refer, scales) {\n            return zrUtil.map(values, function (item, idx) {\n                return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n            });\n        }\n    };\n\n    function axisDiffProcessor(axisNameIndex, values, refer, scales) {\n        return [\n            values[0] - scales[axisNameIndex] * refer[0],\n            values[1] - scales[axisNameIndex] * refer[1]\n        ];\n    }\n\n    // We have to process scale caused by dataZoom manually,\n    // although it might be not accurate.\n    function getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n        var sizeCurr = getSize(xyMinMaxCurr);\n        var sizeOrigin = getSize(xyMinMaxOrigin);\n        var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n        isNaN(scales[0]) && (scales[0] = 1);\n        isNaN(scales[1]) && (scales[1] = 1);\n        return scales;\n    }\n\n    function getSize(xyMinMax) {\n        return xyMinMax\n            ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]]\n            : [NaN, NaN];\n    }\n\n    module.exports = BrushTargetManager;\n\n\n/***/ }),\n\n/***/ 1073:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var cursorHelper = __webpack_require__(1057);\n    var BoundingRect = __webpack_require__(983);\n    var graphicUtil = __webpack_require__(974);\n\n    var helper = {};\n\n    helper.makeRectPanelClipPath = function (rect) {\n        rect = normalizeRect(rect);\n        return function (localPoints, transform) {\n            return graphicUtil.clipPointsByRect(localPoints, rect);\n        };\n    };\n\n    helper.makeLinearBrushOtherExtent = function (rect, specifiedXYIndex) {\n        rect = normalizeRect(rect);\n        return function (xyIndex) {\n            var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n            var brushWidth = idx ? rect.width : rect.height;\n            var base = idx ? rect.x : rect.y;\n            return [base, base + (brushWidth || 0)];\n        };\n    };\n\n    helper.makeRectIsTargetByCursor = function (rect, api, targetModel) {\n        rect = normalizeRect(rect);\n        return function (e, localCursorPoint, transform) {\n            return rect.contain(localCursorPoint[0], localCursorPoint[1])\n                && !cursorHelper.onIrrelevantElement(e, api, targetModel);\n        };\n    };\n\n    // Consider width/height is negative.\n    function normalizeRect(rect) {\n        return BoundingRect.create(rect);\n    }\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ 1074:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(984).registerSubTypeDefaulter('dataZoom', function () {\n        // Default 'slider' when no type specified.\n        return 'slider';\n    });\n\n\n\n/***/ }),\n\n/***/ 1075:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom processor\n */\n\n\n    var echarts = __webpack_require__(973);\n\n    echarts.registerProcessor(function (ecModel, api) {\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // We calculate window and reset axis here but not in model\n            // init stage and not after action dispatch handler, because\n            // reset should be called after seriesData.restoreData.\n            dataZoomModel.eachTargetAxis(resetSingleAxis);\n\n            // Caution: data zoom filtering is order sensitive when using\n            // percent range and no min/max/scale set on axis.\n            // For example, we have dataZoom definition:\n            // [\n            //      {xAxisIndex: 0, start: 30, end: 70},\n            //      {yAxisIndex: 0, start: 20, end: 80}\n            // ]\n            // In this case, [20, 80] of y-dataZoom should be based on data\n            // that have filtered by x-dataZoom using range of [30, 70],\n            // but should not be based on full raw data. Thus sliding\n            // x-dataZoom will change both ranges of xAxis and yAxis,\n            // while sliding y-dataZoom will only change the range of yAxis.\n            // So we should filter x-axis after reset x-axis immediately,\n            // and then reset y-axis and filter y-axis.\n            dataZoomModel.eachTargetAxis(filterSingleAxis);\n        });\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // Fullfill all of the range props so that user\n            // is able to get them from chart.getOption().\n            var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n            var percentRange = axisProxy.getDataPercentWindow();\n            var valueRange = axisProxy.getDataValueWindow();\n\n            dataZoomModel.setRawRange({\n                start: percentRange[0],\n                end: percentRange[1],\n                startValue: valueRange[0],\n                endValue: valueRange[1]\n            }, true);\n        });\n    });\n\n    function resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n    }\n\n    function filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n    }\n\n\n\n\n/***/ }),\n\n/***/ 1076:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom action\n */\n\n\n    var zrUtil = __webpack_require__(972);\n    var helper = __webpack_require__(1021);\n    var echarts = __webpack_require__(973);\n\n\n    echarts.registerAction('dataZoom', function (payload, ecModel) {\n\n        var linkedNodesFinder = helper.createLinkedNodesFinder(\n            zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'),\n            helper.eachAxisDim,\n            function (model, dimNames) {\n                return model.get(dimNames.axisIndex);\n            }\n        );\n\n        var effectedModels = [];\n\n        ecModel.eachComponent(\n            {mainType: 'dataZoom', query: payload},\n            function (model, index) {\n                effectedModels.push.apply(\n                    effectedModels, linkedNodesFinder(model).nodes\n                );\n            }\n        );\n\n        zrUtil.each(effectedModels, function (dataZoomModel, index) {\n            dataZoomModel.setRawRange({\n                start: payload.start,\n                end: payload.end,\n                startValue: payload.startValue,\n                endValue: payload.endValue\n            });\n        });\n\n    });\n\n\n\n/***/ }),\n\n/***/ 1080:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(972);\n    var modelUtil = __webpack_require__(976);\n    var Model = __webpack_require__(980);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(984);\n\n    var globalDefault = __webpack_require__(1107);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(1040));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n\n/***/ 1081:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(1007)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1082:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(1007)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n\n/***/ 1083:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(986);\n    var graphicUtil = __webpack_require__(974);\n\n    var PATH_COLOR = ['textStyle', 'color'];\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @param {boolean} [isEmphasis]\n         * @return {string}\n         */\n        getTextColor: function (isEmphasis) {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (\n                    (!isEmphasis && ecModel) ? ecModel.get(PATH_COLOR) : null\n                );\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('verticalAlign') || this.getShallow('baseline'),\n                this.getShallow('padding'),\n                this.getShallow('rich'),\n                this.getShallow('truncateText')\n            );\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1084:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(981);\n    var PathProxy = __webpack_require__(1000);\n    var transformPath = __webpack_require__(1091);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1085:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(1035);\n    var util = __webpack_require__(972);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(1026);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path The path to fetch value from object, like 'a.b.c'.\n         * @param {boolean} [loop] Whether to loop animation.\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * Caution: this method will stop previous animation.\n         * So do not use this method to one element twice before\n         * animation starts, unless you know what you are doing.\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         * @param {Function} [forceAnimate] Prevent stop animation and callback\n         *        immediently when target values are the same as current values.\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing, forceAnimate);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n\n/***/ 1086:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(1087);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n\n/***/ 1087:\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n\n/***/ 1088:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(1000).CMD;\n    var line = __webpack_require__(1061);\n    var cubic = __webpack_require__(1089);\n    var quadratic = __webpack_require__(1062);\n    var arc = __webpack_require__(1090);\n    var normalizeRadian = __webpack_require__(1037).normalizeRadian;\n    var curve = __webpack_require__(992);\n\n    var windingLine = __webpack_require__(1063);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1089:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(992);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1090:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(1037).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1091:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(1000).CMD;\n    var vec2 = __webpack_require__(977);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n\n/***/ 1092:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(981).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 1093:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var Path = __webpack_require__(981);\n    var fixClipWithShadow = __webpack_require__(1050);\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: fixClipWithShadow(Path.prototype.brush),\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 1094:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(981).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 1095:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(1039);\n\n    module.exports = __webpack_require__(981).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1096:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(977);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n\n/***/ 1097:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(977);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n\n/***/ 1098:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(1039);\n\n    module.exports = __webpack_require__(981).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1099:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(1036);\n\n    module.exports = __webpack_require__(981).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 1100:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(981).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 1101:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(992);\n    var vec2 = __webpack_require__(977);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(981).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 1102:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(981).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1103:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(981);\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1104:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(972);\n\n    var Gradient = __webpack_require__(1011);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n\n/***/ 1105:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(1007)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1106:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1107:\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n/***/ }),\n\n/***/ 1108:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(972);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n\n/***/ 1109:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(972);\n    var modelUtil = __webpack_require__(976);\n    var ComponentModel = __webpack_require__(984);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n\n/***/ 1110:\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(972);\n    var compatStyle = __webpack_require__(1111);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option, isTheme) {\n        compatStyle(option, isTheme);\n\n        var series = option.series;\n        each(zrUtil.isArray(series) ? series : [series], function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ 1111:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(972);\n    var modelUtil = __webpack_require__(976);\n\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (!itemStyleOpt) {\n            return;\n        }\n        for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n            var styleName = POSSIBLE_STYLES[i];\n            var normalItemStyleOpt = itemStyleOpt.normal;\n            var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n            if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].normal) {\n                    opt[styleName].normal = normalItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                }\n                normalItemStyleOpt[styleName] = null;\n            }\n            if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].emphasis) {\n                    opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                }\n                emphasisItemStyleOpt[styleName] = null;\n            }\n        }\n    }\n\n    function compatTextStyle(opt, propName) {\n        var labelOptSingle = isObject(opt) && opt[propName];\n        var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n        if (textStyle) {\n            for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n                var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n                if (textStyle.hasOwnProperty(propName)) {\n                    labelOptSingle[propName] = textStyle[propName];\n                }\n            }\n        }\n    }\n\n    function compatLabelTextStyle(labelOpt) {\n        if (isObject(labelOpt)) {\n            compatTextStyle(labelOpt, 'normal');\n            compatTextStyle(labelOpt, 'emphasis');\n        }\n    }\n\n    function processSeries(seriesOpt) {\n        if (!isObject(seriesOpt)) {\n            return;\n        }\n\n        compatItemStyle(seriesOpt);\n        compatLabelTextStyle(seriesOpt.label);\n        // treemap\n        compatLabelTextStyle(seriesOpt.upperLabel);\n        // graph\n        compatLabelTextStyle(seriesOpt.edgeLabel);\n\n        var markPoint = seriesOpt.markPoint;\n        compatItemStyle(markPoint);\n        compatLabelTextStyle(markPoint && markPoint.label);\n\n        var markLine = seriesOpt.markLine;\n        compatItemStyle(seriesOpt.markLine);\n        compatLabelTextStyle(markLine && markLine.label);\n\n        var markArea = seriesOpt.markArea;\n        compatLabelTextStyle(markArea && markArea.label);\n\n        // For gauge\n        compatTextStyle(seriesOpt, 'axisLabel');\n        compatTextStyle(seriesOpt, 'title');\n        compatTextStyle(seriesOpt, 'detail');\n\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n                compatLabelTextStyle(data[i] && data[i].label);\n            }\n        }\n\n        // mark point data\n        var markPoint = seriesOpt.markPoint;\n        if (markPoint && markPoint.data) {\n            var mpData = markPoint.data;\n            for (var i = 0; i < mpData.length; i++) {\n                compatItemStyle(mpData[i]);\n                compatLabelTextStyle(mpData[i] && mpData[i].label);\n            }\n        }\n        // mark line data\n        var markLine = seriesOpt.markLine;\n        if (markLine && markLine.data) {\n            var mlData = markLine.data;\n            for (var i = 0; i < mlData.length; i++) {\n                if (zrUtil.isArray(mlData[i])) {\n                    compatItemStyle(mlData[i][0]);\n                    compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n                    compatItemStyle(mlData[i][1]);\n                    compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n                }\n                else {\n                    compatItemStyle(mlData[i]);\n                    compatLabelTextStyle(mlData[i] && mlData[i].label);\n                }\n            }\n        }\n    }\n\n    function toArr(o) {\n        return zrUtil.isArray(o) ? o : o ? [o] : [];\n    }\n\n    function toObj(o) {\n        return (zrUtil.isArray(o) ? o[0] : o) || {};\n    }\n\n    module.exports = function (option, isTheme) {\n        each(toArr(option.series), function (seriesOpt) {\n            isObject(seriesOpt) && processSeries(seriesOpt);\n        });\n\n        var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n        isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n\n        each(\n            axes,\n            function (axisName) {\n                each(toArr(option[axisName]), function (axisOpt) {\n                    if (axisOpt) {\n                        compatTextStyle(axisOpt, 'axisLabel');\n                        compatTextStyle(axisOpt.axisPointer, 'label');\n                    }\n                });\n            }\n        );\n\n        each(toArr(option.parallel), function (parallelOpt) {\n            var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n            compatTextStyle(parallelAxisDefault, 'axisLabel');\n            compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n        });\n\n        each(toArr(option.calendar), function (calendarOpt) {\n            compatTextStyle(calendarOpt, 'dayLabel');\n            compatTextStyle(calendarOpt, 'monthLabel');\n            compatTextStyle(calendarOpt, 'yearLabel');\n        });\n\n        // radar.name.textStyle\n        each(toArr(option.radar), function (radarOpt) {\n            compatTextStyle(radarOpt, 'name');\n        });\n\n        each(toArr(option.geo), function (geoOpt) {\n            if (isObject(geoOpt)) {\n                compatLabelTextStyle(geoOpt.label);\n                each(toArr(geoOpt.regions), function (regionObj) {\n                    compatLabelTextStyle(regionObj.label);\n                });\n            }\n        });\n\n        compatLabelTextStyle(toObj(option.timeline).label);\n        compatTextStyle(toObj(option.axisPointer), 'label');\n        compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n    };\n\n\n/***/ }),\n\n/***/ 1112:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(972);\n    var vec2 = __webpack_require__(977);\n    var Draggable = __webpack_require__(1113);\n\n    var Eventful = __webpack_require__(993);\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch,\n            which: event.which\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget, x, y}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var lastHoveredTarget = lastHovered.target;\n\n            // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n            // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n            // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n            // See #6198.\n            if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n                lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n                lastHoveredTarget = lastHovered.target;\n            }\n\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var el = targetInfo.target;\n            if (el && el.silent) {\n                return;\n            }\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {x: x, y: y};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downEl = hoveredTarget;\n                this._downPoint = [event.zrX, event.zrY];\n                // In case click triggered before mouseup\n                this._upEl = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upEl = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downEl !== this._upEl\n                    // Original click event is triggered on the whole canvas element,\n                    // including the case that `mousedown` - `mousemove` - `mouseup`,\n                    // which should be filtered, otherwise it will bring trouble to\n                    // pan and zoom.\n                    || !this._downPoint\n                    // Arbitrary value\n                    || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4\n                ) {\n                    return;\n                }\n                this._downPoint = null;\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n/***/ }),\n\n/***/ 1113:\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n/***/ }),\n\n/***/ 1114:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(972);\n    var env = __webpack_require__(979);\n\n    var Group = __webpack_require__(1002);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(1018);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n\n/***/ 1115:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(972);\n    var Dispatcher = __webpack_require__(991).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(1041);\n\n    var Animator = __webpack_require__(1035);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n\n/***/ 1116:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(991);\n    var zrUtil = __webpack_require__(972);\n    var Eventful = __webpack_require__(993);\n    var env = __webpack_require__(979);\n    var GestureMgr = __webpack_require__(1117);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n\n/***/ 1117:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(991);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n\n/***/ 1118:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(1001);\n    var util = __webpack_require__(972);\n    var log = __webpack_require__(1026);\n    var BoundingRect = __webpack_require__(983);\n    var timsort = __webpack_require__(1018);\n\n    var Layer = __webpack_require__(1119);\n\n    var requestAnimationFrame = __webpack_require__(1041);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Object} opts\n     */\n    var Painter = function (root, storage, opts) {\n\n        this.type = 'canvas';\n\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        getType: function () {\n            return 'canvas';\n        },\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        getViewportRootOffset: function () {\n            var viewportRoot = this.getViewportRoot();\n            if (viewportRoot) {\n                return {\n                    offsetLeft: viewportRoot.offsetLeft || 0,\n                    offsetTop: viewportRoot.offsetTop || 0\n                };\n            }\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            // IE8 does not support getComputedStyle, but it use VML.\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(1028);\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n\n/***/ 1119:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(972);\n    var config = __webpack_require__(1001);\n    var Style = __webpack_require__(1032);\n    var Pattern = __webpack_require__(1038);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n            this.ctx.__currentValues = {};\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n            this.ctxBack.__currentValues = {};\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n\n/***/ 1120:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(1011);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n\n/***/ 1121:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(974);\n    var zrUtil = __webpack_require__(972);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n\n/***/ 1122:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(972);\n    var Scale = __webpack_require__(1005);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n\n/***/ 1123:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = __webpack_require__(972);\n    var numberUtil = __webpack_require__(975);\n    var formatUtil = __webpack_require__(978);\n    var scaleHelper = __webpack_require__(1042);\n\n    var IntervalScale = __webpack_require__(1013);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum, minInterval, maxInterval) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n\n            if (minInterval != null && approxInterval < minInterval) {\n                approxInterval = minInterval;\n            }\n            if (maxInterval != null && approxInterval > maxInterval) {\n                approxInterval = maxInterval;\n            }\n\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : (new Date(+extent[0] || +extent[1])).getTimezoneOffset() * 60 * 1000;\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n\n/***/ 1124:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(972);\n    var Scale = __webpack_require__(1005);\n    var numberUtil = __webpack_require__(975);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(1013);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n\n/***/ 1125:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var createListFromArray = __webpack_require__(1009);\n    var symbolUtil = __webpack_require__(997);\n    var axisHelper = __webpack_require__(989);\n    var axisModelCommonMixin = __webpack_require__(1019);\n    var Model = __webpack_require__(980);\n    var util = __webpack_require__(972);\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: __webpack_require__(996),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1126:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(972);\n    var modelUtil = __webpack_require__(976);\n    var modelHelper = __webpack_require__(1006);\n    var findPointFromSeries = __webpack_require__(1043);\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        // Pending\n        // See #6121. But we are not able to reproduce it yet.\n        if (!coordSysAxesInfo) {\n            return;\n        }\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n/***/ }),\n\n/***/ 1127:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(973);\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                color: '#fff',\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n/***/ }),\n\n/***/ 1128:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var globalListener = __webpack_require__(1044);\n\n    var AxisPonterView = __webpack_require__(973).extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n/***/ }),\n\n/***/ 1129:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(973).extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n\n/***/ 1130:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(1131);\n    var zrUtil = __webpack_require__(972);\n    var formatUtil = __webpack_require__(978);\n    var numberUtil = __webpack_require__(975);\n    var graphic = __webpack_require__(974);\n    var findPointFromSeries = __webpack_require__(1043);\n    var layoutUtil = __webpack_require__(982);\n    var env = __webpack_require__(979);\n    var Model = __webpack_require__(980);\n    var globalListener = __webpack_require__(1044);\n    var axisHelper = __webpack_require__(989);\n    var axisPointerViewHelper = __webpack_require__(1024);\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    __webpack_require__(973).extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>|Object} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function getOuterSize(el) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        // Consider browser compatibility.\n        // IE8 does not support getComputedStyle.\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            var stl = document.defaultView.getComputedStyle(el);\n            if (stl) {\n                width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10)\n                    + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n                height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10)\n                    + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n            }\n        }\n\n        return {width: width, height: height};\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n/***/ }),\n\n/***/ 1131:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(972);\n    var zrColor = __webpack_require__(994);\n    var eventUtil = __webpack_require__(991);\n    var formatUtil = __webpack_require__(978);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(979);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRootOffset;\n            if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n                x += viewportRootOffset.offsetLeft;\n                y += viewportRootOffset.offsetTop;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n\n/***/ 1132:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Legend action\n */\n\n\n    var echarts = __webpack_require__(973);\n    var zrUtil = __webpack_require__(972);\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (selectedMap.hasOwnProperty(name)) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n/***/ }),\n\n/***/ 1133:\n/***/ (function(module, exports) {\n\n\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1134:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n *\n * @module echarts/chart/helper/DataSelectable\n */\n\n\n    var zrUtil = __webpack_require__(972);\n\n    module.exports = {\n\n        updateSelectedMap: function (targetList) {\n            this._targetList = targetList.slice();\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n                targetMap.set(target.name, target);\n                return targetMap;\n            }, zrUtil.createHashMap());\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        // PENGING If selectedMode is null ?\n        select: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                this._selectTargetMap.each(function (target) {\n                    target.selected = false;\n                });\n            }\n            target && (target.selected = true);\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        unSelect: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            // var selectedMode = this.get('selectedMode');\n            // selectedMode !== 'single' && target && (target.selected = false);\n            target && (target.selected = false);\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        toggleSelected: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            if (target != null) {\n                this[target.selected ? 'unSelect' : 'select'](name, id);\n                return target.selected;\n            }\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        isSelected: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            return target && target.selected;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 1135:\n/***/ (function(module, exports) {\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\n\n\n    module.exports = function (seriesType, ecModel) {\n        // Pie and funnel may use diferrent scope\n        var paletteScope = {};\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var dataAll = seriesModel.getRawData();\n            var idxMap = {};\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                var data = seriesModel.getData();\n                data.each(function (idx) {\n                    var rawIdx = data.getRawIndex(idx);\n                    idxMap[rawIdx] = idx;\n                });\n                dataAll.each(function (rawIdx) {\n                    var filteredIdx = idxMap[rawIdx];\n\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n                    var singleDataColor = filteredIdx != null\n                        && data.getItemVisual(filteredIdx, 'color', true);\n\n                    if (!singleDataColor) {\n                        // FIXME Performance\n                        var itemModel = dataAll.getItemModel(rawIdx);\n                        var color = itemModel.get('itemStyle.normal.color')\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n                        // Legend may use the visual info in data before processed\n                        dataAll.setItemVisual(rawIdx, 'color', color);\n\n                        // Data is not filtered\n                        if (filteredIdx != null) {\n                            data.setItemVisual(filteredIdx, 'color', color);\n                        }\n                    }\n                    else {\n                        // Set data all color for legend\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ 1136:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var featureManager = __webpack_require__(990);\n    var zrUtil = __webpack_require__(972);\n\n    var ToolboxModel = __webpack_require__(973).extendComponentModel({\n\n        type: 'toolbox',\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        mergeDefaultAndTheme: function (option) {\n            ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n\n            zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n                var Feature = featureManager.get(featureName);\n                Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n            });\n        },\n\n        defaultOption: {\n\n            show: true,\n\n            z: 6,\n\n            zlevel: 0,\n\n            orient: 'horizontal',\n\n            left: 'right',\n\n            top: 'top',\n\n            // right\n            // bottom\n\n            backgroundColor: 'transparent',\n\n            borderColor: '#ccc',\n\n            borderRadius: 0,\n\n            borderWidth: 0,\n\n            padding: 5,\n\n            itemSize: 15,\n\n            itemGap: 8,\n\n            showTitle: true,\n\n            iconStyle: {\n                normal: {\n                    borderColor: '#666',\n                    color: 'none'\n                },\n                emphasis: {\n                    borderColor: '#3E98C5'\n                }\n            }\n            // textStyle: {},\n\n            // feature\n        }\n    });\n\n    module.exports = ToolboxModel;\n\n\n/***/ }),\n\n/***/ 1137:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var featureManager = __webpack_require__(990);\n    var zrUtil = __webpack_require__(972);\n    var graphic = __webpack_require__(974);\n    var Model = __webpack_require__(980);\n    var DataDiffer = __webpack_require__(1004);\n    var listComponentHelper = __webpack_require__(1045);\n    var textContain = __webpack_require__(986);\n\n    module.exports = __webpack_require__(973).extendComponentView({\n\n        type: 'toolbox',\n\n        render: function (toolboxModel, ecModel, api, payload) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!toolboxModel.get('show')) {\n                return;\n            }\n\n            var itemSize = +toolboxModel.get('itemSize');\n            var featureOpts = toolboxModel.get('feature') || {};\n            var features = this._features || (this._features = {});\n\n            var featureNames = [];\n            zrUtil.each(featureOpts, function (opt, name) {\n                featureNames.push(name);\n            });\n\n            (new DataDiffer(this._featureNames || [], featureNames))\n                .add(process)\n                .update(process)\n                .remove(zrUtil.curry(process, null))\n                .execute();\n\n            // Keep for diff.\n            this._featureNames = featureNames;\n\n            function process(newIndex, oldIndex) {\n                var featureName = featureNames[newIndex];\n                var oldName = featureNames[oldIndex];\n                var featureOpt = featureOpts[featureName];\n                var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n                var feature;\n\n                if (featureName && !oldName) { // Create\n                    if (isUserFeatureName(featureName)) {\n                        feature = {\n                            model: featureModel,\n                            onclick: featureModel.option.onclick,\n                            featureName: featureName\n                        };\n                    }\n                    else {\n                        var Feature = featureManager.get(featureName);\n                        if (!Feature) {\n                            return;\n                        }\n                        feature = new Feature(featureModel, ecModel, api);\n                    }\n                    features[featureName] = feature;\n                }\n                else {\n                    feature = features[oldName];\n                    // If feature does not exsit.\n                    if (!feature) {\n                        return;\n                    }\n                    feature.model = featureModel;\n                    feature.ecModel = ecModel;\n                    feature.api = api;\n                }\n\n                if (!featureName && oldName) {\n                    feature.dispose && feature.dispose(ecModel, api);\n                    return;\n                }\n\n                if (!featureModel.get('show') || feature.unusable) {\n                    feature.remove && feature.remove(ecModel, api);\n                    return;\n                }\n\n                createIconPaths(featureModel, feature, featureName);\n\n                featureModel.setIconStatus = function (iconName, status) {\n                    var option = this.option;\n                    var iconPaths = this.iconPaths;\n                    option.iconStatus = option.iconStatus || {};\n                    option.iconStatus[iconName] = status;\n                    // FIXME\n                    iconPaths[iconName] && iconPaths[iconName].trigger(status);\n                };\n\n                if (feature.render) {\n                    feature.render(featureModel, ecModel, api, payload);\n                }\n            }\n\n            function createIconPaths(featureModel, feature, featureName) {\n                var iconStyleModel = featureModel.getModel('iconStyle');\n\n                // If one feature has mutiple icon. they are orginaized as\n                // {\n                //     icon: {\n                //         foo: '',\n                //         bar: ''\n                //     },\n                //     title: {\n                //         foo: '',\n                //         bar: ''\n                //     }\n                // }\n                var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n                var titles = featureModel.get('title') || {};\n                if (typeof icons === 'string') {\n                    var icon = icons;\n                    var title = titles;\n                    icons = {};\n                    titles = {};\n                    icons[featureName] = icon;\n                    titles[featureName] = title;\n                }\n                var iconPaths = featureModel.iconPaths = {};\n                zrUtil.each(icons, function (iconStr, iconName) {\n                    var path = graphic.createIcon(\n                        iconStr,\n                        {},\n                        {\n                            x: -itemSize / 2,\n                            y: -itemSize / 2,\n                            width: itemSize,\n                            height: itemSize\n                        }\n                    );\n                    path.setStyle(iconStyleModel.getModel('normal').getItemStyle());\n                    path.hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n\n                    graphic.setHoverStyle(path);\n\n                    if (toolboxModel.get('showTitle')) {\n                        path.__title = titles[iconName];\n                        path.on('mouseover', function () {\n                                // Should not reuse above hoverStyle, which might be modified.\n                                var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n                                path.setStyle({\n                                    text: titles[iconName],\n                                    textPosition: hoverStyle.textPosition || 'bottom',\n                                    textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n                                    textAlign: hoverStyle.textAlign || 'center'\n                                });\n                            })\n                            .on('mouseout', function () {\n                                path.setStyle({\n                                    textFill: null\n                                });\n                            });\n                    }\n                    path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n\n                    group.add(path);\n                    path.on('click', zrUtil.bind(\n                        feature.onclick, feature, ecModel, api, iconName\n                    ));\n\n                    iconPaths[iconName] = path;\n                });\n            }\n\n            listComponentHelper.layout(group, toolboxModel, api);\n            // Render background after group is layout\n            // FIXME\n            group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel));\n\n            // Adjust icon title positions to avoid them out of screen\n            group.eachChild(function (icon) {\n                var titleText = icon.__title;\n                var hoverStyle = icon.hoverStyle;\n                // May be background element\n                if (hoverStyle && titleText) {\n                    var rect = textContain.getBoundingRect(\n                        titleText, textContain.makeFont(hoverStyle)\n                    );\n                    var offsetX = icon.position[0] + group.position[0];\n                    var offsetY = icon.position[1] + group.position[1] + itemSize;\n\n                    var needPutOnTop = false;\n                    if (offsetY + rect.height > api.getHeight()) {\n                        hoverStyle.textPosition = 'top';\n                        needPutOnTop = true;\n                    }\n                    var topOffset = needPutOnTop ? (-5 - rect.height) : (itemSize + 8);\n                    if (offsetX + rect.width /  2 > api.getWidth()) {\n                        hoverStyle.textPosition = ['100%', topOffset];\n                        hoverStyle.textAlign = 'right';\n                    }\n                    else if (offsetX - rect.width / 2 < 0) {\n                        hoverStyle.textPosition = [0, topOffset];\n                        hoverStyle.textAlign = 'left';\n                    }\n                }\n            });\n        },\n\n        updateView: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n            });\n        },\n\n        updateLayout: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n            });\n        },\n\n        remove: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.remove && feature.remove(ecModel, api);\n            });\n            this.group.removeAll();\n        },\n\n        dispose: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.dispose && feature.dispose(ecModel, api);\n            });\n        }\n    });\n\n    function isUserFeatureName(featureName) {\n        return featureName.indexOf('my') === 0;\n    }\n\n\n\n/***/ }),\n\n/***/ 1138:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(979);\n    var lang = __webpack_require__(998).toolbox.saveAsImage;\n\n    function SaveAsImage (model) {\n        this.model = model;\n    }\n\n    SaveAsImage.defaultOption = {\n        show: true,\n        icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n        title: lang.title,\n        type: 'png',\n        // Default use option.backgroundColor\n        // backgroundColor: '#fff',\n        name: '',\n        excludeComponents: ['toolbox'],\n        pixelRatio: 1,\n        lang: lang.lang.slice()\n    };\n\n    SaveAsImage.prototype.unusable = !env.canvasSupported;\n\n    var proto = SaveAsImage.prototype;\n\n    proto.onclick = function (ecModel, api) {\n        var model = this.model;\n        var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n        var $a = document.createElement('a');\n        var type = model.get('type', true) || 'png';\n        $a.download = title + '.' + type;\n        $a.target = '_blank';\n        var url = api.getConnectedDataURL({\n            type: type,\n            backgroundColor: model.get('backgroundColor', true)\n                || ecModel.get('backgroundColor') || '#fff',\n            excludeComponents: model.get('excludeComponents'),\n            pixelRatio: model.get('pixelRatio')\n        });\n        $a.href = url;\n        // Chrome and Firefox\n        if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n            var evt = new MouseEvent('click', {\n                view: window,\n                bubbles: true,\n                cancelable: false\n            });\n            $a.dispatchEvent(evt);\n        }\n        // IE\n        else {\n            if (window.navigator.msSaveOrOpenBlob) {\n                var bstr = atob(url.split(',')[1]);\n                var n = bstr.length;\n                var u8arr = new Uint8Array(n);\n                while(n--) {\n                    u8arr[n] = bstr.charCodeAt(n);\n                }\n                var blob = new Blob([u8arr]);\n                window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n            }\n            else {\n                var lang = model.get('lang');\n                var html = '' +\n                    '<body style=\"margin:0;\">' +\n                    '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + ((lang && lang[0]) || '') + '\" />' +\n                    '</body>';\n                var tab = window.open();\n                tab.document.write(html);\n            }\n        }\n    };\n\n    __webpack_require__(990).register(\n        'saveAsImage', SaveAsImage\n    );\n\n    module.exports = SaveAsImage;\n\n\n\n/***/ }),\n\n/***/ 1139:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(972);\n    var lang = __webpack_require__(998).toolbox.magicType;\n\n    function MagicType(model) {\n        this.model = model;\n    }\n\n    MagicType.defaultOption = {\n        show: true,\n        type: [],\n        // Icon group\n        icon: {\n            line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n            bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n            stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z', // jshint ignore:line\n            tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n        },\n        // `line`, `bar`, `stack`, `tiled`\n        title: zrUtil.clone(lang.title),\n        option: {},\n        seriesIndex: {}\n    };\n\n    var proto = MagicType.prototype;\n\n    proto.getIcons = function () {\n        var model = this.model;\n        var availableIcons = model.get('icon');\n        var icons = {};\n        zrUtil.each(model.get('type'), function (type) {\n            if (availableIcons[type]) {\n                icons[type] = availableIcons[type];\n            }\n        });\n        return icons;\n    };\n\n    var seriesOptGenreator = {\n        'line': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'line',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.line') || {}, true);\n            }\n        },\n        'bar': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'bar',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.bar') || {}, true);\n            }\n        },\n        'stack': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: '__ec_magicType_stack__'\n                }, model.get('option.stack') || {}, true);\n            }\n        },\n        'tiled': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: ''\n                }, model.get('option.tiled') || {}, true);\n            }\n        }\n    };\n\n    var radioTypes = [\n        ['line', 'bar'],\n        ['stack', 'tiled']\n    ];\n\n    proto.onclick = function (ecModel, api, type) {\n        var model = this.model;\n        var seriesIndex = model.get('seriesIndex.' + type);\n        // Not supported magicType\n        if (!seriesOptGenreator[type]) {\n            return;\n        }\n        var newOption = {\n            series: []\n        };\n        var generateNewSeriesTypes = function (seriesModel) {\n            var seriesType = seriesModel.subType;\n            var seriesId = seriesModel.id;\n            var newSeriesOpt = seriesOptGenreator[type](\n                seriesType, seriesId, seriesModel, model\n            );\n            if (newSeriesOpt) {\n                // PENDING If merge original option?\n                zrUtil.defaults(newSeriesOpt, seriesModel.option);\n                newOption.series.push(newSeriesOpt);\n            }\n            // Modify boundaryGap\n            var coordSys = seriesModel.coordinateSystem;\n            if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n                var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n                if (categoryAxis) {\n                    var axisDim = categoryAxis.dim;\n                    var axisType = axisDim + 'Axis';\n                    var axisModel = ecModel.queryComponents({\n                        mainType: axisType,\n                        index: seriesModel.get(name + 'Index'),\n                        id: seriesModel.get(name + 'Id')\n                    })[0];\n                    var axisIndex = axisModel.componentIndex;\n\n                    newOption[axisType] = newOption[axisType] || [];\n                    for (var i = 0; i <= axisIndex; i++) {\n                        newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n                    }\n                    newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n                }\n            }\n        };\n\n        zrUtil.each(radioTypes, function (radio) {\n            if (zrUtil.indexOf(radio, type) >= 0) {\n                zrUtil.each(radio, function (item) {\n                    model.setIconStatus(item, 'normal');\n                });\n            }\n        });\n\n        model.setIconStatus(type, 'emphasis');\n\n        ecModel.eachComponent(\n            {\n                mainType: 'series',\n                query: seriesIndex == null ? null : {\n                    seriesIndex: seriesIndex\n                }\n            }, generateNewSeriesTypes\n        );\n        api.dispatchAction({\n            type: 'changeMagicType',\n            currentType: type,\n            newOption: newOption\n        });\n    };\n\n    var echarts = __webpack_require__(973);\n    echarts.registerAction({\n        type: 'changeMagicType',\n        event: 'magicTypeChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        ecModel.mergeOption(payload.newOption);\n    });\n\n    __webpack_require__(990).register('magicType', MagicType);\n\n    module.exports = MagicType;\n\n\n/***/ }),\n\n/***/ 1140:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/toolbox/feature/DataView\n */\n\n\n\n    var zrUtil = __webpack_require__(972);\n    var eventTool = __webpack_require__(991);\n    var lang = __webpack_require__(998).toolbox.dataView;\n\n    var BLOCK_SPLITER = new Array(60).join('-');\n    var ITEM_SPLITER = '\\t';\n    /**\n     * Group series into two types\n     *  1. on category axis, like line, bar\n     *  2. others, like scatter, pie\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object}\n     * @inner\n     */\n    function groupSeries(ecModel) {\n        var seriesGroupByCategoryAxis = {};\n        var otherSeries = [];\n        var meta = [];\n        ecModel.eachRawSeries(function (seriesModel) {\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n                var baseAxis = coordSys.getBaseAxis();\n                if (baseAxis.type === 'category') {\n                    var key = baseAxis.dim + '_' + baseAxis.index;\n                    if (!seriesGroupByCategoryAxis[key]) {\n                        seriesGroupByCategoryAxis[key] = {\n                            categoryAxis: baseAxis,\n                            valueAxis: coordSys.getOtherAxis(baseAxis),\n                            series: []\n                        };\n                        meta.push({\n                            axisDim: baseAxis.dim,\n                            axisIndex: baseAxis.index\n                        });\n                    }\n                    seriesGroupByCategoryAxis[key].series.push(seriesModel);\n                }\n                else {\n                    otherSeries.push(seriesModel);\n                }\n            }\n            else {\n                otherSeries.push(seriesModel);\n            }\n        });\n\n        return {\n            seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n            other: otherSeries,\n            meta: meta\n        };\n    }\n\n    /**\n     * Assemble content of series on cateogory axis\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleSeriesWithCategoryAxis(series) {\n        var tables = [];\n        zrUtil.each(series, function (group, key) {\n            var categoryAxis = group.categoryAxis;\n            var valueAxis = group.valueAxis;\n            var valueAxisDim = valueAxis.dim;\n\n            var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n                return series.name;\n            }));\n            var columns = [categoryAxis.model.getCategories()];\n            zrUtil.each(group.series, function (series) {\n                columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n                    return val;\n                }));\n            });\n            // Assemble table content\n            var lines = [headers.join(ITEM_SPLITER)];\n            for (var i = 0; i < columns[0].length; i++) {\n                var items = [];\n                for (var j = 0; j < columns.length; j++) {\n                    items.push(columns[j][i]);\n                }\n                lines.push(items.join(ITEM_SPLITER));\n            }\n            tables.push(lines.join('\\n'));\n        });\n        return tables.join('\\n\\n' +  BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * Assemble content of other series\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleOtherSeries(series) {\n        return zrUtil.map(series, function (series) {\n            var data = series.getRawData();\n            var lines = [series.name];\n            var vals = [];\n            data.each(data.dimensions, function () {\n                var argLen = arguments.length;\n                var dataIndex = arguments[argLen - 1];\n                var name = data.getName(dataIndex);\n                for (var i = 0; i < argLen - 1; i++) {\n                    vals[i] = arguments[i];\n                }\n                lines.push((name ? (name + ITEM_SPLITER) : '') + vals.join(ITEM_SPLITER));\n            });\n            return lines.join('\\n');\n        }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * @param {module:echarts/model/Global}\n     * @return {Object}\n     * @inner\n     */\n    function getContentFromModel(ecModel) {\n\n        var result = groupSeries(ecModel);\n\n        return {\n            value: zrUtil.filter([\n                    assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis),\n                    assembleOtherSeries(result.other)\n                ], function (str) {\n                    return str.replace(/[\\n\\t\\s]/g, '');\n                }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n\n            meta: result.meta\n        };\n    }\n\n\n    function trim(str) {\n        return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n    /**\n     * If a block is tsv format\n     */\n    function isTSVFormat(block) {\n        // Simple method to find out if a block is tsv format\n        var firstLine = block.slice(0, block.indexOf('\\n'));\n        if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n            return true;\n        }\n    }\n\n    var itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n    /**\n     * @param {string} tsv\n     * @return {Object}\n     */\n    function parseTSVContents(tsv) {\n        var tsvLines = tsv.split(/\\n+/g);\n        var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n\n        var categories = [];\n        var series = zrUtil.map(headers, function (header) {\n            return {\n                name: header,\n                data: []\n            };\n        });\n        for (var i = 0; i < tsvLines.length; i++) {\n            var items = trim(tsvLines[i]).split(itemSplitRegex);\n            categories.push(items.shift());\n            for (var j = 0; j < items.length; j++) {\n                series[j] && (series[j].data[i] = items[j]);\n            }\n        }\n        return {\n            series: series,\n            categories: categories\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @return {Array.<Object>}\n     * @inner\n     */\n    function parseListContents(str) {\n        var lines = str.split(/\\n+/g);\n        var seriesName = trim(lines.shift());\n\n        var data = [];\n        for (var i = 0; i < lines.length; i++) {\n            var items = trim(lines[i]).split(itemSplitRegex);\n            var name = '';\n            var value;\n            var hasName = false;\n            if (isNaN(items[0])) { // First item is name\n                hasName = true;\n                name = items[0];\n                items = items.slice(1);\n                data[i] = {\n                    name: name,\n                    value: []\n                };\n                value = data[i].value;\n            }\n            else {\n                value = data[i] = [];\n            }\n            for (var j = 0; j < items.length; j++) {\n                value.push(+items[j]);\n            }\n            if (value.length === 1) {\n                hasName ? (data[i].value = value[0]) : (data[i] = value[0]);\n            }\n        }\n\n        return {\n            name: seriesName,\n            data: data\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @param {Array.<Object>} blockMetaList\n     * @return {Object}\n     * @inner\n     */\n    function parseContents(str, blockMetaList) {\n        var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n        var newOption = {\n            series: []\n        };\n        zrUtil.each(blocks, function (block, idx) {\n            if (isTSVFormat(block)) {\n                var result = parseTSVContents(block);\n                var blockMeta = blockMetaList[idx];\n                var axisKey = blockMeta.axisDim + 'Axis';\n\n                if (blockMeta) {\n                    newOption[axisKey] = newOption[axisKey] || [];\n                    newOption[axisKey][blockMeta.axisIndex] = {\n                        data: result.categories\n                    };\n                    newOption.series = newOption.series.concat(result.series);\n                }\n            }\n            else {\n                var result = parseListContents(block);\n                newOption.series.push(result);\n            }\n        });\n        return newOption;\n    }\n\n    /**\n     * @alias {module:echarts/component/toolbox/feature/DataView}\n     * @constructor\n     * @param {module:echarts/model/Model} model\n     */\n    function DataView(model) {\n\n        this._dom = null;\n\n        this.model = model;\n    }\n\n    DataView.defaultOption = {\n        show: true,\n        readOnly: false,\n        optionToContent: null,\n        contentToOption: null,\n\n        icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n        title: zrUtil.clone(lang.title),\n        lang: zrUtil.clone(lang.lang),\n        backgroundColor: '#fff',\n        textColor: '#000',\n        textareaColor: '#fff',\n        textareaBorderColor: '#333',\n        buttonColor: '#c23531',\n        buttonTextColor: '#fff'\n    };\n\n    DataView.prototype.onclick = function (ecModel, api) {\n        var container = api.getDom();\n        var model = this.model;\n        if (this._dom) {\n            container.removeChild(this._dom);\n        }\n        var root = document.createElement('div');\n        root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n        root.style.backgroundColor = model.get('backgroundColor') || '#fff';\n\n        // Create elements\n        var header = document.createElement('h4');\n        var lang = model.get('lang') || [];\n        header.innerHTML = lang[0] || model.get('title');\n        header.style.cssText = 'margin: 10px 20px;';\n        header.style.color = model.get('textColor');\n\n        var viewMain = document.createElement('div');\n        var textarea = document.createElement('textarea');\n        viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n\n        var optionToContent = model.get('optionToContent');\n        var contentToOption = model.get('contentToOption');\n        var result = getContentFromModel(ecModel);\n        if (typeof optionToContent === 'function') {\n            var htmlOrDom = optionToContent(api.getOption());\n            if (typeof htmlOrDom === 'string') {\n                viewMain.innerHTML = htmlOrDom;\n            }\n            else if (zrUtil.isDom(htmlOrDom)) {\n                viewMain.appendChild(htmlOrDom);\n            }\n        }\n        else {\n            // Use default textarea\n            viewMain.appendChild(textarea);\n            textarea.readOnly = model.get('readOnly');\n            textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n            textarea.style.color = model.get('textColor');\n            textarea.style.borderColor = model.get('textareaBorderColor');\n            textarea.style.backgroundColor = model.get('textareaColor');\n            textarea.value = result.value;\n        }\n\n        var blockMetaList = result.meta;\n\n        var buttonContainer = document.createElement('div');\n        buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n\n        var buttonStyle = 'float:right;margin-right:20px;border:none;'\n            + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n        var closeButton = document.createElement('div');\n        var refreshButton = document.createElement('div');\n\n        buttonStyle += ';background-color:' + model.get('buttonColor');\n        buttonStyle += ';color:' + model.get('buttonTextColor');\n\n        var self = this;\n\n        function close() {\n            container.removeChild(root);\n            self._dom = null;\n        }\n        eventTool.addEventListener(closeButton, 'click', close);\n\n        eventTool.addEventListener(refreshButton, 'click', function () {\n            var newOption;\n            try {\n                if (typeof contentToOption === 'function') {\n                    newOption = contentToOption(viewMain, api.getOption());\n                }\n                else {\n                    newOption = parseContents(textarea.value, blockMetaList);\n                }\n            }\n            catch (e) {\n                close();\n                throw new Error('Data view format error ' + e);\n            }\n            if (newOption) {\n                api.dispatchAction({\n                    type: 'changeDataView',\n                    newOption: newOption\n                });\n            }\n\n            close();\n        });\n\n        closeButton.innerHTML = lang[1];\n        refreshButton.innerHTML = lang[2];\n        refreshButton.style.cssText = buttonStyle;\n        closeButton.style.cssText = buttonStyle;\n\n        !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n        buttonContainer.appendChild(closeButton);\n\n        // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n        eventTool.addEventListener(textarea, 'keydown', function (e) {\n            if ((e.keyCode || e.which) === 9) {\n                // get caret position/selection\n                var val = this.value;\n                var start = this.selectionStart;\n                var end = this.selectionEnd;\n\n                // set textarea value to: text before caret + tab + text after caret\n                this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end);\n\n                // put caret at right position again\n                this.selectionStart = this.selectionEnd = start + 1;\n\n                // prevent the focus lose\n                eventTool.stop(e);\n            }\n        });\n\n        root.appendChild(header);\n        root.appendChild(viewMain);\n        root.appendChild(buttonContainer);\n\n        viewMain.style.height = (container.clientHeight - 80) + 'px';\n\n        container.appendChild(root);\n        this._dom = root;\n    };\n\n    DataView.prototype.remove = function (ecModel, api) {\n        this._dom && api.getDom().removeChild(this._dom);\n    };\n\n    DataView.prototype.dispose = function (ecModel, api) {\n        this.remove(ecModel, api);\n    };\n\n    /**\n     * @inner\n     */\n    function tryMergeDataOption(newData, originalData) {\n        return zrUtil.map(newData, function (newVal, idx) {\n            var original = originalData && originalData[idx];\n            if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n                if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n                    newVal = newVal.value;\n                }\n                // Original data has option\n                return zrUtil.defaults({\n                    value: newVal\n                }, original);\n            }\n            else {\n                return newVal;\n            }\n        });\n    }\n\n    __webpack_require__(990).register('dataView', DataView);\n\n    __webpack_require__(973).registerAction({\n        type: 'changeDataView',\n        event: 'dataViewChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        var newSeriesOptList = [];\n        zrUtil.each(payload.newOption.series, function (seriesOpt) {\n            var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n            if (!seriesModel) {\n                // New created series\n                // Geuss the series type\n                newSeriesOptList.push(zrUtil.extend({\n                    // Default is scatter\n                    type: 'scatter'\n                }, seriesOpt));\n            }\n            else {\n                var originalData = seriesModel.get('data');\n                newSeriesOptList.push({\n                    name: seriesOpt.name,\n                    data: tryMergeDataOption(seriesOpt.data, originalData)\n                });\n            }\n        });\n\n        ecModel.mergeOption(zrUtil.defaults({\n            series: newSeriesOptList\n        }, payload.newOption));\n    });\n\n    module.exports = DataView;\n\n\n/***/ }),\n\n/***/ 1141:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(972);\n    var BrushController = __webpack_require__(1056);\n    var BrushTargetManager = __webpack_require__(1072);\n    var history = __webpack_require__(1046);\n    var sliderMove = __webpack_require__(1030);\n    var lang = __webpack_require__(998).toolbox.dataZoom;\n\n    var each = zrUtil.each;\n\n    // Use dataZoomSelect\n    __webpack_require__(1142);\n\n    // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n    var DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\n    function DataZoom(model, ecModel, api) {\n\n        /**\n         * @private\n         * @type {module:echarts/component/helper/BrushController}\n         */\n        (this._brushController = new BrushController(api.getZr()))\n            .on('brush', zrUtil.bind(this._onBrush, this))\n            .mount();\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._isZoomActive;\n    }\n\n    DataZoom.defaultOption = {\n        show: true,\n        // Icon group\n        icon: {\n            zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n            back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n        },\n        // `zoom`, `back`\n        title: zrUtil.clone(lang.title)\n    };\n\n    var proto = DataZoom.prototype;\n\n    proto.render = function (featureModel, ecModel, api, payload) {\n        this.model = featureModel;\n        this.ecModel = ecModel;\n        this.api = api;\n\n        updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n        updateBackBtnStatus(featureModel, ecModel);\n    };\n\n    proto.onclick = function (ecModel, api, type) {\n        handlers[type].call(this);\n    };\n\n    proto.remove = function (ecModel, api) {\n        this._brushController.unmount();\n    };\n\n    proto.dispose = function (ecModel, api) {\n        this._brushController.dispose();\n    };\n\n    /**\n     * @private\n     */\n    var handlers = {\n\n        zoom: function () {\n            var nextActive = !this._isZoomActive;\n\n            this.api.dispatchAction({\n                type: 'takeGlobalCursor',\n                key: 'dataZoomSelect',\n                dataZoomSelectActive: nextActive\n            });\n        },\n\n        back: function () {\n            this._dispatchZoomAction(history.pop(this.ecModel));\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._onBrush = function (areas, opt) {\n        if (!opt.isEnd || !areas.length) {\n            return;\n        }\n        var snapshot = {};\n        var ecModel = this.ecModel;\n\n        this._brushController.updateCovers([]); // remove cover\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(this.model.option), ecModel, {include: ['grid']}\n        );\n        brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            if (coordSys.type !== 'cartesian2d') {\n                return;\n            }\n\n            var brushType = area.brushType;\n            if (brushType === 'rect') {\n                setBatch('x', coordSys, coordRange[0]);\n                setBatch('y', coordSys, coordRange[1]);\n            }\n            else {\n                setBatch(({lineX: 'x', lineY: 'y'})[brushType], coordSys, coordRange);\n            }\n        });\n\n        history.push(ecModel, snapshot);\n\n        this._dispatchZoomAction(snapshot);\n\n        function setBatch(dimName, coordSys, minMax) {\n            var axis = coordSys.getAxis(dimName);\n            var axisModel = axis.model;\n            var dataZoomModel = findDataZoom(dimName, axisModel, ecModel);\n\n            // Restrict range.\n            var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n            if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n                minMax = sliderMove(\n                    0, minMax.slice(), axis.scale.getExtent(), 0,\n                    minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan\n                );\n            }\n\n            dataZoomModel && (snapshot[dataZoomModel.id] = {\n                dataZoomId: dataZoomModel.id,\n                startValue: minMax[0],\n                endValue: minMax[1]\n            });\n        }\n\n        function findDataZoom(dimName, axisModel, ecModel) {\n            var found;\n            ecModel.eachComponent({mainType: 'dataZoom', subType: 'select'}, function (dzModel) {\n                var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n                has && (found = dzModel);\n            });\n            return found;\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._dispatchZoomAction = function (snapshot) {\n        var batch = [];\n\n        // Convert from hash map to array.\n        each(snapshot, function (batchItem, dataZoomId) {\n            batch.push(zrUtil.clone(batchItem));\n        });\n\n        batch.length && this.api.dispatchAction({\n            type: 'dataZoom',\n            from: this.uid,\n            batch: batch\n        });\n    };\n\n    function retrieveAxisSetting(option) {\n        var setting = {};\n        // Compatible with previous setting: null => all axis, false => no axis.\n        zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n            setting[name] = option[name];\n            setting[name] == null && (setting[name] = 'all');\n            (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n        });\n        return setting;\n    }\n\n    function updateBackBtnStatus(featureModel, ecModel) {\n        featureModel.setIconStatus(\n            'back',\n            history.count(ecModel) > 1 ? 'emphasis' : 'normal'\n        );\n    }\n\n    function updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n        var zoomActive = view._isZoomActive;\n\n        if (payload && payload.type === 'takeGlobalCursor') {\n            zoomActive = payload.key === 'dataZoomSelect'\n                ? payload.dataZoomSelectActive : false;\n        }\n\n        view._isZoomActive = zoomActive;\n\n        featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(featureModel.option), ecModel, {include: ['grid']}\n        );\n\n        view._brushController\n            .setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n                return (targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared)\n                    ? 'lineX'\n                    : (!targetInfo.xAxisDeclared && targetInfo.yAxisDeclared)\n                    ? 'lineY'\n                    : 'rect';\n            }))\n            .enableBrush(\n                zoomActive\n                ? {\n                    brushType: 'auto',\n                    brushStyle: {\n                        // FIXME user customized?\n                        lineWidth: 0,\n                        fill: 'rgba(0,0,0,0.2)'\n                    }\n                }\n                : false\n            );\n    }\n\n\n    __webpack_require__(990).register('dataZoom', DataZoom);\n\n\n    // Create special dataZoom option for select\n    __webpack_require__(973).registerPreprocessor(function (option) {\n        if (!option) {\n            return;\n        }\n\n        var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n        if (!zrUtil.isArray(dataZoomOpts)) {\n            option.dataZoom = dataZoomOpts = [dataZoomOpts];\n        }\n\n        var toolboxOpt = option.toolbox;\n        if (toolboxOpt) {\n            // Assume there is only one toolbox\n            if (zrUtil.isArray(toolboxOpt)) {\n                toolboxOpt = toolboxOpt[0];\n            }\n\n            if (toolboxOpt && toolboxOpt.feature) {\n                var dataZoomOpt = toolboxOpt.feature.dataZoom;\n                addForAxis('xAxis', dataZoomOpt);\n                addForAxis('yAxis', dataZoomOpt);\n            }\n        }\n\n        function addForAxis(axisName, dataZoomOpt) {\n            if (!dataZoomOpt) {\n                return;\n            }\n\n            // Try not to modify model, because it is not merged yet.\n            var axisIndicesName = axisName + 'Index';\n            var givenAxisIndices = dataZoomOpt[axisIndicesName];\n            if (givenAxisIndices != null\n                && givenAxisIndices != 'all'\n                && !zrUtil.isArray(givenAxisIndices)\n            ) {\n                givenAxisIndices = (givenAxisIndices === false || givenAxisIndices === 'none') ? [] : [givenAxisIndices];\n            }\n\n            forEachComponent(axisName, function (axisOpt, axisIndex) {\n                if (givenAxisIndices != null\n                    && givenAxisIndices != 'all'\n                    && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1\n                ) {\n                    return;\n                }\n                var newOpt = {\n                    type: 'select',\n                    $fromToolbox: true,\n                    // Id for merge mapping.\n                    id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n                };\n                // FIXME\n                // Only support one axis now.\n                newOpt[axisIndicesName] = axisIndex;\n                dataZoomOpts.push(newOpt);\n            });\n        }\n\n        function forEachComponent(mainType, cb) {\n            var opts = option[mainType];\n            if (!zrUtil.isArray(opts)) {\n                opts = opts ? [opts] : [];\n            }\n            each(opts, cb);\n        }\n    });\n\n    module.exports = DataZoom;\n\n\n/***/ }),\n\n/***/ 1142:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * DataZoom component entry\n */\n\n\n    __webpack_require__(1074);\n\n    __webpack_require__(1020);\n    __webpack_require__(1022);\n\n    __webpack_require__(1144);\n    __webpack_require__(1145);\n\n    __webpack_require__(1075);\n    __webpack_require__(1076);\n\n\n\n/***/ }),\n\n/***/ 1143:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Axis operator\n */\n\n\n    var zrUtil = __webpack_require__(972);\n    var numberUtil = __webpack_require__(975);\n    var helper = __webpack_require__(1021);\n    var each = zrUtil.each;\n    var asc = numberUtil.asc;\n\n    /**\n     * Operate single axis.\n     * One axis can only operated by one axis operator.\n     * Different dataZoomModels may be defined to operate the same axis.\n     * (i.e. 'inside' data zoom and 'slider' data zoom components)\n     * So dataZoomModels share one axisProxy in that case.\n     *\n     * @class\n     */\n    var AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._dimName = dimName;\n\n        /**\n         * @private\n         */\n        this._axisIndex = axisIndex;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._valueWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._percentWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._dataExtent;\n\n        /**\n         * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n         * @private\n         * @type {Object}\n         */\n        this._minMaxSpan;\n\n        /**\n         * @readOnly\n         * @type {module: echarts/model/Global}\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @private\n         * @type {module: echarts/component/dataZoom/DataZoomModel}\n         */\n        this._dataZoomModel = dataZoomModel;\n    };\n\n    AxisProxy.prototype = {\n\n        constructor: AxisProxy,\n\n        /**\n         * Whether the axisProxy is hosted by dataZoomModel.\n         *\n         * @public\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         * @return {boolean}\n         */\n        hostedBy: function (dataZoomModel) {\n            return this._dataZoomModel === dataZoomModel;\n        },\n\n        /**\n         * @return {Array.<number>} Value can only be NaN or finite value.\n         */\n        getDataValueWindow: function () {\n            return this._valueWindow.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getDataPercentWindow: function () {\n            return this._percentWindow.slice();\n        },\n\n        /**\n         * @public\n         * @param {number} axisIndex\n         * @return {Array} seriesModels\n         */\n        getTargetSeriesModels: function () {\n            var seriesModels = [];\n            var ecModel = this.ecModel;\n\n            ecModel.eachSeries(function (seriesModel) {\n                if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n                    var dimName = this._dimName;\n                    var axisModel = ecModel.queryComponents({\n                        mainType: dimName + 'Axis',\n                        index: seriesModel.get(dimName + 'AxisIndex'),\n                        id: seriesModel.get(dimName + 'AxisId')\n                    })[0];\n                    if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n                        seriesModels.push(seriesModel);\n                    }\n                }\n            }, this);\n\n            return seriesModels;\n        },\n\n        getAxisModel: function () {\n            return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n        },\n\n        getOtherAxisModel: function () {\n            var axisDim = this._dimName;\n            var ecModel = this.ecModel;\n            var axisModel = this.getAxisModel();\n            var isCartesian = axisDim === 'x' || axisDim === 'y';\n            var otherAxisDim;\n            var coordSysIndexName;\n            if (isCartesian) {\n                coordSysIndexName = 'gridIndex';\n                otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n            }\n            else {\n                coordSysIndexName = 'polarIndex';\n                otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n            }\n            var foundOtherAxisModel;\n            ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n                if ((otherAxisModel.get(coordSysIndexName) || 0)\n                    === (axisModel.get(coordSysIndexName) || 0)\n                ) {\n                    foundOtherAxisModel = otherAxisModel;\n                }\n            });\n            return foundOtherAxisModel;\n        },\n\n        getMinMaxSpan: function () {\n            return zrUtil.clone(this._minMaxSpan);\n        },\n\n        /**\n         * Only calculate by given range and this._dataExtent, do not change anything.\n         *\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         */\n        calculateDataWindow: function (opt) {\n            var dataExtent = this._dataExtent;\n            var axisModel = this.getAxisModel();\n            var scale = axisModel.axis.scale;\n            var rangePropMode = this._dataZoomModel.getRangePropMode();\n            var percentExtent = [0, 100];\n            var percentWindow = [\n                opt.start,\n                opt.end\n            ];\n            var valueWindow = [];\n\n            each(['startValue', 'endValue'], function (prop) {\n                valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n            });\n\n            // Normalize bound.\n            each([0, 1], function (idx) {\n                var boundValue = valueWindow[idx];\n                var boundPercent = percentWindow[idx];\n\n                // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n                // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n                // for cases that a dataZoom component controls multiple axes with different\n                // unit or extent, and the latter one is suitable for accurate zoom by pixel\n                // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n                // but it is awkward that `percentProp` can not be obtained from `valueProp`\n                // accurately (because all of values that are overflow the `dataExtent` will\n                // be calculated to percent '100%'). So we have to use\n                // `dataZoom.getRangePropMode()` to mark which prop is used.\n                // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n                // it remains its original value.\n\n                if (rangePropMode[idx] === 'percent') {\n                    if (boundPercent == null) {\n                        boundPercent = percentExtent[idx];\n                    }\n                    // Use scale.parse to math round for category or time axis.\n                    boundValue = scale.parse(numberUtil.linearMap(\n                        boundPercent, percentExtent, dataExtent, true\n                    ));\n                }\n                else {\n                    // Calculating `percent` from `value` may be not accurate, because\n                    // This calculation can not be inversed, because all of values that\n                    // are overflow the `dataExtent` will be calculated to percent '100%'\n                    boundPercent = numberUtil.linearMap(\n                        boundValue, dataExtent, percentExtent, true\n                    );\n                }\n\n                // valueWindow[idx] = round(boundValue);\n                // percentWindow[idx] = round(boundPercent);\n                valueWindow[idx] = boundValue;\n                percentWindow[idx] = boundPercent;\n            });\n\n            return {\n                valueWindow: asc(valueWindow),\n                percentWindow: asc(percentWindow)\n            };\n        },\n\n        /**\n         * Notice: reset should not be called before series.restoreData() called,\n         * so it is recommanded to be called in \"process stage\" but not \"model init\n         * stage\".\n         *\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        reset: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            // Culculate data window and data extent, and record them.\n            this._dataExtent = calculateDataExtent(\n                this, this._dimName, this.getTargetSeriesModels()\n            );\n\n            var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n\n            this._valueWindow = dataWindow.valueWindow;\n            this._percentWindow = dataWindow.percentWindow;\n\n            setMinMaxSpan(this);\n\n            // Update axis setting then.\n            setAxisModel(this);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        restore: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            this._valueWindow = this._percentWindow = null;\n            setAxisModel(this, true);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        filterData: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            var axisDim = this._dimName;\n            var seriesModels = this.getTargetSeriesModels();\n            var filterMode = dataZoomModel.get('filterMode');\n            var valueWindow = this._valueWindow;\n\n            if (filterMode === 'none') {\n                return;\n            }\n\n            // FIXME\n            // Toolbox may has dataZoom injected. And if there are stacked bar chart\n            // with NaN data, NaN will be filtered and stack will be wrong.\n            // So we need to force the mode to be set empty.\n            // In fect, it is not a big deal that do not support filterMode-'filter'\n            // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n            // selection\" some day, which might need \"adapt to data extent on the\n            // otherAxis\", which is disabled by filterMode-'empty'.\n            var otherAxisModel = this.getOtherAxisModel();\n            if (dataZoomModel.get('$fromToolbox')\n                && otherAxisModel\n                && otherAxisModel.get('type') === 'category'\n            ) {\n                filterMode = 'empty';\n            }\n\n            // Process series data\n            each(seriesModels, function (seriesModel) {\n                var seriesData = seriesModel.getData();\n                var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n                if (filterMode === 'weakFilter') {\n                    seriesData && seriesData.filterSelf(function (dataIndex) {\n                        var leftOut;\n                        var rightOut;\n                        var hasValue;\n                        for (var i = 0; i < dataDims.length; i++) {\n                            var value = seriesData.get(dataDims[i], dataIndex);\n                            var thisHasValue = !isNaN(value);\n                            var thisLeftOut = value < valueWindow[0];\n                            var thisRightOut = value > valueWindow[1];\n                            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n                                return true;\n                            }\n                            thisHasValue && (hasValue = true);\n                            thisLeftOut && (leftOut = true);\n                            thisRightOut && (rightOut = true);\n                        }\n                        // If both left out and right out, do not filter.\n                        return hasValue && leftOut && rightOut;\n                    });\n                }\n                else {\n                    seriesData && each(dataDims, function (dim) {\n                        if (filterMode === 'empty') {\n                            seriesModel.setData(\n                                seriesData.map(dim, function (value) {\n                                    return !isInWindow(value) ? NaN : value;\n                                })\n                            );\n                        }\n                        else {\n                            seriesData.filterSelf(dim, isInWindow);\n                        }\n                    });\n                }\n            });\n\n            function isInWindow(value) {\n                return value >= valueWindow[0] && value <= valueWindow[1];\n            }\n        }\n    };\n\n    function calculateDataExtent(axisProxy, axisDim, seriesModels) {\n        var dataExtent = [Infinity, -Infinity];\n\n        each(seriesModels, function (seriesModel) {\n            var seriesData = seriesModel.getData();\n            if (seriesData) {\n                each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    var seriesExtent = seriesData.getDataExtent(dim);\n                    seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n                    seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n                });\n            }\n        });\n\n        if (dataExtent[1] < dataExtent[0]) {\n            dataExtent = [NaN, NaN];\n        }\n\n        // It is important to get \"consistent\" extent when more then one axes is\n        // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n        // when zooming. But it is difficult to know what is \"consistent\", considering\n        // axes have different type or even different meanings (For example, two\n        // time axes are used to compare data of the same date in different years).\n        // So basically dataZoom just obtains extent by series.data (in category axis\n        // extent can be obtained from axis.data).\n        // Nevertheless, user can set min/max/scale on axes to make extent of axes\n        // consistent.\n        fixExtentByAxis(axisProxy, dataExtent);\n\n        return dataExtent;\n    }\n\n    function fixExtentByAxis(axisProxy, dataExtent) {\n        var axisModel = axisProxy.getAxisModel();\n        var min = axisModel.getMin(true);\n\n        // For category axis, if min/max/scale are not set, extent is determined\n        // by axis.data by default.\n        var isCategoryAxis = axisModel.get('type') === 'category';\n        var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n        if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n            dataExtent[0] = min;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n        }\n\n        var max = axisModel.getMax(true);\n        if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n            dataExtent[1] = max;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n        }\n\n        if (!axisModel.get('scale', true)) {\n            dataExtent[0] > 0 && (dataExtent[0] = 0);\n            dataExtent[1] < 0 && (dataExtent[1] = 0);\n        }\n\n        // For value axis, if min/max/scale are not set, we just use the extent obtained\n        // by series data, which may be a little different from the extent calculated by\n        // `axisHelper.getScaleExtent`. But the different just affects the experience a\n        // little when zooming. So it will not be fixed until some users require it strongly.\n\n        return dataExtent;\n    }\n\n    function setAxisModel(axisProxy, isRestore) {\n        var axisModel = axisProxy.getAxisModel();\n\n        var percentWindow = axisProxy._percentWindow;\n        var valueWindow = axisProxy._valueWindow;\n\n        if (!percentWindow) {\n            return;\n        }\n\n        // [0, 500]: arbitrary value, guess axis extent.\n        var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n        precision = Math.min(precision, 20);\n        // isRestore or isFull\n        var useOrigin = isRestore || (percentWindow[0] === 0 && percentWindow[1] === 100);\n\n        axisModel.setRange(\n            useOrigin ? null : +valueWindow[0].toFixed(precision),\n            useOrigin ? null : +valueWindow[1].toFixed(precision)\n        );\n    }\n\n    function setMinMaxSpan(axisProxy) {\n        var minMaxSpan = axisProxy._minMaxSpan = {};\n        var dataZoomModel = axisProxy._dataZoomModel;\n\n        each(['min', 'max'], function (minMax) {\n            minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span');\n\n            // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n            var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n            if (valueSpan != null) {\n                minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n\n                valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n                if (valueSpan != null) {\n                    minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(\n                        valueSpan, axisProxy._dataExtent, [0, 100], true\n                    );\n                }\n            }\n        });\n    }\n\n    module.exports = AxisProxy;\n\n\n\n/***/ }),\n\n/***/ 1144:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    var DataZoomModel = __webpack_require__(1020);\n\n    module.exports = DataZoomModel.extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n/***/ }),\n\n/***/ 1145:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(1022).extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n/***/ }),\n\n/***/ 1146:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var history = __webpack_require__(1046);\n    var lang = __webpack_require__(998).toolbox.restore;\n\n    function Restore(model) {\n        this.model = model;\n    }\n\n    Restore.defaultOption = {\n        show: true,\n        icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n        title: lang.title\n    };\n\n    var proto = Restore.prototype;\n\n    proto.onclick = function (ecModel, api, type) {\n        history.clear(ecModel);\n\n        api.dispatchAction({\n            type: 'restore',\n            from: this.uid\n        });\n    };\n\n\n    __webpack_require__(990).register('restore', Restore);\n\n\n    __webpack_require__(973).registerAction(\n        {type: 'restore', event: 'restore', update: 'prepareAndUpdate'},\n        function (payload, ecModel) {\n            ecModel.resetOption('recreate');\n        }\n    );\n\n    module.exports = Restore;\n\n\n/***/ }),\n\n/***/ 1150:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var echarts = __webpack_require__(973);\n    var zrUtil = __webpack_require__(972);\n    module.exports = function (seriesType, actionInfos) {\n        zrUtil.each(actionInfos, function (actionInfo) {\n            actionInfo.update = 'updateView';\n            /**\n             * @payload\n             * @property {string} seriesName\n             * @property {string} name\n             */\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\n                var selected = {};\n                ecModel.eachComponent(\n                    {mainType: 'series', subType: seriesType, query: payload},\n                    function (seriesModel) {\n                        if (seriesModel[actionInfo.method]) {\n                            seriesModel[actionInfo.method](\n                                payload.name,\n                                payload.dataIndex\n                            );\n                        }\n                        var data = seriesModel.getData();\n                        // Create selected map\n                        data.each(function (idx) {\n                            var name = data.getName(idx);\n                            selected[name] = seriesModel.isSelected(name)\n                                || false;\n                        });\n                    }\n                );\n                return {\n                    name: payload.name,\n                    selected: selected\n                };\n            });\n        });\n    };\n\n\n/***/ }),\n\n/***/ 1158:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(972);\n    var echarts = __webpack_require__(973);\n\n    __webpack_require__(1159);\n    __webpack_require__(1160);\n\n    __webpack_require__(1150)('pie', [{\n        type: 'pieToggleSelect',\n        event: 'pieselectchanged',\n        method: 'toggleSelected'\n    }, {\n        type: 'pieSelect',\n        event: 'pieselected',\n        method: 'select'\n    }, {\n        type: 'pieUnSelect',\n        event: 'pieunselected',\n        method: 'unSelect'\n    }]);\n\n    echarts.registerVisual(zrUtil.curry(__webpack_require__(1135), 'pie'));\n\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(1161), 'pie'\n    ));\n\n    echarts.registerProcessor(zrUtil.curry(__webpack_require__(1069), 'pie'));\n\n\n/***/ }),\n\n/***/ 1159:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(988);\n    var zrUtil = __webpack_require__(972);\n    var modelUtil = __webpack_require__(976);\n    var numberUtil = __webpack_require__(975);\n    var completeDimensions = __webpack_require__(996);\n\n    var dataSelectableMixin = __webpack_require__(1134);\n\n    var PieSeries = __webpack_require__(973).extendSeriesModel({\n\n        type: 'series.pie',\n\n        // Overwrite\n        init: function (option) {\n            PieSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n\n            this.updateSelectedMap(option.data);\n\n            this._defaultLabelLine(option);\n        },\n\n        // Overwrite\n        mergeOption: function (newOption) {\n            PieSeries.superCall(this, 'mergeOption', newOption);\n            this.updateSelectedMap(this.option.data);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n            // FIXME toFixed?\n\n            var valueList = [];\n            data.each('value', function (value) {\n                valueList.push(value);\n            });\n\n            params.percent = numberUtil.getPercentWithPrecision(\n                valueList,\n                dataIndex,\n                data.hostModel.get('percentPrecision')\n            );\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            radius: [0, '75%'],\n            // 默认顺时针\n            clockwise: true,\n            startAngle: 90,\n            // 最小角度改为0\n            minAngle: 0,\n            // 选中时扇区偏移量\n            selectedOffset: 10,\n            // 高亮扇区偏移量\n            hoverOffset: 10,\n\n            // If use strategy to avoid label overlapping\n            avoidLabelOverlap: true,\n            // 选择模式，默认关闭，可选single，multiple\n            // selectedMode: false,\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n            // roseType: null,\n\n            percentPrecision: 2,\n\n            // If still show when all data zero.\n            stillShowZeroSum: true,\n\n            // cursor: null,\n\n            label: {\n                normal: {\n                    // If rotate around circle\n                    rotate: false,\n                    show: true,\n                    // 'outer', 'inside', 'center'\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                    // 默认使用全局文本样式，详见TEXTSTYLE\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n                },\n                emphasis: {}\n            },\n            // Enabled when label.normal.position is 'outer'\n            labelLine: {\n                normal: {\n                    show: true,\n                    // 引导线两段中的第一段长度\n                    length: 15,\n                    // 引导线两段中的第二段长度\n                    length2: 15,\n                    smooth: false,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 1\n                },\n                emphasis: {}\n            },\n\n            // Animation type canbe expansion, scale\n            animationType: 'expansion',\n\n            animationEasing: 'cubicOut',\n\n            data: []\n        }\n    });\n\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\n    module.exports = PieSeries;\n\n\n/***/ }),\n\n/***/ 1160:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(974);\n    var zrUtil = __webpack_require__(972);\n\n    /**\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n        var data = seriesModel.getData();\n        var dataIndex = this.dataIndex;\n        var name = data.getName(dataIndex);\n        var selectedOffset = seriesModel.get('selectedOffset');\n\n        api.dispatchAction({\n            type: 'pieToggleSelect',\n            from: uid,\n            name: name,\n            seriesId: seriesModel.id\n        });\n\n        data.each(function (idx) {\n            toggleItemSelected(\n                data.getItemGraphicEl(idx),\n                data.getItemLayout(idx),\n                seriesModel.isSelected(data.getName(idx)),\n                selectedOffset,\n                hasAnimation\n            );\n        });\n    }\n\n    /**\n     * @param {module:zrender/graphic/Sector} el\n     * @param {Object} layout\n     * @param {boolean} isSelected\n     * @param {number} selectedOffset\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\n        var dx = Math.cos(midAngle);\n        var dy = Math.sin(midAngle);\n\n        var offset = isSelected ? selectedOffset : 0;\n        var position = [dx * offset, dy * offset];\n\n        hasAnimation\n            // animateTo will stop revious animation like update transition\n            ? el.animate()\n                .when(200, {\n                    position: position\n                })\n                .start('bounceOut')\n            : el.attr('position', position);\n    }\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function PiePiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var sector = new graphic.Sector({\n            z2: 2\n        });\n        var polyline = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(sector);\n        this.add(polyline);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            polyline.ignore = polyline.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            polyline.ignore = polyline.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var piePieceProto = PiePiece.prototype;\n\n    piePieceProto.updateData = function (data, idx, firstCreate) {\n\n        var sector = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var sectorShape = zrUtil.extend({}, layout);\n        sectorShape.label = null;\n\n        if (firstCreate) {\n            sector.setShape(sectorShape);\n\n            var animationType = seriesModel.getShallow('animationType');\n            if (animationType === 'scale') {\n                sector.shape.r = layout.r0;\n                graphic.initProps(sector, {\n                    shape: {\n                        r: layout.r\n                    }\n                }, seriesModel, idx);\n            }\n            // Expansion\n            else {\n                sector.shape.endAngle = layout.startAngle;\n                graphic.updateProps(sector, {\n                    shape: {\n                        endAngle: layout.endAngle\n                    }\n                }, seriesModel, idx);\n            }\n\n        }\n        else {\n            graphic.updateProps(sector, {\n                shape: sectorShape\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        sector.useStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'bevel',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle()\n            )\n        );\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && sector.attr('cursor', cursorStyle);\n\n        // Toggle selected\n        toggleItemSelected(\n            this,\n            data.getItemLayout(idx),\n            itemModel.get('selected'),\n            seriesModel.get('selectedOffset'),\n            seriesModel.get('animation')\n        );\n\n        function onEmphasis() {\n            // Sector may has animation of updating data. Force to move to the last frame\n            // Or it may stopped on the wrong shape\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r + seriesModel.get('hoverOffset')\n                }\n            }, 300, 'elasticOut');\n        }\n        function onNormal() {\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r\n                }\n            }, 300, 'elasticOut');\n        }\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n        if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n            sector\n                .on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    piePieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || [\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n                ]\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.setLabelStyle(\n            labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel,\n            {\n                labelFetcher: data.hostModel,\n                labelDataIndex: idx,\n                defaultText: data.getName(idx),\n                autoColor: visualColor,\n                useInsideStyle: !!labelLayout.inside\n            },\n            {\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.verticalAlign,\n                opacity: data.getItemVisual(idx, 'opacity')\n            }\n        );\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor,\n            opacity: data.getItemVisual(idx, 'opacity')\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\n        var smooth = labelLineModel.get('smooth');\n        if (smooth && smooth === true) {\n            smooth = 0.4;\n        }\n        labelLine.setShape({\n            smooth: smooth\n        });\n    };\n\n    zrUtil.inherits(PiePiece, graphic.Group);\n\n\n    // Pie view\n    var Pie = __webpack_require__(1003).extend({\n\n        type: 'pie',\n\n        init: function () {\n            var sectorGroup = new graphic.Group();\n            this._sectorGroup = sectorGroup;\n        },\n\n        render: function (seriesModel, ecModel, api, payload) {\n            if (payload && (payload.from === this.uid)) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n            var group = this.group;\n\n            var hasAnimation = ecModel.get('animation');\n            var isFirstRender = !oldData;\n            var animationType = seriesModel.get('animationType');\n\n            var onSectorClick = zrUtil.curry(\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n            );\n\n            var selectedMode = seriesModel.get('selectedMode');\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var piePiece = new PiePiece(data, idx);\n                    // Default expansion animation\n                    if (isFirstRender && animationType !== 'scale') {\n                        piePiece.eachChild(function (child) {\n                            child.stopAnimation(true);\n                        });\n                    }\n\n                    selectedMode && piePiece.on('click', onSectorClick);\n\n                    data.setItemGraphicEl(idx, piePiece);\n\n                    group.add(piePiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    piePiece.off('click');\n                    selectedMode && piePiece.on('click', onSectorClick);\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            if (\n                hasAnimation && isFirstRender && data.count() > 0\n                // Default expansion animation\n                && animationType !== 'scale'\n            ) {\n                var shape = data.getItemLayout(0);\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n                group.setClipPath(this._createClipPath(\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n                ));\n            }\n\n            this._data = data;\n        },\n\n        dispose: function () {},\n\n        _createClipPath: function (\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\n        ) {\n            var clipPath = new graphic.Sector({\n                shape: {\n                    cx: cx,\n                    cy: cy,\n                    r0: 0,\n                    r: r,\n                    startAngle: startAngle,\n                    endAngle: startAngle,\n                    clockwise: clockwise\n                }\n            });\n\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n                }\n            }, seriesModel, cb);\n\n            return clipPath;\n        },\n\n        /**\n         * @implement\n         */\n        containPoint: function (point, seriesModel) {\n            var data = seriesModel.getData();\n            var itemLayout = data.getItemLayout(0);\n            if (itemLayout) {\n                var dx = point[0] - itemLayout.cx;\n                var dy = point[1] - itemLayout.cy;\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                return radius <= itemLayout.r && radius >= itemLayout.r0;\n            }\n        }\n\n    });\n\n    module.exports = Pie;\n\n\n/***/ }),\n\n/***/ 1161:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(975);\n    var parsePercent = numberUtil.parsePercent;\n    var labelLayout = __webpack_require__(1162);\n    var zrUtil = __webpack_require__(972);\n\n    var PI2 = Math.PI * 2;\n    var RADIAN = Math.PI / 180;\n\n    module.exports = function (seriesType, ecModel, api, payload) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var center = seriesModel.get('center');\n            var radius = seriesModel.get('radius');\n\n            if (!zrUtil.isArray(radius)) {\n                radius = [0, radius];\n            }\n            if (!zrUtil.isArray(center)) {\n                center = [center, center];\n            }\n\n            var width = api.getWidth();\n            var height = api.getHeight();\n            var size = Math.min(width, height);\n            var cx = parsePercent(center[0], width);\n            var cy = parsePercent(center[1], height);\n            var r0 = parsePercent(radius[0], size / 2);\n            var r = parsePercent(radius[1], size / 2);\n\n            var data = seriesModel.getData();\n\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\n            var validDataCount = 0;\n            data.each('value', function (value) {\n                !isNaN(value) && validDataCount++;\n            });\n\n            var sum = data.getSum('value');\n            // Sum may be 0\n            var unitRadian = Math.PI / (sum || validDataCount) * 2;\n\n            var clockwise = seriesModel.get('clockwise');\n\n            var roseType = seriesModel.get('roseType');\n            var stillShowZeroSum = seriesModel.get('stillShowZeroSum');\n\n            // [0...max]\n            var extent = data.getDataExtent('value');\n            extent[0] = 0;\n\n            // In the case some sector angle is smaller than minAngle\n            var restAngle = PI2;\n            var valueSumLargerThanMinAngle = 0;\n\n            var currentAngle = startAngle;\n            var dir = clockwise ? 1 : -1;\n\n            data.each('value', function (value, idx) {\n                var angle;\n                if (isNaN(value)) {\n                    data.setItemLayout(idx, {\n                        angle: NaN,\n                        startAngle: NaN,\n                        endAngle: NaN,\n                        clockwise: clockwise,\n                        cx: cx,\n                        cy: cy,\n                        r0: r0,\n                        r: roseType\n                            ? NaN\n                            : r\n                    });\n                    return;\n                }\n\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n                if (roseType !== 'area') {\n                    angle = (sum === 0 && stillShowZeroSum)\n                        ? unitRadian : (value * unitRadian);\n                }\n                else {\n                    angle = PI2 / validDataCount;\n                }\n\n                if (angle < minAngle) {\n                    angle = minAngle;\n                    restAngle -= minAngle;\n                }\n                else {\n                    valueSumLargerThanMinAngle += value;\n                }\n\n                var endAngle = currentAngle + dir * angle;\n                data.setItemLayout(idx, {\n                    angle: angle,\n                    startAngle: currentAngle,\n                    endAngle: endAngle,\n                    clockwise: clockwise,\n                    cx: cx,\n                    cy: cy,\n                    r0: r0,\n                    r: roseType\n                        ? numberUtil.linearMap(value, extent, [r0, r])\n                        : r\n                });\n\n                currentAngle = endAngle;\n            }, true);\n\n            // Some sector is constrained by minAngle\n            // Rest sectors needs recalculate angle\n            if (restAngle < PI2 && validDataCount) {\n                // Average the angle if rest angle is not enough after all angles is\n                // Constrained by minAngle\n                if (restAngle <= 1e-3) {\n                    var angle = PI2 / validDataCount;\n                    data.each('value', function (value, idx) {\n                        if (!isNaN(value)) {\n                            var layout = data.getItemLayout(idx);\n                            layout.angle = angle;\n                            layout.startAngle = startAngle + dir * idx * angle;\n                            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n                        }\n                    });\n                }\n                else {\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n                    currentAngle = startAngle;\n                    data.each('value', function (value, idx) {\n                        if (!isNaN(value)) {\n                            var layout = data.getItemLayout(idx);\n                            var angle = layout.angle === minAngle\n                                ? minAngle : value * unitRadian;\n                            layout.startAngle = currentAngle;\n                            layout.endAngle = currentAngle + dir * angle;\n                            currentAngle += dir * angle;\n                        }\n                    });\n                }\n            }\n\n            labelLayout(seriesModel, r, width, height);\n        });\n    };\n\n\n/***/ }),\n\n/***/ 1162:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME emphasis label position is not same with normal label position\n\n\n    var textContain = __webpack_require__(986);\n\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n        list.sort(function (a, b) {\n            return a.y - b.y;\n        });\n\n        // 压\n        function shiftDown(start, end, delta, dir) {\n            for (var j = start; j < end; j++) {\n                list[j].y += delta;\n                if (j > start\n                    && j + 1 < end\n                    && list[j + 1].y > list[j].y + list[j].height\n                ) {\n                    shiftUp(j, delta / 2);\n                    return;\n                }\n            }\n\n            shiftUp(end - 1, delta / 2);\n        }\n\n        // 弹\n        function shiftUp(end, delta) {\n            for (var j = end; j >= 0; j--) {\n                list[j].y -= delta;\n                if (j > 0\n                    && list[j].y > list[j - 1].y + list[j - 1].height\n                ) {\n                    break;\n                }\n            }\n        }\n\n        function changeX(list, isDownList, cx, cy, r, dir) {\n            var lastDeltaX = dir > 0\n                ? isDownList                // 右侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0                     // 上\n                : isDownList                // 左侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0;                    // 上\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                // Not change x for center label\n                if (list[i].position === 'center') {\n                    continue;\n                }\n                var deltaY = Math.abs(list[i].y - cy);\n                var length = list[i].len;\n                var length2 = list[i].len2;\n                var deltaX = (deltaY < r + length)\n                    ? Math.sqrt(\n                          (r + length + length2) * (r + length + length2)\n                          - deltaY * deltaY\n                      )\n                    : Math.abs(list[i].x - cx);\n                if (isDownList && deltaX >= lastDeltaX) {\n                    // 右下，左下\n                    deltaX = lastDeltaX - 10;\n                }\n                if (!isDownList && deltaX <= lastDeltaX) {\n                    // 右上，左上\n                    deltaX = lastDeltaX + 10;\n                }\n\n                list[i].x = cx + deltaX * dir;\n                lastDeltaX = deltaX;\n            }\n        }\n\n        var lastY = 0;\n        var delta;\n        var len = list.length;\n        var upList = [];\n        var downList = [];\n        for (var i = 0; i < len; i++) {\n            delta = list[i].y - lastY;\n            if (delta < 0) {\n                shiftDown(i, len, -delta, dir);\n            }\n            lastY = list[i].y + list[i].height;\n        }\n        if (viewHeight - lastY < 0) {\n            shiftUp(len - 1, lastY - viewHeight);\n        }\n        for (var i = 0; i < len; i++) {\n            if (list[i].y >= cy) {\n                downList.push(list[i]);\n            }\n            else {\n                upList.push(list[i]);\n            }\n        }\n        changeX(upList, false, cx, cy, r, dir);\n        changeX(downList, true, cx, cy, r, dir);\n    }\n\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n        var leftList = [];\n        var rightList = [];\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            if (labelLayoutList[i].x < cx) {\n                leftList.push(labelLayoutList[i]);\n            }\n            else {\n                rightList.push(labelLayoutList[i]);\n            }\n        }\n\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            var linePoints = labelLayoutList[i].linePoints;\n            if (linePoints) {\n                var dist = linePoints[1][0] - linePoints[2][0];\n                if (labelLayoutList[i].x < cx) {\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\n                }\n                else {\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\n                }\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n                linePoints[1][0] = linePoints[2][0] + dist;\n            }\n        }\n    }\n\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n        var data = seriesModel.getData();\n        var labelLayoutList = [];\n        var cx;\n        var cy;\n        var hasLabelRotate = false;\n\n        data.each(function (idx) {\n            var layout = data.getItemLayout(idx);\n\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            // Use position in normal or emphasis\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n            var labelLineLen = labelLineModel.get('length');\n            var labelLineLen2 = labelLineModel.get('length2');\n\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n            var dx = Math.cos(midAngle);\n            var dy = Math.sin(midAngle);\n\n            var textX;\n            var textY;\n            var linePoints;\n            var textAlign;\n\n            cx = layout.cx;\n            cy = layout.cy;\n\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n            if (labelPosition === 'center') {\n                textX = layout.cx;\n                textY = layout.cy;\n                textAlign = 'center';\n            }\n            else {\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\n                textX = x1 + dx * 3;\n                textY = y1 + dy * 3;\n\n                if (!isLabelInside) {\n                    // For roseType\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n                    var y3 = y2;\n\n                    textX = x3 + (dx < 0 ? -5 : 5);\n                    textY = y3;\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n                }\n\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n            }\n            var font = labelModel.getFont();\n\n            var labelRotate = labelModel.get('rotate')\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\n                        || data.getName(idx);\n            var textRect = textContain.getBoundingRect(\n                text, font, textAlign, 'top'\n            );\n            hasLabelRotate = !!labelRotate;\n            layout.label = {\n                x: textX,\n                y: textY,\n                position: labelPosition,\n                height: textRect.height,\n                len: labelLineLen,\n                len2: labelLineLen2,\n                linePoints: linePoints,\n                textAlign: textAlign,\n                verticalAlign: 'middle',\n                rotation: labelRotate,\n                inside: isLabelInside\n            };\n\n            // Not layout the inside label\n            if (!isLabelInside) {\n                labelLayoutList.push(layout.label);\n            }\n        });\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 970:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__ = __webpack_require__(973);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__ = __webpack_require__(1067);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_echarts_lib_component_tooltip__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend__ = __webpack_require__(1068);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_echarts_lib_component_legend__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie__ = __webpack_require__(1158);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_pie__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_toolbox__ = __webpack_require__(1070);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_toolbox___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_toolbox__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}//必须\nvar PieReact=function(_React$Component){_inherits(PieReact,_React$Component);function PieReact(props){_classCallCheck(this,PieReact);var _this=_possibleConstructorReturn(this,(PieReact.__proto__||Object.getPrototypeOf(PieReact)).call(this,props));_this.initPie=_this.initPie.bind(_this);return _this;}_createClass(PieReact,[{key:'initPie',value:function initPie(){var _props$option=this.props.option,option=_props$option===undefined?{}:_props$option;//外部传入的data数据\nvar myChart=__WEBPACK_IMPORTED_MODULE_1_echarts_lib_echarts___default.a.init(this.ID);//初始化echarts\n//设置options\nmyChart.setOption(option);window.onresize=function(){myChart.resize();};}},{key:'componentDidMount',value:function componentDidMount(){this.initPie();}},{key:'componentDidUpdate',value:function componentDidUpdate(){this.initPie();}},{key:'render',value:function render(){var _this2=this;var _props=this.props,_props$width=_props.width,width=_props$width===undefined?\"100%\":_props$width,_props$height=_props.height,height=_props$height===undefined?'300px':_props$height;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{ref:function ref(ID){return _this2.ID=ID;},style:{width:width,height:height}});}}]);return PieReact;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);/* harmony default export */ __webpack_exports__[\"default\"] = (PieReact);\n\n/***/ }),\n\n/***/ 972:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            var Ctor = source.constructor;\n            if (source.constructor.from) {\n                result = Ctor.from(source);\n            }\n            else {\n                result = new Ctor(source.length);\n                for (var i = 0, len = source.length; i < len; i++) {\n                    result[i] = clone(source[i]);\n                }\n            }\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * Low performance.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    function retrieve2(value0, value1) {\n        return value0 != null\n            ? value0\n            : value1;\n    }\n\n    function retrieve3(value0, value1, value2) {\n        return value0 != null\n            ? value0\n            : value1 != null\n            ? value1\n            : value2;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     * @return {Array.<number>}\n     */\n    function normalizeCssArray(val) {\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        var len = val.length;\n        if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[HASH_MAP_PREFIX + key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        retrieve2: retrieve2,\n        retrieve3: retrieve3,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        normalizeCssArray: normalizeCssArray,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n\n/***/ 973:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(979);\n\n    var GlobalModel = __webpack_require__(1080);\n    var ExtensionAPI = __webpack_require__(1108);\n    var CoordinateSystemManager = __webpack_require__(999);\n    var OptionManager = __webpack_require__(1109);\n    var backwardCompat = __webpack_require__(1110);\n\n    var ComponentModel = __webpack_require__(984);\n    var SeriesModel = __webpack_require__(995);\n\n    var ComponentView = __webpack_require__(1029);\n    var ChartView = __webpack_require__(1003);\n    var graphic = __webpack_require__(974);\n    var modelUtil = __webpack_require__(976);\n    var throttle = __webpack_require__(1012);\n\n    var zrender = __webpack_require__(1066);\n    var zrUtil = __webpack_require__(972);\n    var colorTool = __webpack_require__(994);\n    var Eventful = __webpack_require__(993);\n    var timsort = __webpack_require__(1018);\n\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        var theme = zrUtil.clone(theme);\n        theme && backwardCompat(theme, true);\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = theme;\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // Avoid dispatch action before setOption. Especially in `connect`.\n        if (!this._model) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.7.2',\n        dependencies: {\n            zrender: '3.6.2'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(1120));\n    echarts.registerPreprocessor(backwardCompat);\n    echarts.registerLoading('default', __webpack_require__(1121));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = __webpack_require__(988);\n    echarts.Model = __webpack_require__(980);\n\n    echarts.Axis = __webpack_require__(1008);\n\n    echarts.graphic = __webpack_require__(974);\n    echarts.number = __webpack_require__(975);\n    echarts.format = __webpack_require__(978);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(987);\n    echarts.vector = __webpack_require__(977);\n    echarts.color = __webpack_require__(994);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = __webpack_require__(1125);\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)))\n\n/***/ }),\n\n/***/ 974:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(972);\n\n    var pathTool = __webpack_require__(1084);\n    var Path = __webpack_require__(981);\n    var colorTool = __webpack_require__(994);\n    var matrix = __webpack_require__(987);\n    var vector = __webpack_require__(977);\n    var Transformable = __webpack_require__(1025);\n    var BoundingRect = __webpack_require__(983);\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var EMPTY_OBJ = {};\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(1002);\n\n    graphic.Image = __webpack_require__(1028);\n\n    graphic.Text = __webpack_require__(1064);\n\n    graphic.Circle = __webpack_require__(1092);\n\n    graphic.Sector = __webpack_require__(1093);\n\n    graphic.Ring = __webpack_require__(1094);\n\n    graphic.Polygon = __webpack_require__(1095);\n\n    graphic.Polyline = __webpack_require__(1098);\n\n    graphic.Rect = __webpack_require__(1099);\n\n    graphic.Line = __webpack_require__(1100);\n\n    graphic.BezierCurve = __webpack_require__(1101);\n\n    graphic.Arc = __webpack_require__(1102);\n\n    graphic.CompoundPath = __webpack_require__(1103);\n\n    graphic.LinearGradient = __webpack_require__(1065);\n\n    graphic.RadialGradient = __webpack_require__(1104);\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    var subPixelOptimize = graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                // See comment in `doSingleEnterHover`.\n                if (hoverStyle[name] != null) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            var style = el.style;\n            var insideRollbackOpt = style.insideRollbackOpt;\n\n            // Consider case: only `position: 'top'` is set on emphasis, then text\n            // color should be returned to `autoColor`, rather than remain '#fff'.\n            // So we should rollback then apply again after style merging.\n            insideRollbackOpt && rollbackInsideStyle(style);\n\n            // styles can be:\n            // {\n            //     label: {\n            //         normal: {\n            //             show: false,\n            //             position: 'outside',\n            //             fontSize: 18\n            //         },\n            //         emphasis: {\n            //             show: true\n            //         }\n            //     }\n            // },\n            // where properties of `emphasis` may not appear in `normal`. We previously use\n            // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n            // But consider rich text and setOption in merge mode, it is impossible to cover\n            // all properties in merge. So we use merge mode when setting style here, where\n            // only properties that is not `null/undefined` can be set. The disadventage:\n            // null/undefined can not be used to remove style any more in `emphasis`.\n            style.extendFrom(el.__hoverStl);\n\n            // Do not save `insideRollback`.\n            if (insideRollbackOpt) {\n                applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt);\n\n                // textFill may be rollbacked to null.\n                if (style.textFill == null) {\n                    style.textFill = insideRollbackOpt.autoColor;\n                }\n            }\n\n            el.dirty(false);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            // Consider null/undefined value, should use\n            // `setStyle` but not `extendFrom(stl, true)`.\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * @param {Object|module:zrender/graphic/Style} normalStyle\n     * @param {Object} emphasisStyle\n     * @param {module:echarts/model/Model} normalModel\n     * @param {module:echarts/model/Model} emphasisModel\n     * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n     * @param {Object} [opt.defaultText]\n     * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n     *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n     *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n     *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {Object} [normalSpecified]\n     * @param {Object} [emphasisSpecified]\n     */\n    graphic.setLabelStyle = function (\n        normalStyle, emphasisStyle,\n        normalModel, emphasisModel,\n        opt,\n        normalSpecified, emphasisSpecified\n    ) {\n        opt = opt || EMPTY_OBJ;\n        var labelFetcher = opt.labelFetcher;\n        var labelDataIndex = opt.labelDataIndex;\n        var labelDimIndex = opt.labelDimIndex;\n\n        // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n        // is not supported util someone requests.\n\n        var showNormal = normalModel.getShallow('show');\n        var showEmphasis = emphasisModel.getShallow('show');\n\n        // Consider performance, only fetch label when necessary.\n        // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n        // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n        var baseText = (showNormal || showEmphasis)\n            ? zrUtil.retrieve2(\n                labelFetcher\n                    ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex)\n                    : null,\n                opt.defaultText\n            )\n            : null;\n        var normalStyleText = showNormal ? baseText : null;\n        var emphasisStyleText = showEmphasis\n            ? zrUtil.retrieve2(\n                labelFetcher\n                    ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex)\n                    : null,\n                baseText\n            )\n            : null;\n\n        // Optimize: If style.text is null, text will not be drawn.\n        if (normalStyleText != null || emphasisStyleText != null) {\n            // Always set `textStyle` even if `normalStyle.text` is null, because default\n            // values have to be set on `normalStyle`.\n            // If we set default values on `emphasisStyle`, consider case:\n            // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n            // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n            // Then the 'red' will not work on emphasis.\n            setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n            setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n        }\n\n        normalStyle.text = normalStyleText;\n        emphasisStyle.text = emphasisStyleText;\n    };\n\n    /**\n     * Set basic textStyle properties.\n     * @param {Object|module:zrender/graphic/Style} textStyle\n     * @param {module:echarts/model/Model} model\n     * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n     * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n     * @param {boolean} [isEmphasis]\n     */\n    var setTextStyle = graphic.setTextStyle = function (\n        textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis\n    ) {\n        setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n        specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n        return textStyle;\n    };\n\n    /**\n     * Set text option in the style.\n     * @deprecated\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string|boolean} defaultColor Default text color.\n     *        If set as false, it will be processed as a emphasis style.\n     */\n    graphic.setText = function (textStyle, labelModel, defaultColor) {\n        var opt = {isRectText: true};\n        var isEmphasis;\n\n        if (defaultColor === false) {\n            isEmphasis = true;\n        }\n        else {\n            // Support setting color as 'auto' to get visual color.\n            opt.autoColor = defaultColor;\n        }\n        setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n    };\n\n    /**\n     * {\n     *      disableBox: boolean, Whether diable drawing box of block (outer most).\n     *      isRectText: boolean,\n     *      autoColor: string, specify a color when color is 'auto',\n     *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n     *              If autoColor specified, it is used as default textFill.\n     *      useInsideStyle:\n     *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n     *                  if `textFill` is not specified.\n     *              `false`: Do not use inside style.\n     *              `null/undefined`: use inside style if `isRectText` is true and\n     *                  `textFill` is not specified and textPosition contains `'inside'`.\n     *      forceRich: boolean\n     * }\n     */\n    function setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n        // Consider there will be abnormal when merge hover style to normal style if given default value.\n        opt = opt || EMPTY_OBJ;\n\n        if (opt.isRectText) {\n            var textPosition = textStyleModel.getShallow('position')\n                || (isEmphasis ? null : 'inside');\n            // 'outside' is not a valid zr textPostion value, but used\n            // in bar series, and magric type should be considered.\n            textPosition === 'outside' && (textPosition = 'top');\n            textStyle.textPosition = textPosition;\n            textStyle.textOffset = textStyleModel.getShallow('offset');\n            var labelRotate = textStyleModel.getShallow('rotate');\n            labelRotate != null && (labelRotate *= Math.PI / 180);\n            textStyle.textRotation = labelRotate;\n            textStyle.textDistance = zrUtil.retrieve2(\n                textStyleModel.getShallow('distance'), isEmphasis ? null : 5\n            );\n        }\n\n        var ecModel = textStyleModel.ecModel;\n        var globalTextStyle = ecModel && ecModel.option.textStyle;\n\n        // Consider case:\n        // {\n        //     data: [{\n        //         value: 12,\n        //         label: {\n        //             normal: {\n        //                 rich: {\n        //                     // no 'a' here but using parent 'a'.\n        //                 }\n        //             }\n        //         }\n        //     }],\n        //     rich: {\n        //         a: { ... }\n        //     }\n        // }\n        var richItemNames = getRichItemNames(textStyleModel);\n        var richResult;\n        if (richItemNames) {\n            richResult = {};\n            for (var name in richItemNames) {\n                if (richItemNames.hasOwnProperty(name)) {\n                    // Cascade is supported in rich.\n                    var richTextStyle = textStyleModel.getModel(['rich', name]);\n                    // In rich, never `disableBox`.\n                    setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n                }\n            }\n        }\n        textStyle.rich = richResult;\n\n        setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n        if (opt.forceRich && !opt.textStyle) {\n            opt.textStyle = {};\n        }\n\n        return textStyle;\n    }\n\n    // Consider case:\n    // {\n    //     data: [{\n    //         value: 12,\n    //         label: {\n    //             normal: {\n    //                 rich: {\n    //                     // no 'a' here but using parent 'a'.\n    //                 }\n    //             }\n    //         }\n    //     }],\n    //     rich: {\n    //         a: { ... }\n    //     }\n    // }\n    function getRichItemNames(textStyleModel) {\n        // Use object to remove duplicated names.\n        var richItemNameMap;\n        while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n            var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n            if (rich) {\n                richItemNameMap = richItemNameMap || {};\n                for (var name in rich) {\n                    if (rich.hasOwnProperty(name)) {\n                        richItemNameMap[name] = 1;\n                    }\n                }\n            }\n            textStyleModel = textStyleModel.parentModel;\n        }\n        return richItemNameMap;\n    }\n\n    function setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n        // In merge mode, default value should not be given.\n        globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n\n        textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt)\n            || globalTextStyle.color;\n        textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt)\n            || globalTextStyle.textBorderColor;\n        textStyle.textStrokeWidth = zrUtil.retrieve2(\n            textStyleModel.getShallow('textBorderWidth'),\n            globalTextStyle.textBorderWidth\n        );\n\n        if (!isEmphasis) {\n            if (isBlock) {\n                // Always set `insideRollback`, for clearing previous.\n                var originalTextPosition = textStyle.textPosition;\n                textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt);\n                // Save original textPosition, because style.textPosition will be repalced by\n                // real location (like [10, 30]) in zrender.\n                textStyle.insideOriginalTextPosition = originalTextPosition;\n                textStyle.insideRollbackOpt = opt;\n            }\n\n            // Set default finally.\n            if (textStyle.textFill == null) {\n                textStyle.textFill = opt.autoColor;\n            }\n        }\n\n        // Do not use `getFont` here, because merge should be supported, where\n        // part of these properties may be changed in emphasis style, and the\n        // others should remain their original value got from normal style.\n        textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n        textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n        textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n        textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n\n        textStyle.textAlign = textStyleModel.getShallow('align');\n        textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign')\n            || textStyleModel.getShallow('baseline');\n\n        textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n        textStyle.textWidth = textStyleModel.getShallow('width');\n        textStyle.textHeight = textStyleModel.getShallow('height');\n        textStyle.textTag = textStyleModel.getShallow('tag');\n\n        if (!isBlock || !opt.disableBox) {\n            textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n            textStyle.textPadding = textStyleModel.getShallow('padding');\n            textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n            textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n            textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n\n            textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n            textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n            textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n            textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n        }\n\n        textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor')\n            || globalTextStyle.textShadowColor;\n        textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur')\n            || globalTextStyle.textShadowBlur;\n        textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX')\n            || globalTextStyle.textShadowOffsetX;\n        textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY')\n            || globalTextStyle.textShadowOffsetY;\n    }\n\n    function getAutoColor(color, opt) {\n        return color !== 'auto' ? color : (opt && opt.autoColor) ? opt.autoColor : null;\n    }\n\n    function applyInsideStyle(textStyle, textPosition, opt) {\n        var useInsideStyle = opt.useInsideStyle;\n        var insideRollback;\n\n        if (textStyle.textFill == null\n            && useInsideStyle !== false\n            && (useInsideStyle === true\n                || (opt.isRectText\n                    && textPosition\n                    // textPosition can be [10, 30]\n                    && typeof textPosition === 'string'\n                    && textPosition.indexOf('inside') >= 0\n                )\n            )\n        ) {\n            insideRollback = {\n                textFill: null,\n                textStroke: textStyle.textStroke,\n                textStrokeWidth: textStyle.textStrokeWidth\n            };\n            textStyle.textFill = '#fff';\n            // Consider text with #fff overflow its container.\n            if (textStyle.textStroke == null) {\n                textStyle.textStroke = opt.autoColor;\n                textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n            }\n        }\n\n        return insideRollback;\n    }\n\n    function rollbackInsideStyle(style) {\n        var insideRollback = style.insideRollback;\n        if (insideRollback) {\n            style.textFill = insideRollback.textFill;\n            style.textStroke = insideRollback.textStroke;\n            style.textStrokeWidth = insideRollback.textStrokeWidth;\n        }\n    }\n\n    graphic.getFont = function (opt, ecModel) {\n        // ecModel or default text style model.\n        var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    /**\n     * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n     * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n     * @param {Object} [rect] {x, y, width, height}\n     * @return {module:zrender/Element} Icon path or image element.\n     */\n    graphic.createIcon = function (iconStr, opt, rect) {\n        opt = zrUtil.extend({rectHover: true}, opt);\n        var style = opt.style = {strokeNoScale: true};\n        rect = rect || {x: -1, y: -1, width: 2, height: 2};\n\n        if (iconStr) {\n            return iconStr.indexOf('image://') === 0\n                ? (\n                    style.image = iconStr.slice(8),\n                    zrUtil.defaults(style, rect),\n                    new graphic.Image(opt)\n                )\n                : (\n                    graphic.makePath(\n                        iconStr.replace('path://', ''),\n                        opt,\n                        rect,\n                        'center'\n                    )\n                );\n        }\n\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n\n/***/ 975:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = __webpack_require__(972);\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * Consider DST, it is incorrect to provide a method `getTimezoneOffset`\n     * without time specified. So this method is removed.\n     *\n     * @return {number} in minutes\n     */\n    // number.getTimezoneOffset = function () {\n    //     return (new Date()).getTimezoneOffset();\n    // };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            // Use local time when no timezone offset specifed.\n            if (!match[8]) {\n                // match[n] can only be string or undefined.\n                // But take care of '12' + 1 => '121'.\n                return new Date(\n                    +match[1],\n                    +(match[2] || 1) - 1,\n                    +match[3] || 1,\n                    +match[4] || 0,\n                    +(match[5] || 0),\n                    +match[6] || 0,\n                    +match[7] || 0\n                );\n            }\n            // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n            // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n            // For example, system timezone is set as \"Time Zone: America/Toronto\",\n            // then these code will get different result:\n            // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n            // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n            // So we should not use `new Date`, but use `Date.UTC`.\n            else {\n                var hour = +match[4] || 0;\n                if (match[8].toUpperCase() !== 'Z') {\n                    hour -= match[8].slice(0, 3);\n                }\n                return new Date(Date.UTC(\n                    +match[1],\n                    +(match[2] || 1) - 1,\n                    +match[3] || 1,\n                    hour,\n                    +(match[5] || 0),\n                    +match[6] || 0,\n                    +match[7] || 0\n                ));\n            }\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n\n/***/ 976:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(978);\n    var nubmerUtil = __webpack_require__(975);\n    var Model = __webpack_require__(980);\n    var zrUtil = __webpack_require__(972);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             fontSize: 18\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            for (var i = 0, len = subOpts.length; i < len; i++) {\n                var subOptName = subOpts[i];\n                if (!emphasisOpt.hasOwnProperty(subOptName)\n                    && normalOpt.hasOwnProperty(subOptName)\n                ) {\n                    emphasisOpt[subOptName] = normalOpt[subOptName];\n                }\n            }\n        }\n    };\n\n    modelUtil.TEXT_STYLE_OPTIONS = [\n        'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n        'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth',\n        'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline',\n        'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY',\n        'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY',\n        'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding'\n    ];\n\n    // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n    //     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n    //     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n    //     // FIXME: deprecated, check and remove it.\n    //     'textStyle'\n    // ]);\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n/***/ }),\n\n/***/ 977:\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n\n/***/ 978:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(972);\n    var numberUtil = __webpack_require__(975);\n    var textContain = __webpack_require__(986);\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    formatUtil.normalizeCssArray = zrUtil.normalizeCssArray;\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .replace('M', M)\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    formatUtil.getTextRect = textContain.getBoundingRect;\n\n    module.exports = formatUtil;\n\n\n\n/***/ }),\n\n/***/ 979:\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n\n/***/ 980:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(972);\n    var clazzUtil = __webpack_require__(985);\n    var env = __webpack_require__(979);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(1081));\n    mixin(Model, __webpack_require__(1082));\n    mixin(Model, __webpack_require__(1083));\n    mixin(Model, __webpack_require__(1105));\n\n    module.exports = Model;\n\n\n/***/ }),\n\n/***/ 981:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(1010);\n    var zrUtil = __webpack_require__(972);\n    var PathProxy = __webpack_require__(1000);\n    var pathContain = __webpack_require__(1088);\n\n    var Pattern = __webpack_require__(1038);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n\n/***/ 982:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(972);\n    var BoundingRect = __webpack_require__(983);\n    var numberUtil = __webpack_require__(975);\n    var formatUtil = __webpack_require__(978);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                // FIXME compare before adding gap?\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    // FIXME: consider rect.y is not `0`?\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect {width, height}\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        if (aspect != null) {\n            // If width and height are not given\n            // 1. Graph should not exceeds the container\n            // 2. Aspect must be keeped\n            // 3. Graph should take the space as more as possible\n            // FIXME\n            // Margin is not considered, because there is no case that both\n            // using margin and aspect so far.\n            if (isNaN(width) && isNaN(height)) {\n                if (aspect > containerWidth / containerHeight) {\n                    width = containerWidth * 0.8;\n                }\n                else {\n                    height = containerHeight * 0.8;\n                }\n            }\n\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - horizontalMargin - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - verticalMargin - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n     * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        // The real width and height can not be specified but calculated by the given el.\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n     *  that width (or height) should not be calculated by left and right (or top and bottom).\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n/***/ }),\n\n/***/ 983:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(977);\n    var matrix = __webpack_require__(987);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n\n/***/ 984:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(980);\n    var zrUtil = __webpack_require__(972);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(1017);\n    var clazzUtil = __webpack_require__(985);\n    var layout = __webpack_require__(982);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(1106));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n\n/***/ 985:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(972);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n\n/***/ 986:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var util = __webpack_require__(972);\n    var BoundingRect = __webpack_require__(983);\n    var imageHelper = __webpack_require__(1016);\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n\n    var TEXT_CACHE_MAX = 5000;\n    var STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\n    var DEFAULT_FONT = '12px sans-serif';\n\n    var retrieve2 = util.retrieve2;\n    var retrieve3 = util.retrieve3;\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {number} width\n     */\n    function getTextWidth(text, font) {\n        font = font || DEFAULT_FONT;\n        var key = text + ':' + font;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // textContain.measureText may be overrided in SVG or VML\n            width = Math.max(textContain.measureText(textLines[i], font).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {string} [textAlign='left']\n     * @param {string} [textVerticalAlign='top']\n     * @param {Array.<number>} [textPadding]\n     * @param {Object} [rich]\n     * @param {Object} [truncate]\n     * @return {Object} {x, y, width, height, lineHeight}\n     */\n    function getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        return rich\n            ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate)\n            : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n    }\n\n    function getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n        var contentBlock = parsePlainText(text, font, textPadding, truncate);\n        var outerWidth = getTextWidth(text, font);\n        if (textPadding) {\n            outerWidth += textPadding[1] + textPadding[3];\n        }\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n        rect.lineHeight = contentBlock.lineHeight;\n\n        return rect;\n    }\n\n    function getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        var contentBlock = parseRichText(text, {\n            rich: rich,\n            truncate: truncate,\n            font: font,\n            textAlign: textAlign,\n            textPadding: textPadding\n        });\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        return new BoundingRect(x, y, outerWidth, outerHeight);\n    }\n\n    /**\n     * @public\n     * @param {number} x\n     * @param {number} width\n     * @param {string} [textAlign='left']\n     * @return {number} Adjusted x.\n     */\n    function adjustTextX(x, width, textAlign) {\n        // FIXME Right to left language\n        if (textAlign === 'right') {\n            x -= width;\n        }\n        else if (textAlign === 'center') {\n            x -= width / 2;\n        }\n        return x;\n    }\n\n    /**\n     * @public\n     * @param {number} y\n     * @param {number} height\n     * @param {string} [textVerticalAlign='top']\n     * @return {number} Adjusted y.\n     */\n    function adjustTextY(y, height, textVerticalAlign) {\n        if (textVerticalAlign === 'middle') {\n            y -= height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y -= height;\n        }\n        return y;\n    }\n\n    /**\n     * @public\n     * @param {stirng} textPosition\n     * @param {Object} rect {x, y, width, height}\n     * @param {number} distance\n     * @return {Object} {x, y, textAlign, textVerticalAlign}\n     */\n    function adjustTextPositionOnRect(textPosition, rect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n        var halfHeight = height / 2;\n\n        var textAlign = 'left';\n        var textVerticalAlign = 'top';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - distance;\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - distance;\n                textAlign = 'right';\n                textVerticalAlign = 'bottom';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @public\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} font\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, font, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        var textLines = (text + '').split('\\n');\n        options = prepareTruncateOptions(containerWidth, font, ellipsis, options);\n\n        // FIXME\n        // It is not appropriate that every line has '...' when truncate multiple lines.\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            textLines[i] = truncateSingleLine(textLines[i], options);\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n        options = util.extend({}, options);\n\n        options.font = font;\n        var ellipsis = retrieve2(ellipsis, '...');\n        options.maxIterations = retrieve2(options.maxIterations, 2);\n        var minChar = options.minChar = retrieve2(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        options.cnCharWidth = getTextWidth('国', font);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = options.ascCharWidth = getTextWidth('a', font);\n        options.placeholder = retrieve2(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        options.ellipsis = ellipsis;\n        options.ellipsisWidth = ellipsisWidth;\n        options.contentWidth = contentWidth;\n        options.containerWidth = containerWidth;\n\n        return options;\n    }\n\n    function truncateSingleLine(textLine, options) {\n        var containerWidth = options.containerWidth;\n        var font = options.font;\n        var contentWidth = options.contentWidth;\n\n        if (!containerWidth) {\n            return '';\n        }\n\n        var lineWidth = getTextWidth(textLine, font);\n\n        if (lineWidth <= containerWidth) {\n            return textLine;\n        }\n\n        for (var j = 0;; j++) {\n            if (lineWidth <= contentWidth || j >= options.maxIterations) {\n                textLine += options.ellipsis;\n                break;\n            }\n\n            var subLength = j === 0\n                ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth)\n                : lineWidth > 0\n                ? Math.floor(textLine.length * contentWidth / lineWidth)\n                : 0;\n\n            textLine = textLine.substr(0, subLength);\n            lineWidth = getTextWidth(textLine, font);\n        }\n\n        if (textLine === '') {\n            textLine = options.placeholder;\n        }\n\n        return textLine;\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    /**\n     * @public\n     * @param {string} font\n     * @return {number} line height\n     */\n    function getLineHeight(font) {\n        // FIXME A rough approach.\n        return getTextWidth('国', font);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {Object} width\n     */\n    function measureText(text, font) {\n        var ctx = util.getContext();\n        ctx.font = font || DEFAULT_FONT;\n        return ctx.measureText(text);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {Object} [truncate]\n     * @return {Object} block: {lineHeight, lines, height, outerHeight}\n     *  Notice: for performance, do not calculate outerWidth util needed.\n     */\n    function parsePlainText(text, font, padding, truncate) {\n        text != null && (text += '');\n\n        var lineHeight = getLineHeight(font);\n        var lines = text ? text.split('\\n') : [];\n        var height = lines.length * lineHeight;\n        var outerHeight = height;\n\n        if (padding) {\n            outerHeight += padding[0] + padding[2];\n        }\n\n        if (text && truncate) {\n            var truncOuterHeight = truncate.outerHeight;\n            var truncOuterWidth = truncate.outerWidth;\n            if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n                text = '';\n                lines = [];\n            }\n            else if (truncOuterWidth != null) {\n                var options = prepareTruncateOptions(\n                    truncOuterWidth - (padding ? padding[1] + padding[3] : 0),\n                    font,\n                    truncate.ellipsis,\n                    {minChar: truncate.minChar, placeholder: truncate.placeholder}\n                );\n\n                // FIXME\n                // It is not appropriate that every line has '...' when truncate multiple lines.\n                for (var i = 0, len = lines.length; i < len; i++) {\n                    lines[i] = truncateSingleLine(lines[i], options);\n                }\n            }\n        }\n\n        return {\n            lines: lines,\n            height: height,\n            outerHeight: outerHeight,\n            lineHeight: lineHeight\n        };\n    }\n\n    /**\n     * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n     * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n     *\n     * @public\n     * @param {string} text\n     * @param {Object} style\n     * @return {Object} block\n     * {\n     *      width,\n     *      height,\n     *      lines: [{\n     *          lineHeight,\n     *          width,\n     *          tokens: [[{\n     *              styleName,\n     *              text,\n     *              width,      // include textPadding\n     *              height,     // include textPadding\n     *              textWidth, // pure text width\n     *              textHeight, // pure text height\n     *              lineHeihgt,\n     *              font,\n     *              textAlign,\n     *              textVerticalAlign\n     *          }], [...], ...]\n     *      }, ...]\n     * }\n     * If styleName is undefined, it is plain text.\n     */\n    function parseRichText(text, style) {\n        var contentBlock = {lines: [], width: 0, height: 0};\n\n        text != null && (text += '');\n        if (!text) {\n            return contentBlock;\n        }\n\n        var lastIndex = STYLE_REG.lastIndex = 0;\n        var result;\n        while ((result = STYLE_REG.exec(text)) != null)  {\n            var matchedIndex = result.index;\n            if (matchedIndex > lastIndex) {\n                pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n            }\n            pushTokens(contentBlock, result[2], result[1]);\n            lastIndex = STYLE_REG.lastIndex;\n        }\n\n        if (lastIndex < text.length) {\n            pushTokens(contentBlock, text.substring(lastIndex, text.length));\n        }\n\n        var lines = contentBlock.lines;\n        var contentHeight = 0;\n        var contentWidth = 0;\n        // For `textWidth: 100%`\n        var pendingList = [];\n\n        var stlPadding = style.textPadding;\n\n        var truncate = style.truncate;\n        var truncateWidth = truncate && truncate.outerWidth;\n        var truncateHeight = truncate && truncate.outerHeight;\n        if (stlPadding) {\n            truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n            truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n        }\n\n        // Calculate layout info of tokens.\n        for (var i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var lineHeight = 0;\n            var lineWidth = 0;\n\n            for (var j = 0; j < line.tokens.length; j++) {\n                var token = line.tokens[j];\n                var tokenStyle = token.styleName && style.rich[token.styleName] || {};\n                // textPadding should not inherit from style.\n                var textPadding = token.textPadding = tokenStyle.textPadding;\n\n                // textFont has been asigned to font by `normalizeStyle`.\n                var font = token.font = tokenStyle.font || style.font;\n\n                // textHeight can be used when textVerticalAlign is specified in token.\n                var tokenHeight = token.textHeight = retrieve2(\n                    // textHeight should not be inherited, consider it can be specified\n                    // as box height of the block.\n                    tokenStyle.textHeight, textContain.getLineHeight(font)\n                );\n                textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n                token.height = tokenHeight;\n                token.lineHeight = retrieve3(\n                    tokenStyle.textLineHeight, style.textLineHeight, tokenHeight\n                );\n\n                token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n                token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n                if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n                    return {lines: [], width: 0, height: 0};\n                }\n\n                token.textWidth = textContain.getWidth(token.text, font);\n                var tokenWidth = tokenStyle.textWidth;\n                var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto';\n\n                // Percent width, can be `100%`, can be used in drawing separate\n                // line when box width is needed to be auto.\n                if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n                    token.percentWidth = tokenWidth;\n                    pendingList.push(token);\n                    tokenWidth = 0;\n                    // Do not truncate in this case, because there is no user case\n                    // and it is too complicated.\n                }\n                else {\n                    if (tokenWidthNotSpecified) {\n                        tokenWidth = token.textWidth;\n\n                        // FIXME: If image is not loaded and textWidth is not specified, calling\n                        // `getBoundingRect()` will not get correct result.\n                        var textBackgroundColor = tokenStyle.textBackgroundColor;\n                        var bgImg = textBackgroundColor && textBackgroundColor.image;\n\n                        // Use cases:\n                        // (1) If image is not loaded, it will be loaded at render phase and call\n                        // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n                        // image, and then the right size will be calculated here at the next tick.\n                        // See `graphic/helper/text.js`.\n                        // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n                        // use `imageHelper.findExistImage` to find cached image.\n                        // `imageHelper.findExistImage` will always be called here before\n                        // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n                        // which ensures that image will not be rendered before correct size calcualted.\n                        if (bgImg) {\n                            bgImg = imageHelper.findExistImage(bgImg);\n                            if (imageHelper.isImageReady(bgImg)) {\n                                tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n                            }\n                        }\n                    }\n\n                    var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n                    tokenWidth += paddingW;\n\n                    var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n                    if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n                        if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n                            token.text = '';\n                            token.textWidth = tokenWidth = 0;\n                        }\n                        else {\n                            token.text = truncateText(\n                                token.text, remianTruncWidth - paddingW, font, truncate.ellipsis,\n                                {minChar: truncate.minChar}\n                            );\n                            token.textWidth = textContain.getWidth(token.text, font);\n                            tokenWidth = token.textWidth + paddingW;\n                        }\n                    }\n                }\n\n                lineWidth += (token.width = tokenWidth);\n                tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n            }\n\n            line.width = lineWidth;\n            line.lineHeight = lineHeight;\n            contentHeight += lineHeight;\n            contentWidth = Math.max(contentWidth, lineWidth);\n        }\n\n        contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n        contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n        if (stlPadding) {\n            contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n            contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n        }\n\n        for (var i = 0; i < pendingList.length; i++) {\n            var token = pendingList[i];\n            var percentWidth = token.percentWidth;\n            // Should not base on outerWidth, because token can not be placed out of padding.\n            token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n        }\n\n        return contentBlock;\n    }\n\n    function pushTokens(block, str, styleName) {\n        var isEmptyStr = str === '';\n        var strs = str.split('\\n');\n        var lines = block.lines;\n\n        for (var i = 0; i < strs.length; i++) {\n            var text = strs[i];\n            var token = {\n                styleName: styleName,\n                text: text,\n                isLineHolder: !text && !isEmptyStr\n            };\n\n            // The first token should be appended to the last line.\n            if (!i) {\n                var tokens = (lines[lines.length - 1] || (lines[0] = {tokens: []})).tokens;\n\n                // Consider cases:\n                // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n                // (which is a placeholder) should be replaced by new token.\n                // (2) A image backage, where token likes {a|}.\n                // (3) A redundant '' will affect textAlign in line.\n                // (4) tokens with the same tplName should not be merged, because\n                // they should be displayed in different box (with border and padding).\n                var tokensLen = tokens.length;\n                (tokensLen === 1 && tokens[0].isLineHolder)\n                    ? (tokens[0] = token)\n                    // Consider text is '', only insert when it is the \"lineHolder\" or\n                    // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n                    : ((text || !tokensLen || isEmptyStr) && tokens.push(token));\n            }\n            // Other tokens always start a new line.\n            else {\n                // If there is '', insert it as a placeholder.\n                lines.push({tokens: [token]});\n            }\n        }\n    }\n\n    function makeFont(style) {\n        // FIXME in node-canvas fontWeight is before fontStyle\n        // Use `fontSize` `fontFamily` to check whether font properties are defined.\n        return (style.fontSize || style.fontFamily) && [\n            style.fontStyle,\n            style.fontWeight,\n            (style.fontSize || 12) + 'px',\n            // If font properties are defined, `fontFamily` should not be ignored.\n            style.fontFamily || 'sans-serif'\n        ].join(' ') || style.textFont || style.font;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: measureText,\n\n        getLineHeight: getLineHeight,\n\n        parsePlainText: parsePlainText,\n\n        parseRichText: parseRichText,\n\n        adjustTextX: adjustTextX,\n\n        adjustTextY: adjustTextY,\n\n        makeFont: makeFont,\n\n        DEFAULT_FONT: DEFAULT_FONT\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n\n/***/ 987:\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n\n/***/ 988:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(980);\n    var DataDiffer = __webpack_require__(1004);\n\n    var zrUtil = __webpack_require__(972);\n    var modelUtil = __webpack_require__(976);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string|Object} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)))\n\n/***/ }),\n\n/***/ 989:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(1122);\n    var IntervalScale = __webpack_require__(1013);\n    __webpack_require__(1123);\n    __webpack_require__(1124);\n    var Scale = __webpack_require__(1005);\n\n    var numberUtil = __webpack_require__(975);\n    var zrUtil = __webpack_require__(972);\n    var textContain = __webpack_require__(986);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        else if (typeof min === 'function') {\n            min = min({\n                min: originalExtent[0],\n                max: originalExtent[1]\n            });\n        }\n\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n        else if (typeof max === 'function') {\n            max = max({\n                min: originalExtent[0],\n                max: originalExtent[1]\n            });\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        var scaleType = scale.type;\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('minInterval') : null,\n            maxInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('maxInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n\n/***/ 990:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var features = {};\n\n    module.exports = {\n        register: function (name, ctor) {\n            features[name] = ctor;\n        },\n\n        get: function (name) {\n            return features[name];\n        }\n    };\n\n\n/***/ }),\n\n/***/ 991:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(993);\n    var env = __webpack_require__(979);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    var MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n        // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n        // If e.which has been defined, if may be readonly,\n        // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n        var button = e.button;\n        if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n            e.which = (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    function notLeftMouse(e) {\n        // If e.which is undefined, considered as left mouse event.\n        return e.which > 1;\n    }\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n        notLeftMouse: notLeftMouse,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n\n/***/ 992:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(977);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n\n/***/ 993:\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n\n/***/ 994:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(1031);\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerpNumber(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than lerp methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastLerp(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function lerp(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastLerp: fastLerp,\n        fastMapToColor: fastLerp, // Deprecated\n        lerp: lerp,\n        mapToColor: lerp, // Deprecated\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n\n/***/ 995:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(972);\n    var formatUtil = __webpack_require__(978);\n    var classUtil = __webpack_require__(985);\n    var modelUtil = __webpack_require__(976);\n    var ComponentModel = __webpack_require__(984);\n    var colorPaletteMixin = __webpack_require__(1040);\n    var env = __webpack_require__(979);\n    var layout = __webpack_require__(982);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            // Backward compat: using subType on theme.\n            // But if name duplicate between series subType\n            // (for example: parallel) add component mainType,\n            // add suffix 'Series'.\n            var themeSubType = this.subType;\n            if (ComponentModel.hasClass(themeSubType)) {\n                themeSubType += 'Series';\n            }\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `show`\n            modelUtil.defaultEmphasis(option.label, ['show']);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                var props = ['show'];\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, props);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n\n/***/ 996:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(972);\n    var modelUtil = __webpack_require__(976);\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            // `isFinit('')` get `true`.\n            if (value != null && isFinite(value) && value !== '') {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n\n/***/ 997:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(974);\n    var BoundingRect = __webpack_require__(983);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n\n/***/ 998:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        toolbox: {\n            brush: {\n                title: {\n                    rect: '矩形选择',\n                    polygon: '圈选',\n                    lineX: '横向选择',\n                    lineY: '纵向选择',\n                    keep: '保持选择',\n                    clear: '清除选择'\n                }\n            },\n            dataView: {\n                title: '数据视图',\n                lang: ['数据视图', '关闭', '刷新']\n            },\n            dataZoom: {\n                title: {\n                    zoom: '区域缩放',\n                    back: '区域缩放还原'\n                }\n            },\n            magicType: {\n                title: {\n                    line: '切换为折线图',\n                    bar: '切换为柱状图',\n                    stack: '切换为堆叠',\n                    tiled: '切换为平铺'\n                }\n            },\n            restore: {\n                title: '还原'\n            },\n            saveAsImage: {\n                title: '保存为图片',\n                lang: ['右键另存为图片']\n            }\n        }\n    };\n\n\n\n/***/ }),\n\n/***/ 999:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(972);\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/PieReact.7559485c.chunk.js","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/PathProxy.js\n// module id = 1000\n// module chunks = 0 1 2","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/config.js\n// module id = 1001\n// module chunks = 0 1 2","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/container/Group.js\n// module id = 1002\n// module chunks = 0 1 2","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/view/Chart.js\n// module id = 1003\n// module chunks = 0 1 2","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    /**\n     * @param {Array} oldArr\n     * @param {Array} newArr\n     * @param {Function} oldKeyGetter\n     * @param {Function} newKeyGetter\n     * @param {Object} [context] Can be visited by this.context in callback.\n     */\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n\n        this.context = context;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/DataDiffer.js\n// module id = 1004\n// module chunks = 0 1 2","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Scale.js\n// module id = 1005\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 1006\n// module chunks = 0 1 2","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 1007\n// module chunks = 0 1 2","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/Axis.js\n// module id = 1008\n// module chunks = 0 1 2","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createListFromArray.js\n// module id = 1009\n// module chunks = 0 1 2","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style, this);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj, this);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Displayable.js\n// module id = 1010\n// module chunks = 0 1 2","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Gradient.js\n// module id = 1011\n// module chunks = 0 1 2","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/throttle.js\n// module id = 1012\n// module chunks = 0 1 2","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n    var helper = require('./helper');\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         * @param {number} [maxInterval]\n         */\n        niceTicks: function (splitNumber, minInterval, maxInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(\n                extent, splitNumber, minInterval, maxInterval\n            );\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval]\n         * @param {boolean} [opt.maxInterval]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Interval.js\n// module id = 1013\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var matrix = require('zrender/lib/core/matrix');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTickLabel: function () {\n            var axisModel = this.axisModel;\n            var opt = this.opt;\n\n            var tickEls = buildAxisTick(this, axisModel, opt);\n            var labelEls = buildAxisLabel(this, axisModel, opt);\n\n            fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (isNameLocationCenter(nameLocation)) {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            // FIXME\n            // truncate rich text? (consider performance)\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            graphic.setTextStyle(textEl.style, textStyleModel, {\n                text: truncatedText,\n                textFont: textFont,\n                textFill: textStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color'),\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.textVerticalAlign\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n        // FIXME\n        // Have not consider onBand yet, where tick els is more than label els.\n\n        labelEls = labelEls || [];\n        tickEls = tickEls || [];\n\n        var firstLabel = labelEls[0];\n        var nextLabel = labelEls[1];\n        var lastLabel = labelEls[labelEls.length - 1];\n        var prevLabel = labelEls[labelEls.length - 2];\n\n        var firstTick = tickEls[0];\n        var nextTick = tickEls[1];\n        var lastTick = tickEls[tickEls.length - 1];\n        var prevTick = tickEls[tickEls.length - 2];\n\n        if (showMinLabel === false) {\n            ignoreEl(firstLabel);\n            ignoreEl(firstTick);\n        }\n        else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            if (showMinLabel) {\n                ignoreEl(nextLabel);\n                ignoreEl(nextTick);\n            }\n            else {\n                ignoreEl(firstLabel);\n                ignoreEl(firstTick);\n            }\n        }\n\n        if (showMaxLabel === false) {\n            ignoreEl(lastLabel);\n            ignoreEl(lastTick);\n        }\n        else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            if (showMaxLabel) {\n                ignoreEl(prevLabel);\n                ignoreEl(prevTick);\n            }\n            else {\n                ignoreEl(lastLabel);\n                ignoreEl(lastTick);\n            }\n        }\n    }\n\n    function ignoreEl(el) {\n        el && (el.ignore = true);\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n    function isNameLocationCenter(nameLocation) {\n        return nameLocation === 'middle' || nameLocation === 'center';\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (\n        axis,\n        i,\n        interval,\n        ticksCnt,\n        showMinLabel,\n        showMaxLabel\n    ) {\n        if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n            return false;\n        }\n\n        // FIXME\n        // Have not consider label overlap (if label is too long) yet.\n\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    function buildAxisTick(axisBuilder, axisModel, opt) {\n        var axis = axisModel.axis;\n\n        if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n            return;\n        }\n\n        var tickModel = axisModel.getModel('axisTick');\n\n        var lineStyleModel = tickModel.getModel('lineStyle');\n        var tickLen = tickModel.get('length');\n\n        var tickInterval = getInterval(tickModel, opt.labelInterval);\n        var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n        // FIXME\n        // Corresponds to ticksCoords ?\n        var ticks = axis.scale.getTicks();\n\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n        var pt1 = [];\n        var pt2 = [];\n        var matrix = axisBuilder._transform;\n\n        var tickEls = [];\n\n        var ticksCnt = ticksCoords.length;\n        for (var i = 0; i < ticksCnt; i++) {\n            // Only ordinal scale support tick interval\n            if (ifIgnoreOnTick(\n                axis, i, tickInterval, ticksCnt,\n                showMinLabel, showMaxLabel\n            )) {\n                continue;\n            }\n\n            var tickCoord = ticksCoords[i];\n\n            pt1[0] = tickCoord;\n            pt1[1] = 0;\n            pt2[0] = tickCoord;\n            pt2[1] = opt.tickDirection * tickLen;\n\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n            // Tick line, Not use group transform to have better line draw\n            var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n                // Id for animation\n                anid: 'tick_' + ticks[i],\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.defaults(\n                    lineStyleModel.getLineStyle(),\n                    {\n                        stroke: axisModel.get('axisLine.lineStyle.color')\n                    }\n                ),\n                z2: 2,\n                silent: true\n            }));\n            axisBuilder.group.add(tickEl);\n            tickEls.push(tickEl);\n        }\n\n        return tickEls;\n    }\n\n    function buildAxisLabel(axisBuilder, axisModel, opt) {\n        var axis = axisModel.axis;\n        var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n        if (!show || axis.scale.isBlank()) {\n            return;\n        }\n\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelMargin = labelModel.get('margin');\n        var ticks = axis.scale.getTicks();\n        var labels = axisModel.getFormattedLabels();\n\n        // Special label rotate.\n        var labelRotation = (\n            retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n        ) * PI / 180;\n\n        var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n        var categoryData = axisModel.get('data');\n\n        var labelEls = [];\n        var silent = isSilent(axisModel);\n        var triggerEvent = axisModel.get('triggerEvent');\n\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n        zrUtil.each(ticks, function (tickVal, index) {\n            if (ifIgnoreOnTick(\n                axis, index, opt.labelInterval, ticks.length,\n                showMinLabel, showMaxLabel\n            )) {\n                    return;\n            }\n\n            var itemLabelModel = labelModel;\n            if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                itemLabelModel = new Model(\n                    categoryData[tickVal].textStyle, labelModel, axisModel.ecModel\n                );\n            }\n\n            var textColor = itemLabelModel.getTextColor()\n                || axisModel.get('axisLine.lineStyle.color');\n\n            var tickCoord = axis.dataToCoord(tickVal);\n            var pos = [\n                tickCoord,\n                opt.labelOffset + opt.labelDirection * labelMargin\n            ];\n            var labelStr = axis.scale.getLabel(tickVal);\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'label_' + tickVal,\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: silent,\n                z2: 10\n            });\n\n            graphic.setTextStyle(textEl.style, itemLabelModel, {\n                text: labels[index],\n                textAlign: itemLabelModel.getShallow('align', true)\n                    || labelLayout.textAlign,\n                textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true)\n                    || itemLabelModel.getShallow('baseline', true)\n                    || labelLayout.textVerticalAlign,\n                textFill: typeof textColor === 'function'\n                    ? textColor(\n                        // (1) In category axis with data zoom, tick is not the original\n                        // index of axis.data. So tick should not be exposed to user\n                        // in category axis.\n                        // (2) Compatible with previous version, which always returns labelStr.\n                        // But in interval scale labelStr is like '223,445', which maked\n                        // user repalce ','. So we modify it to return original val but remain\n                        // it as 'string' to avoid error in replacing.\n                        axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                        index\n                    )\n                    : textColor\n            });\n\n            // Pack data for mouse event\n            if (triggerEvent) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisLabel';\n                textEl.eventData.value = labelStr;\n            }\n\n            // FIXME\n            axisBuilder._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            labelEls.push(textEl);\n            axisBuilder.group.add(textEl);\n\n            textEl.decomposeTransform();\n\n        });\n\n        return labelEls;\n    }\n\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisBuilder.js\n// module id = 1014\n// module chunks = 0 1 2","\n\n    var axisPointerModelHelper = require('../axisPointer/modelHelper');\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisView.js\n// module id = 1015\n// module chunks = 0 1 2","\n\n    var LRU = require('../../core/LRU');\n    var globalImageCache = new LRU(50);\n\n    var helper = {};\n\n    /**\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.findExistImage = function (newImageOrSrc) {\n        if (typeof newImageOrSrc === 'string') {\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n            return cachedImgObj && cachedImgObj.image;\n        }\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    /**\n     * Caution: User should cache loaded images, but not just count on LRU.\n     * Consider if required images more than LRU size, will dead loop occur?\n     *\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n     * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n     * @param {Function} [cb] params: (image, cbPayload)\n     * @param {Object} [cbPayload] Payload on cb calling.\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.createOrUpdateImage = function (newImageOrSrc, image, hostEl, cb, cbPayload) {\n        if (!newImageOrSrc) {\n            return image;\n        }\n        else if (typeof newImageOrSrc === 'string') {\n\n            // Image should not be loaded repeatly.\n            if ((image && image.__zrImageSrc === newImageOrSrc) || !hostEl) {\n                return image;\n            }\n\n            // Only when there is no existent image or existent image src\n            // is different, this method is responsible for load.\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n\n            var pendingWrap = {hostEl: hostEl, cb: cb, cbPayload: cbPayload};\n\n            if (cachedImgObj) {\n                image = cachedImgObj.image;\n                !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n            }\n            else {\n                !image && (image = new Image());\n                image.onload = imageOnLoad;\n\n                globalImageCache.put(\n                    newImageOrSrc,\n                    image.__cachedImgObj = {\n                        image: image,\n                        pending: [pendingWrap]\n                    }\n                );\n\n                image.src = image.__zrImageSrc = newImageOrSrc;\n            }\n\n            return image;\n        }\n        // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    function imageOnLoad() {\n        var cachedImgObj = this.__cachedImgObj;\n        this.onload = this.__cachedImgObj = null;\n\n        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n            var pendingWrap = cachedImgObj.pending[i];\n            var cb = pendingWrap.cb;\n            cb && cb(this, pendingWrap.cbPayload);\n            pendingWrap.hostEl.dirty();\n        }\n        cachedImgObj.pending.length = 0;\n    }\n\n    var isImageReady = helper.isImageReady = function (image) {\n        return image && image.width && image.height;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/image.js\n// module id = 1016\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/component.js\n// module id = 1017\n// module chunks = 0 1 2","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/timsort.js\n// module id = 1018\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis\n                && min != null\n                && min !== 'dataMin'\n                && typeof min !== 'function'\n                && !zrUtil.eqNaN(min)\n            ) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis\n                && max != null\n                && max !== 'dataMax'\n                && typeof max !== 'function'\n                && !zrUtil.eqNaN(max)\n            ) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 1019\n// module chunks = 0 1 2","/**\n * @file Data zoom model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var env = require('zrender/lib/core/env');\n    var echarts = require('../../echarts');\n    var modelUtil = require('../../util/model');\n    var helper = require('./helper');\n    var AxisProxy = require('./AxisProxy');\n    var each = zrUtil.each;\n    var eachAxisDim = helper.eachAxisDim;\n\n    var DataZoomModel = echarts.extendComponentModel({\n\n        type: 'dataZoom',\n\n        dependencies: [\n            'xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'\n        ],\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            zlevel: 0,\n            z: 4,                   // Higher than normal component (z: 2).\n            orient: null,           // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n            xAxisIndex: null,       // Default the first horizontal category axis.\n            yAxisIndex: null,       // Default the first vertical category axis.\n\n            filterMode: 'filter',   // Possible values: 'filter' or 'empty' or 'weakFilter'.\n                                    // 'filter': data items which are out of window will be removed. This option is\n                                    //          applicable when filtering outliers. For each data item, it will be\n                                    //          filtered if one of the relevant dimensions is out of the window.\n                                    // 'weakFilter': data items which are out of window will be removed. This option\n                                    //          is applicable when filtering outliers. For each data item, it will be\n                                    //          filtered only if all  of the relevant dimensions are out of the same\n                                    //          side of the window.\n                                    // 'empty': data items which are out of window will be set to empty.\n                                    //          This option is applicable when user should not neglect\n                                    //          that there are some data items out of window.\n                                    // 'none': Do not filter.\n                                    // Taking line chart as an example, line will be broken in\n                                    // the filtered points when filterModel is set to 'empty', but\n                                    // be connected when set to 'filter'.\n\n            throttle: null,         // Dispatch action by the fixed rate, avoid frequency.\n                                    // default 100. Do not throttle when use null/undefined.\n                                    // If animation === true and animationDurationUpdate > 0,\n                                    // default value is 100, otherwise 20.\n            start: 0,               // Start percent. 0 ~ 100\n            end: 100,               // End percent. 0 ~ 100\n            startValue: null,       // Start value. If startValue specified, start is ignored.\n            endValue: null,         // End value. If endValue specified, end is ignored.\n            minSpan: null,          // 0 ~ 100\n            maxSpan: null,          // 0 ~ 100\n            minValueSpan: null,     // The range of dataZoom can not be smaller than that.\n            maxValueSpan: null,     // The range of dataZoom can not be larger than that.\n            rangeMode: null         // Array, can be 'value' or 'percent'.\n        },\n\n        /**\n         * @override\n         */\n        init: function (option, parentModel, ecModel) {\n\n            /**\n             * key like x_0, y_1\n             * @private\n             * @type {Object}\n             */\n            this._dataIntervalByAxis = {};\n\n            /**\n             * @private\n             */\n            this._dataInfo = {};\n\n            /**\n             * key like x_0, y_1\n             * @private\n             */\n            this._axisProxies = {};\n\n            /**\n             * @readOnly\n             */\n            this.textStyleModel;\n\n            /**\n             * @private\n             */\n            this._autoThrottle = true;\n\n            /**\n             * 'percent' or 'value'\n             * @private\n             */\n            this._rangePropMode = ['percent', 'percent'];\n\n            var rawOption = retrieveRaw(option);\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function (newOption) {\n            var rawOption = retrieveRaw(newOption);\n\n            //FIX #2591\n            zrUtil.merge(this.option, newOption, true);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @protected\n         */\n        doInit: function (rawOption) {\n            var thisOption = this.option;\n\n            // Disable realtime view update if canvas is not supported.\n            if (!env.canvasSupported) {\n                thisOption.realtime = false;\n            }\n\n            this._setDefaultThrottle(rawOption);\n\n            updateRangeUse(this, rawOption);\n\n            each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n                // start/end has higher priority over startValue/endValue if they\n                // both set, but we should make chart.setOption({endValue: 1000})\n                // effective, rather than chart.setOption({endValue: 1000, end: null}).\n                if (this._rangePropMode[index] === 'value') {\n                    thisOption[names[0]] = null;\n                }\n                // Otherwise do nothing and use the merge result.\n            }, this);\n\n            this.textStyleModel = this.getModel('textStyle');\n\n            this._resetTarget();\n\n            this._giveAxisProxies();\n        },\n\n        /**\n         * @private\n         */\n        _giveAxisProxies: function () {\n            var axisProxies = this._axisProxies;\n\n            this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n                var axisModel = this.dependentModels[dimNames.axis][axisIndex];\n\n                // If exists, share axisProxy with other dataZoomModels.\n                var axisProxy = axisModel.__dzAxisProxy || (\n                    // Use the first dataZoomModel as the main model of axisProxy.\n                    axisModel.__dzAxisProxy = new AxisProxy(\n                        dimNames.name, axisIndex, this, ecModel\n                    )\n                );\n                // FIXME\n                // dispose __dzAxisProxy\n\n                axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetTarget: function () {\n            var thisOption = this.option;\n\n            var autoMode = this._judgeAutoMode();\n\n            eachAxisDim(function (dimNames) {\n                var axisIndexName = dimNames.axisIndex;\n                thisOption[axisIndexName] = modelUtil.normalizeToArray(\n                    thisOption[axisIndexName]\n                );\n            }, this);\n\n            if (autoMode === 'axisIndex') {\n                this._autoSetAxisIndex();\n            }\n            else if (autoMode === 'orient') {\n                this._autoSetOrient();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _judgeAutoMode: function () {\n            // Auto set only works for setOption at the first time.\n            // The following is user's reponsibility. So using merged\n            // option is OK.\n            var thisOption = this.option;\n\n            var hasIndexSpecified = false;\n            eachAxisDim(function (dimNames) {\n                // When user set axisIndex as a empty array, we think that user specify axisIndex\n                // but do not want use auto mode. Because empty array may be encountered when\n                // some error occured.\n                if (thisOption[dimNames.axisIndex] != null) {\n                    hasIndexSpecified = true;\n                }\n            }, this);\n\n            var orient = thisOption.orient;\n\n            if (orient == null && hasIndexSpecified) {\n                return 'orient';\n            }\n            else if (!hasIndexSpecified) {\n                if (orient == null) {\n                    thisOption.orient = 'horizontal';\n                }\n                return 'axisIndex';\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetAxisIndex: function () {\n            var autoAxisIndex = true;\n            var orient = this.get('orient', true);\n            var thisOption = this.option;\n            var dependentModels = this.dependentModels;\n\n            if (autoAxisIndex) {\n                // Find axis that parallel to dataZoom as default.\n                var dimName = orient === 'vertical' ? 'y' : 'x';\n\n                if (dependentModels[dimName + 'Axis'].length) {\n                    thisOption[dimName + 'AxisIndex'] = [0];\n                    autoAxisIndex = false;\n                }\n                else {\n                    each(dependentModels.singleAxis, function (singleAxisModel) {\n                        if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n                            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n                            autoAxisIndex = false;\n                        }\n                    });\n                }\n            }\n\n            if (autoAxisIndex) {\n                // Find the first category axis as default. (consider polar)\n                eachAxisDim(function (dimNames) {\n                    if (!autoAxisIndex) {\n                        return;\n                    }\n                    var axisIndices = [];\n                    var axisModels = this.dependentModels[dimNames.axis];\n                    if (axisModels.length && !axisIndices.length) {\n                        for (var i = 0, len = axisModels.length; i < len; i++) {\n                            if (axisModels[i].get('type') === 'category') {\n                                axisIndices.push(i);\n                            }\n                        }\n                    }\n                    thisOption[dimNames.axisIndex] = axisIndices;\n                    if (axisIndices.length) {\n                        autoAxisIndex = false;\n                    }\n                }, this);\n            }\n\n            if (autoAxisIndex) {\n                // FIXME\n                // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n                // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n\n                // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n                // dataZoom component auto adopts series that reference to\n                // both xAxis and yAxis which type is 'value'.\n                this.ecModel.eachSeries(function (seriesModel) {\n                    if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n                        eachAxisDim(function (dimNames) {\n                            var axisIndices = thisOption[dimNames.axisIndex];\n\n                            var axisIndex = seriesModel.get(dimNames.axisIndex);\n                            var axisId = seriesModel.get(dimNames.axisId);\n\n                            var axisModel = seriesModel.ecModel.queryComponents({\n                                mainType: dimNames.axis,\n                                index: axisIndex,\n                                id: axisId\n                            })[0];\n\n                            if (__DEV__) {\n                                if (!axisModel) {\n                                    throw new Error(\n                                        dimNames.axis + ' \"' + zrUtil.retrieve(\n                                            axisIndex,\n                                            axisId,\n                                            0\n                                        ) + '\" not found'\n                                    );\n                                }\n                            }\n                            axisIndex = axisModel.componentIndex;\n\n                            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n                                axisIndices.push(axisIndex);\n                            }\n                        });\n                    }\n                }, this);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetOrient: function () {\n            var dim;\n\n            // Find the first axis\n            this.eachTargetAxis(function (dimNames) {\n                !dim && (dim = dimNames.name);\n            }, this);\n\n            this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n        },\n\n        /**\n         * @private\n         */\n        _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n            // FIXME\n            // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n            // 例如series.type === scatter时。\n\n            var is = true;\n            eachAxisDim(function (dimNames) {\n                var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n                var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n                if (!axisModel || axisModel.get('type') !== axisType) {\n                    is = false;\n                }\n            }, this);\n            return is;\n        },\n\n        /**\n         * @private\n         */\n        _setDefaultThrottle: function (rawOption) {\n            // When first time user set throttle, auto throttle ends.\n            if (rawOption.hasOwnProperty('throttle')) {\n                this._autoThrottle = false;\n            }\n            if (this._autoThrottle) {\n                var globalOption = this.ecModel.option;\n                this.option.throttle =\n                    (globalOption.animation && globalOption.animationDurationUpdate > 0)\n                    ? 100 : 20;\n            }\n        },\n\n        /**\n         * @public\n         */\n        getFirstTargetAxisModel: function () {\n            var firstAxisModel;\n            eachAxisDim(function (dimNames) {\n                if (firstAxisModel == null) {\n                    var indices = this.get(dimNames.axisIndex);\n                    if (indices.length) {\n                        firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n                    }\n                }\n            }, this);\n\n            return firstAxisModel;\n        },\n\n        /**\n         * @public\n         * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n         */\n        eachTargetAxis: function (callback, context) {\n            var ecModel = this.ecModel;\n            eachAxisDim(function (dimNames) {\n                each(\n                    this.get(dimNames.axisIndex),\n                    function (axisIndex) {\n                        callback.call(context, dimNames, axisIndex, this, ecModel);\n                    },\n                    this\n                );\n            }, this);\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n         */\n        getAxisProxy: function (dimName, axisIndex) {\n            return this._axisProxies[dimName + '_' + axisIndex];\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/model/Model} If not found, return null/undefined.\n         */\n        getAxisModel: function (dimName, axisIndex) {\n            var axisProxy = this.getAxisProxy(dimName, axisIndex);\n            return axisProxy && axisProxy.getAxisModel();\n        },\n\n        /**\n         * If not specified, set to undefined.\n         *\n         * @public\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         * @param {boolean} [ignoreUpdateRangeUsg=false]\n         */\n        setRawRange: function (opt, ignoreUpdateRangeUsg) {\n            each(['start', 'end', 'startValue', 'endValue'], function (name) {\n                // If any of those prop is null/undefined, we should alos set\n                // them, because only one pair between start/end and\n                // startValue/endValue can work.\n                this.option[name] = opt[name];\n            }, this);\n\n            !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n        },\n\n        /**\n         * @public\n         * @return {Array.<number>} [startPercent, endPercent]\n         */\n        getPercentRange: function () {\n            var axisProxy = this.findRepresentativeAxisProxy();\n            if (axisProxy) {\n                return axisProxy.getDataPercentWindow();\n            }\n        },\n\n        /**\n         * @public\n         * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n         *\n         * @param {string} [axisDimName]\n         * @param {number} [axisIndex]\n         * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n         */\n        getValueRange: function (axisDimName, axisIndex) {\n            if (axisDimName == null && axisIndex == null) {\n                var axisProxy = this.findRepresentativeAxisProxy();\n                if (axisProxy) {\n                    return axisProxy.getDataValueWindow();\n                }\n            }\n            else {\n                return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n            }\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n         *      corresponding to the axisModel\n         * @return {module:echarts/component/dataZoom/AxisProxy}\n         */\n        findRepresentativeAxisProxy: function (axisModel) {\n            if (axisModel) {\n                return axisModel.__dzAxisProxy;\n            }\n\n            // Find the first hosted axisProxy\n            var axisProxies = this._axisProxies;\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n\n            // If no hosted axis find not hosted axisProxy.\n            // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n            // and the option.start or option.end settings are different. The percentRange\n            // should follow axisProxy.\n            // (We encounter this problem in toolbox data zoom.)\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getRangePropMode: function () {\n            return this._rangePropMode.slice();\n        }\n\n    });\n\n    function retrieveRaw(option) {\n        var ret = {};\n        each(\n            ['start', 'end', 'startValue', 'endValue', 'throttle'],\n            function (name) {\n                option.hasOwnProperty(name) && (ret[name] = option[name]);\n            }\n        );\n        return ret;\n    }\n\n    function updateRangeUse(dataZoomModel, rawOption) {\n        var rangePropMode = dataZoomModel._rangePropMode;\n        var rangeModeInOption = dataZoomModel.get('rangeMode');\n\n        each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n            var percentSpecified = rawOption[names[0]] != null;\n            var valueSpecified = rawOption[names[1]] != null;\n            if (percentSpecified && !valueSpecified) {\n                rangePropMode[index] = 'percent';\n            }\n            else if (!percentSpecified && valueSpecified) {\n                rangePropMode[index] = 'value';\n            }\n            else if (rangeModeInOption) {\n                rangePropMode[index] = rangeModeInOption[index];\n            }\n            else if (percentSpecified) { // percentSpecified && valueSpecified\n                rangePropMode[index] = 'percent';\n            }\n            // else remain its original setting.\n        });\n    }\n\n    module.exports = DataZoomModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/DataZoomModel.js\n// module id = 1020\n// module chunks = 0 1 2","\n    var formatUtil = require('../../util/format');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single'];\n    // Supported coords.\n    var COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n\n    /**\n     * @param {string} coordType\n     * @return {boolean}\n     */\n    helper.isCoordSupported = function (coordType) {\n        return zrUtil.indexOf(COORDS, coordType) >= 0;\n    };\n\n    /**\n     * Create \"each\" method to iterate names.\n     *\n     * @pubilc\n     * @param  {Array.<string>} names\n     * @param  {Array.<string>=} attrs\n     * @return {Function}\n     */\n    helper.createNameEach = function (names, attrs) {\n        names = names.slice();\n        var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n        attrs = (attrs || []).slice();\n        var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n\n        return function (callback, context) {\n            zrUtil.each(names, function (name, index) {\n                var nameObj = {name: name, capital: capitalNames[index]};\n\n                for (var j = 0; j < attrs.length; j++) {\n                    nameObj[attrs[j]] = name + capitalAttrs[j];\n                }\n\n                callback.call(context, nameObj);\n            });\n        };\n    };\n\n    /**\n     * Iterate each dimension name.\n     *\n     * @public\n     * @param {Function} callback The parameter is like:\n     *                            {\n     *                                name: 'angle',\n     *                                capital: 'Angle',\n     *                                axis: 'angleAxis',\n     *                                axisIndex: 'angleAixs',\n     *                                index: 'angleIndex'\n     *                            }\n     * @param {Object} context\n     */\n    helper.eachAxisDim = helper.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n\n    /**\n     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n     * dataZoomModels and 'links' make up one or more graphics.\n     * This function finds the graphic where the source dataZoomModel is in.\n     *\n     * @public\n     * @param {Function} forEachNode Node iterator.\n     * @param {Function} forEachEdgeType edgeType iterator\n     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n     */\n    helper.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {\n\n        return function (sourceNode) {\n            var result = {\n                nodes: [],\n                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n            };\n\n            forEachEdgeType(function (edgeType) {\n                result.records[edgeType.name] = {};\n            });\n\n            if (!sourceNode) {\n                return result;\n            }\n\n            absorb(sourceNode, result);\n\n            var existsLink;\n            do {\n                existsLink = false;\n                forEachNode(processSingleNode);\n            }\n            while (existsLink);\n\n            function processSingleNode(node) {\n                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n                    absorb(node, result);\n                    existsLink = true;\n                }\n            }\n\n            return result;\n        };\n\n        function isNodeAbsorded(node, result) {\n            return zrUtil.indexOf(result.nodes, node) >= 0;\n        }\n\n        function isLinked(node, result) {\n            var hasLink = false;\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] && (hasLink = true);\n                });\n            });\n            return hasLink;\n        }\n\n        function absorb(node, result) {\n            result.nodes.push(node);\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] = true;\n                });\n            });\n        }\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/helper.js\n// module id = 1021\n// module chunks = 0 1 2","\n\n    var ComponentView = require('../../view/Component');\n\n    module.exports = ComponentView.extend({\n\n        type: 'dataZoom',\n\n        render: function (dataZoomModel, ecModel, api, payload) {\n            this.dataZoomModel = dataZoomModel;\n            this.ecModel = ecModel;\n            this.api = api;\n        },\n\n        /**\n         * Find the first target coordinate system.\n         *\n         * @protected\n         * @return {Object} {\n         *                   grid: [\n         *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n         *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n         *                       ...\n         *                   ],  // cartesians must not be null/undefined.\n         *                   polar: [\n         *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n         *                       ...\n         *                   ],  // polars must not be null/undefined.\n         *                   singleAxis: [\n         *                       {model: coord0, axisModels: [], coordIndex: 0}\n         *                   ]\n         */\n        getTargetCoordInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var ecModel = this.ecModel;\n            var coordSysLists = {};\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n                if (axisModel) {\n                    var coordModel = axisModel.getCoordSysModel();\n                    coordModel && save(\n                        coordModel,\n                        axisModel,\n                        coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []),\n                        coordModel.componentIndex\n                    );\n                }\n            }, this);\n\n            function save(coordModel, axisModel, store, coordIndex) {\n                var item;\n                for (var i = 0; i < store.length; i++) {\n                    if (store[i].model === coordModel) {\n                        item = store[i];\n                        break;\n                    }\n                }\n                if (!item) {\n                    store.push(item = {\n                        model: coordModel, axisModels: [], coordIndex: coordIndex\n                    });\n                }\n                item.axisModels.push(axisModel);\n            }\n\n            return coordSysLists;\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/DataZoomView.js\n// module id = 1022\n// module chunks = 0 1 2","\n\n    var echarts = require('../echarts');\n    var axisPointerModelHelper = require('./axisPointer/modelHelper');\n    var axisTrigger = require('./axisPointer/axisTrigger');\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('./axisPointer/AxisPointerModel');\n    require('./axisPointer/AxisPointerView');\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    require('./axisPointer/CartesianAxisPointer');\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer.js\n// module id = 1023\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var textContain = require('zrender/lib/contain/text');\n    var formatUtil = require('../../util/format');\n    var matrix = require('zrender/lib/core/matrix');\n    var axisHelper = require('../../coord/axisHelper');\n    var AxisBuilder = require('../axis/AxisBuilder');\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = labelModel.getFont();\n        var textRect = textContain.getBoundingRect(text, font);\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            // TODO: rich\n            style: {\n                text: text,\n                textFont: font,\n                textFill: labelModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 1024\n// module chunks = 0 1 2","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {        \n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Transformable.js\n// module id = 1025\n// module chunks = 0 1 2","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/log.js\n// module id = 1026\n// module chunks = 0 1 2","\n\n    var textContain = require('../../contain/text');\n    var util = require('../../core/util');\n    var roundRectHelper = require('./roundRect');\n    var imageHelper = require('./image');\n\n    var retrieve3 = util.retrieve3;\n    var retrieve2 = util.retrieve2;\n\n    // TODO: Have not support 'start', 'end' yet.\n    var VALID_TEXT_ALIGN = {left: 1, right: 1, center: 1};\n    var VALID_TEXT_VERTICAL_ALIGN = {top: 1, bottom: 1, middle: 1};\n\n    var helper = {};\n\n    /**\n     * @param {module:zrender/graphic/Style} style\n     * @return {module:zrender/graphic/Style} The input style.\n     */\n    helper.normalizeTextStyle = function (style) {\n        normalizeStyle(style);\n        util.each(style.rich, normalizeStyle);\n        return style;\n    };\n\n    function normalizeStyle(style) {\n        if (style) {\n\n            style.font = textContain.makeFont(style);\n\n            var textAlign = style.textAlign;\n            textAlign === 'middle' && (textAlign = 'center');\n            style.textAlign = (\n                textAlign == null || VALID_TEXT_ALIGN[textAlign]\n            ) ? textAlign : 'left';\n\n            // Compatible with textBaseline.\n            var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n            textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n            style.textVerticalAlign = (\n                textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign]\n            ) ? textVerticalAlign : 'top';\n\n            var textPadding = style.textPadding;\n            if (textPadding) {\n                style.textPadding = util.normalizeCssArray(style.textPadding);\n            }\n        }\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {string} text\n     * @param {module:zrender/graphic/Style} style\n     * @param {Object|boolean} [rect] {x, y, width, height}\n     *                  If set false, rect text is not used.\n     */\n    helper.renderText = function (hostEl, ctx, text, style, rect) {\n        style.rich\n            ? renderRichText(hostEl, ctx, text, style, rect)\n            : renderPlainText(hostEl, ctx, text, style, rect);\n    };\n\n    function renderPlainText(hostEl, ctx, text, style, rect) {\n        var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n\n        var textPadding = style.textPadding;\n\n        var contentBlock = hostEl.__textCotentBlock;\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(\n                text, font, textPadding, style.truncate\n            );\n        }\n\n        var outerHeight = contentBlock.outerHeight;\n\n        var textLines = contentBlock.lines;\n        var lineHeight = contentBlock.lineHeight;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var textX = baseX;\n        var textY = boxY;\n\n        var needDrawBg = needDrawBackground(style);\n        if (needDrawBg || textPadding) {\n            // Consider performance, do not call getTextWidth util necessary.\n            var textWidth = textContain.getWidth(text, font);\n            var outerWidth = textWidth;\n            textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n            var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n\n            needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n            if (textPadding) {\n                textX = getTextXForPadding(baseX, textAlign, textPadding);\n                textY += textPadding[0];\n            }\n        }\n\n        setCtx(ctx, 'textAlign', textAlign || 'left');\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n        setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0);\n\n        // `textBaseline` is set as 'middle'.\n        textY += lineHeight / 2;\n\n        var textStrokeWidth = style.textStrokeWidth;\n        var textStroke = getStroke(style.textStroke, textStrokeWidth);\n        var textFill = getFill(style.textFill);\n\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textStrokeWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n        }\n\n        for (var i = 0; i < textLines.length; i++) {\n            // Fill after stroke so the outline will not cover the main part.\n            textStroke && ctx.strokeText(textLines[i], textX, textY);\n            textFill && ctx.fillText(textLines[i], textX, textY);\n            textY += lineHeight;\n        }\n    }\n\n    function renderRichText(hostEl, ctx, text, style, rect) {\n        var contentBlock = hostEl.__textCotentBlock;\n\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n        }\n\n        drawRichText(hostEl, ctx, contentBlock, style, rect);\n    }\n\n    function drawRichText(hostEl, ctx, contentBlock, style, rect) {\n        var contentWidth = contentBlock.width;\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n        var textPadding = style.textPadding;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var xLeft = boxX;\n        var lineTop = boxY;\n        if (textPadding) {\n            xLeft += textPadding[3];\n            lineTop += textPadding[0];\n        }\n        var xRight = xLeft + contentWidth;\n\n        needDrawBackground(style) && drawBackground(\n            hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight\n        );\n\n        for (var i = 0; i < contentBlock.lines.length; i++) {\n            var line = contentBlock.lines[i];\n            var tokens = line.tokens;\n            var tokenCount = tokens.length;\n            var lineHeight = line.lineHeight;\n            var usedWidth = line.width;\n\n            var leftIndex = 0;\n            var lineXLeft = xLeft;\n            var lineXRight = xRight;\n            var rightIndex = tokenCount - 1;\n            var token;\n\n            while (\n                leftIndex < tokenCount\n                && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n                usedWidth -= token.width;\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            while (\n                rightIndex >= 0\n                && (token = tokens[rightIndex], token.textAlign === 'right')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n                usedWidth -= token.width;\n                lineXRight -= token.width;\n                rightIndex--;\n            }\n\n            // The other tokens are placed as textAlign 'center' if there is enough space.\n            lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n            while (leftIndex <= rightIndex) {\n                token = tokens[leftIndex];\n                // Consider width specified by user, use 'center' rather than 'left'.\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            lineTop += lineHeight;\n        }\n    }\n\n    function applyTextRotation(ctx, style, rect, x, y) {\n        // textRotation only apply in RectText.\n        if (rect && style.textRotation) {\n            var origin = style.textOrigin;\n            if (origin === 'center') {\n                x = rect.width / 2 + rect.x;\n                y = rect.height / 2 + rect.y;\n            }\n            else if (origin) {\n                x = origin[0] + rect.x;\n                y = origin[1] + rect.y;\n            }\n\n            ctx.translate(x, y);\n            // Positive: anticlockwise\n            ctx.rotate(-style.textRotation);\n            ctx.translate(-x, -y);\n        }\n    }\n\n    function placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n        var tokenStyle = style.rich[token.styleName] || {};\n\n        // 'ctx.textBaseline' is always set as 'middle', for sake of\n        // the bias of \"Microsoft YaHei\".\n        var textVerticalAlign = token.textVerticalAlign;\n        var y = lineTop + lineHeight / 2;\n        if (textVerticalAlign === 'top') {\n            y = lineTop + token.height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y = lineTop + lineHeight - token.height / 2;\n        }\n\n        !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(\n            hostEl,\n            ctx,\n            tokenStyle,\n            textAlign === 'right'\n                ? x - token.width\n                : textAlign === 'center'\n                ? x - token.width / 2\n                : x,\n            y - token.height / 2,\n            token.width,\n            token.height\n        );\n\n        var textPadding = token.textPadding;\n        if (textPadding) {\n            x = getTextXForPadding(x, textAlign, textPadding);\n            y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n        }\n\n        setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n        setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n        setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n\n        setCtx(ctx, 'textAlign', textAlign);\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n\n        var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n        var textFill = getFill(tokenStyle.textFill || style.textFill);\n        var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth);\n\n        // Fill after stroke so the outline will not cover the main part.\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textStrokeWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n            ctx.strokeText(token.text, x, y);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n            ctx.fillText(token.text, x, y);\n        }\n    }\n\n    function needDrawBackground(style) {\n        return style.textBackgroundColor\n            || (style.textBorderWidth && style.textBorderColor);\n    }\n\n    // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n    // shape: {x, y, width, height}\n    function drawBackground(hostEl, ctx, style, x, y, width, height) {\n        var textBackgroundColor = style.textBackgroundColor;\n        var textBorderWidth = style.textBorderWidth;\n        var textBorderColor = style.textBorderColor;\n        var isPlainBg = util.isString(textBackgroundColor);\n\n        setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n        if (isPlainBg || (textBorderWidth && textBorderColor)) {\n            ctx.beginPath();\n            var textBorderRadius = style.textBorderRadius;\n            if (!textBorderRadius) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, {\n                    x: x, y: y, width: width, height: height, r: textBorderRadius\n                });\n            }\n            ctx.closePath();\n        }\n\n        if (isPlainBg) {\n            setCtx(ctx, 'fillStyle', textBackgroundColor);\n            ctx.fill();\n        }\n        else if (util.isObject(textBackgroundColor)) {\n            var image = textBackgroundColor.image;\n\n            image = imageHelper.createOrUpdateImage(\n                image, null, hostEl, onBgImageLoaded, textBackgroundColor\n            );\n            if (image && imageHelper.isImageReady(image)) {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n\n        if (textBorderWidth && textBorderColor) {\n            setCtx(ctx, 'lineWidth', textBorderWidth);\n            setCtx(ctx, 'strokeStyle', textBorderColor);\n            ctx.stroke();\n        }\n    }\n\n    function onBgImageLoaded(image, textBackgroundColor) {\n        // Replace image, so that `contain/text.js#parseRichText`\n        // will get correct result in next tick.\n        textBackgroundColor.image = image;\n    }\n\n    function getBoxPosition(blockHeiht, style, rect) {\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var textAlign = style.textAlign;\n        var textVerticalAlign = style.textVerticalAlign;\n\n        // Text position represented by coord\n        if (rect) {\n            var textPosition = style.textPosition;\n            if (textPosition instanceof Array) {\n                // Percent\n                baseX = rect.x + parsePercent(textPosition[0], rect.width);\n                baseY = rect.y + parsePercent(textPosition[1], rect.height);\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, style.textDistance\n                );\n                baseX = res.x;\n                baseY = res.y;\n                // Default align and baseline when has textPosition\n                textAlign = textAlign || res.textAlign;\n                textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n            }\n\n            // textOffset is only support in RectText, otherwise\n            // we have to adjust boundingRect for textOffset.\n            var textOffset = style.textOffset;\n            if (textOffset) {\n                baseX += textOffset[0];\n                baseY += textOffset[1];\n            }\n        }\n\n        return {\n            baseX: baseX,\n            baseY: baseY,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function setCtx(ctx, prop, value) {\n        // FIXME ??? performance try\n        // if (ctx.__currentValues[prop] !== value) {\n            // ctx[prop] = ctx.__currentValues[prop] = value;\n        ctx[prop] = value;\n        // }\n        return ctx[prop];\n    }\n\n    /**\n     * @param {string} [stroke] If specified, do not check style.textStroke.\n     * @param {string} [lineWidth] If specified, do not check style.textStroke.\n     * @param {number} style\n     */\n    var getStroke = helper.getStroke = function (stroke, lineWidth) {\n        return (stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (stroke.image || stroke.colorStops)\n            ? '#000'\n            : stroke;\n    };\n\n    var getFill = helper.getFill = function (fill) {\n        return (fill == null || fill === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (fill.image || fill.colorStops)\n            ? '#000'\n            : fill;\n    };\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    function getTextXForPadding(x, textAlign, textPadding) {\n        return textAlign === 'right'\n            ? (x - textPadding[1])\n            : textAlign === 'center'\n            ? (x + textPadding[3] / 2 - textPadding[1] / 2)\n            : (x + textPadding[3]);\n    }\n\n    /**\n     * @param {string} text\n     * @param {module:zrender/Style} style\n     * @return {boolean}\n     */\n    helper.needDrawText = function (text, style) {\n        return text != null\n            && (text\n                || style.textBackgroundColor\n                || (style.textBorderWidth && style.textBorderColor)\n                || style.textPadding\n            );\n    };\n\n    module.exports = helper;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/text.js\n// module id = 1027\n// module chunks = 0 1 2","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n    var imageHelper = require('./helper/image');\n\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n\n            var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this);\n\n            if (!image || !imageHelper.isImageReady(image)) {\n                return;\n            }\n\n            // 图片已经加载完成\n            // if (image.nodeName.toUpperCase() == 'IMG') {\n            //     if (!image.complete) {\n            //         return;\n            //     }\n            // }\n            // Else is canvas\n\n            var x = style.x || 0;\n            var y = style.y || 0;\n            var width = style.width;\n            var height = style.height;\n            var aspect = image.width / image.height;\n            if (width == null && height != null) {\n                // Keep image/height ratio\n                width = height * aspect;\n            }\n            else if (height == null && width != null) {\n                height = width / aspect;\n            }\n            else if (width == null && height == null) {\n                width = image.width;\n                height = image.height;\n            }\n\n            // 设置transform\n            this.setTransform(ctx);\n\n            if (style.sWidth && style.sHeight) {\n                var sx = style.sx || 0;\n                var sy = style.sy || 0;\n                ctx.drawImage(\n                    image,\n                    sx, sy, style.sWidth, style.sHeight,\n                    x, y, width, height\n                );\n            }\n            else if (style.sx && style.sy) {\n                var sx = style.sx;\n                var sy = style.sy;\n                var sWidth = width - sx;\n                var sHeight = height - sy;\n                ctx.drawImage(\n                    image,\n                    sx, sy, sWidth, sHeight,\n                    x, y, width, height\n                );\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Image.js\n// module id = 1028\n// module chunks = 0 1 2","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/view/Component.js\n// module id = 1029\n// module chunks = 0 1 2","\n\n    /**\n     * Calculate slider move result.\n     * Usage:\n     * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n     * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n     * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n     *\n     * @param {number} delta Move length.\n     * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n     *              handleEnds will be modified in this method.\n     * @param {Array.<number>} extent handleEnds is restricted by extent.\n     *              extent[0] should less or equals than extent[1].\n     * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n     *              where the input minSpan and maxSpan will not work.\n     * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n     *              If not set, handle0 and cross handle1. If set as a non-negative\n     *              number (including `0`), handles will push each other when reaching\n     *              the minSpan.\n     * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n     * @return {Array.<number>} The input handleEnds.\n     */\n    module.exports = function (delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n        // Normalize firstly.\n        handleEnds[0] = restrict(handleEnds[0], extent);\n        handleEnds[1] = restrict(handleEnds[1], extent);\n\n        delta = delta || 0;\n\n        var extentSpan = extent[1] - extent[0];\n\n        // Notice maxSpan and minSpan can be null/undefined.\n        if (minSpan != null) {\n            minSpan = restrict(minSpan, [0, extentSpan]);\n        }\n        if (maxSpan != null) {\n            maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n        }\n        if (handleIndex === 'all') {\n            minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n            handleIndex = 0;\n        }\n\n        var originalDistSign = getSpanSign(handleEnds, handleIndex);\n\n        handleEnds[handleIndex] += delta;\n\n        // Restrict in extent.\n        var extentMinSpan = minSpan || 0;\n        var realExtent = extent.slice();\n        originalDistSign.sign < 0 ? (realExtent[0] += extentMinSpan) : (realExtent[1] -= extentMinSpan);\n        handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent);\n\n        // Expand span.\n        var currDistSign = getSpanSign(handleEnds, handleIndex);\n        if (minSpan != null && (\n            currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan\n        )) {\n            // If minSpan exists, 'cross' is forbinden.\n            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n        }\n\n        // Shrink span.\n        var currDistSign = getSpanSign(handleEnds, handleIndex);\n        if (maxSpan != null && currDistSign.span > maxSpan) {\n            handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n        }\n\n        return handleEnds;\n    };\n\n    function getSpanSign(handleEnds, handleIndex) {\n        var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex];\n        // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n        // is at left of handleEnds[1] for non-cross case.\n        return {span: Math.abs(dist), sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1};\n    }\n\n    function restrict(value, extend) {\n        return Math.min(extend[1], Math.max(extend[0], value));\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/sliderMove.js\n// module id = 1030\n// module chunks = 0 1 2","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/LRU.js\n// module id = 1031\n// module chunks = 0 1 2","/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts, host) {\n        this.extendFrom(opts, false);\n        this.host = host;\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {module:zrender/graphic/Displayable}\n         */\n        host: null,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * If `fontSize` or `fontFamily` exists, `font` will be reset by\n         * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n         * So do not visit it directly in upper application (like echarts),\n         * but use `contain/text#makeFont` instead.\n         * @type {string}\n         */\n        font: null,\n\n        /**\n         * The same as font. Use font please.\n         * @deprecated\n         * @type {string}\n         */\n        textFont: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontStyle: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontWeight: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * Should be 12 but not '12px'.\n         * @type {number}\n         */\n        fontSize: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontFamily: null,\n\n        /**\n         * Reserved for special functinality, like 'hr'.\n         * @type {string}\n         */\n        textTag: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * @type {number}\n         */\n        textWidth: null,\n\n        /**\n         * Only for textBackground.\n         * @type {number}\n         */\n        textHeight: null,\n\n        /**\n         * textStroke may be set as some color as a default\n         * value in upper applicaion, where the default value\n         * of textStrokeWidth should be 0 to make sure that\n         * user can choose to do not use text stroke.\n         * @type {number}\n         */\n        textStrokeWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textLineHeight: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * Based on x, y of rect.\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * @type {string}\n         */\n        textShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * @type {string}\n         */\n        textBoxShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetY: 0,\n\n        /**\n         * Whether transform text.\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        transformText: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and transformText is false.\n         */\n        textRotation: 0,\n\n        /**\n         * Text origin of text rotation, like [10, 40].\n         * Based on x, y of rect.\n         * Useful in label rotation of circular symbol.\n         * By default, this origin is textPosition.\n         * Can be 'center'.\n         * @type {string|Array.<number>}\n         */\n        textOrigin: null,\n\n        /**\n         * @type {string}\n         */\n        textBackgroundColor: null,\n\n        /**\n         * @type {string}\n         */\n        textBorderColor: null,\n\n        /**\n         * @type {number}\n         */\n        textBorderWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textBorderRadius: 0,\n\n        /**\n         * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n         * @type {number|Array.<number>}\n         */\n        textPadding: null,\n\n        /**\n         * Text styles for rich text.\n         * @type {Object}\n         */\n        rich: null,\n\n        /**\n         * {outerWidth, outerHeight, ellipsis, placeholder}\n         * @type {Object}\n         */\n        truncate: null,\n\n        /**\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         * @type {string}\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite true: overwrirte any way.\n         *                            false: overwrite only when !target.hasOwnProperty\n         *                            others: overwrite when property is not null/undefined.\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite === true\n                            || (\n                                overwrite === false\n                                    ? !this.hasOwnProperty(name)\n                                    : otherStyle[name] != null\n                            )\n                        )\n                    ) {\n                        this[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Style.js\n// module id = 1032\n// module chunks = 0 1 2","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Element.js\n// module id = 1033\n// module chunks = 0 1 2","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/guid.js\n// module id = 1034\n// module chunks = 0 1 2","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (!forceAnimate && isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} [easing]\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @param  {boolean} forceAnimate\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing, forceAnimate) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName, forceAnimate\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            // This optimization will help the case that in the upper application\n            // the view may be refreshed frequently, where animation will be\n            // called repeatly but nothing changed.\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Animator.js\n// module id = 1035\n// module chunks = 0 1 2","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/roundRect.js\n// module id = 1036\n// module chunks = 0 1 2","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/util.js\n// module id = 1037\n// module chunks = 0 1 2","\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Pattern.js\n// module id = 1038\n// module chunks = 0 1 2","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/poly.js\n// module id = 1039\n// module chunks = 0 1 2","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/colorPalette.js\n// module id = 1040\n// module chunks = 0 1 2","\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/requestAnimationFrame.js\n// module id = 1041\n// module chunks = 0 1 2","/**\n * For testable.\n */\n\n\n    var numberUtil = require('../util/number');\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @param {number} [maxInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval, maxInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        if (maxInterval != null && interval > maxInterval) {\n            interval = result.interval = maxInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/helper.js\n// module id = 1042\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 1043\n// module chunks = 0 1 2","\n\n    var env = require('zrender/lib/core/env');\n    var zrUtil = require('zrender/lib/core/util');\n    var get = require('../../util/model').makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/globalListener.js\n// module id = 1044\n// module chunks = 0 1 2","\n    // List layout\n    var layout = require('../../util/layout');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var boxLayoutParams = componentModel.getBoxLayoutParams();\n            var padding = componentModel.get('padding');\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n\n            var rect = layout.getLayoutRect(\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            layout.positionElement(\n                group,\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n        },\n\n        makeBackground: function (rect, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: rect.x - padding[3],\n                    y: rect.y - padding[0],\n                    width: rect.width + padding[1] + padding[3],\n                    height: rect.height + padding[0] + padding[2],\n                    r: componentModel.get('borderRadius')\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            // FIXME\n            // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n            // and background rect when setting like `left: 0`, `top: 0`.\n            // graphic.subPixelOptimizeRect(rect);\n\n            return rect;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/listComponent.js\n// module id = 1045\n// module chunks = 0 1 2","/**\n * @file History manager.\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n\n    var ATTR = '\\0_ec_hist_store';\n\n    var history = {\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n         */\n        push: function (ecModel, newSnapshot) {\n            var store = giveStore(ecModel);\n\n            // If previous dataZoom can not be found,\n            // complete an range with current range.\n            each(newSnapshot, function (batchItem, dataZoomId) {\n                var i = store.length - 1;\n                for (; i >= 0; i--) {\n                    var snapshot = store[i];\n                    if (snapshot[dataZoomId]) {\n                        break;\n                    }\n                }\n                if (i < 0) {\n                    // No origin range set, create one by current range.\n                    var dataZoomModel = ecModel.queryComponents(\n                        {mainType: 'dataZoom', subType: 'select', id: dataZoomId}\n                    )[0];\n                    if (dataZoomModel) {\n                        var percentRange = dataZoomModel.getPercentRange();\n                        store[0][dataZoomId] = {\n                            dataZoomId: dataZoomId,\n                            start: percentRange[0],\n                            end: percentRange[1]\n                        };\n                    }\n                }\n            });\n\n            store.push(newSnapshot);\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object} snapshot\n         */\n        pop: function (ecModel) {\n            var store = giveStore(ecModel);\n            var head = store[store.length - 1];\n            store.length > 1 && store.pop();\n\n            // Find top for all dataZoom.\n            var snapshot = {};\n            each(head, function (batchItem, dataZoomId) {\n                for (var i = store.length - 1; i >= 0; i--) {\n                    var batchItem = store[i][dataZoomId];\n                    if (batchItem) {\n                        snapshot[dataZoomId] = batchItem;\n                        break;\n                    }\n                }\n            });\n\n            return snapshot;\n        },\n\n        /**\n         * @public\n         */\n        clear: function (ecModel) {\n            ecModel[ATTR] = null;\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {number} records. always >= 1.\n         */\n        count: function (ecModel) {\n            return giveStore(ecModel).length;\n        }\n\n    };\n\n    /**\n     * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n     * History length of each dataZoom may be different.\n     * this._history[0] is used to store origin range.\n     * @type {Array.<Object>}\n     */\n    function giveStore(ecModel) {\n        var store = ecModel[ATTR];\n        if (!store) {\n            store = ecModel[ATTR] = [{}];\n        }\n        return store;\n    }\n\n    module.exports = history;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/history.js\n// module id = 1046\n// module chunks = 0 1 2","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/bbox.js\n// module id = 1049\n// module chunks = 0 1 2","\n\n    var env = require('../../core/env');\n\n    // Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n    // where exception \"unexpected call to method or property access\"\n    // might be thrown when calling ctx.fill or ctx.stroke after a path\n    // whose area size is zero is drawn and ctx.clip() is called and\n    // shadowBlur is set. See #4572, #3112, #5777.\n    // (e.g.,\n    //  ctx.moveTo(10, 10);\n    //  ctx.lineTo(20, 10);\n    //  ctx.closePath();\n    //  ctx.clip();\n    //  ctx.shadowBlur = 10;\n    //  ...\n    //  ctx.fill();\n    // )\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = function (orignalBrush) {\n\n        // version string can be: '11.0'\n        return (env.browser.ie && env.browser.version >= 11)\n\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var clipPath = clipPaths[i];\n                        var shape = clipPath && clipPath.shape;\n                        var type = clipPath && clipPath.type;\n\n                        if (shape && (\n                            (type === 'sector' && shape.startAngle === shape.endAngle)\n                            || (type === 'rect' && (!shape.width || !shape.height))\n                        )) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                // It is save to put shadowTemp static, because shadowTemp\n                                // will be all modified each item brush called.\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                orignalBrush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n\n            : orignalBrush;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 1050\n// module chunks = 0 1 2","'use strict';\n\n\n    var graphic = require('../../util/graphic');\n    var BaseAxisPointer = require('./BaseAxisPointer');\n    var viewHelper = require('./viewHelper');\n    var cartesianAxisHelper = require('../axis/cartesianAxisHelper');\n    var AxisView = require('../axis/AxisView');\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 1051\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../../util/clazz');\n    var graphic = require('../../util/graphic');\n    var get = require('../../util/model').makeGetter();\n    var axisPointerModelHelper = require('./modelHelper');\n    var eventTool = require('zrender/lib/core/event');\n    var throttle = require('../../util/throttle');\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = graphic.createIcon(\n                    handleModel.get('icon'), \n                    {\n                        cursor: 'move',\n                        draggable: true,\n                        onmousemove: function (e) {\n                            // Fot mobile devicem, prevent screen slider on the button.\n                            eventTool.stop(e.event);\n                        },\n                        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                        drift: bind(this._onHandleDragMove, this),\n                        ondragend: bind(this._onHandleDragEnd, this)\n                    }\n                );\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals = equals && propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 1052\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n        var idx = {left: 0, right: 1, top: 0, bottom: 1, onZero: 2};\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posBound = axisDim === 'x'\n            ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset]\n            : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n        if (axis.onZero) {\n            var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n            var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n            posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0],\n            axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 1053\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n\n    var LegendModel = require('../../echarts').extendComponentModel({\n\n        type: 'legend.plain',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            // legend.width/height are maxWidth/maxHeight actually,\n            // whereas realy width/height is calculated by its content.\n            // (Setting {left: 10, right: 10} does not make sense).\n            // So consider the case:\n            // `setOption({legend: {left: 10});`\n            // then `setOption({legend: {right: 10});`\n            // The previous `left` should be cleared by setting `ignoreSize`.\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 0,\n            // bottom: null,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            borderRadius: 0,\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 1054\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolCreator = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var listComponentHelper = require('../helper/listComponent');\n    var layoutUtil = require('../../util/layout');\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var Group = graphic.Group;\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'legend.plain',\n\n        newlineDisabled: false,\n\n        /**\n         * @override\n         */\n        init: function () {\n\n            /**\n             * @private\n             * @type {module:zrender/container/Group}\n             */\n            this.group.add(this._contentGroup = new Group());\n\n            /**\n             * @private\n             * @type {module:zrender/Element}\n             */\n            this._backgroundEl;\n        },\n\n        /**\n         * @protected\n         */\n        getContentGroup: function () {\n            return this._contentGroup;\n        },\n\n        /**\n         * @override\n         */\n        render: function (legendModel, ecModel, api) {\n\n            this.resetInner();\n\n            if (!legendModel.get('show', true)) {\n                return;\n            }\n\n            var itemAlign = legendModel.get('align');\n            if (!itemAlign || itemAlign === 'auto') {\n                itemAlign = (\n                    legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical'\n                ) ? 'right' : 'left';\n            }\n\n            this.renderInner(itemAlign, legendModel, ecModel, api);\n\n            // Perform layout.\n            var positionInfo = legendModel.getBoxLayoutParams();\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n            var padding = legendModel.get('padding');\n\n            var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n            var mainRect = this.layoutInner(legendModel, itemAlign, maxSize);\n\n            // Place mainGroup, based on the calculated `mainRect`.\n            var layoutRect = layoutUtil.getLayoutRect(\n                zrUtil.defaults({width: mainRect.width, height: mainRect.height}, positionInfo),\n                viewportSize,\n                padding\n            );\n            this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]);\n\n            // Render background after group is layout.\n            this.group.add(\n                this._backgroundEl = listComponentHelper.makeBackground(mainRect, legendModel)\n            );\n        },\n\n        /**\n         * @protected\n         */\n        resetInner: function () {\n            this.getContentGroup().removeAll();\n            this._backgroundEl && this.group.remove(this._backgroundEl);\n        },\n\n        /**\n         * @protected\n         */\n        renderInner: function (itemAlign, legendModel, ecModel, api) {\n            var contentGroup = this.getContentGroup();\n            var legendDrawnMap = zrUtil.createHashMap();\n            var selectMode = legendModel.get('selectedMode');\n\n            each(legendModel.getData(), function (itemModel, dataIndex) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n                    contentGroup.add(new Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawnMap.get(name)) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, dataIndex, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawnMap.set(name, true);\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawnMap.get(name)) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, dataIndex, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawnMap.set(name, true);\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawnMap.get(name)) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n        },\n\n        _createItem: function (\n            name, dataIndex, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            itemGroup.add(new graphic.Text({\n                style: graphic.setTextStyle({}, textStyleModel, {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                })\n            }));\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n            this.getContentGroup().add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            itemGroup.__legendDataIndex = dataIndex;\n\n            return itemGroup;\n        },\n\n        /**\n         * @protected\n         */\n        layoutInner: function (legendModel, itemAlign, maxSize) {\n            var contentGroup = this.getContentGroup();\n\n            // Place items in contentGroup.\n            layoutUtil.box(\n                legendModel.get('orient'),\n                contentGroup,\n                legendModel.get('itemGap'),\n                maxSize.width,\n                maxSize.height\n            );\n\n            var contentRect = contentGroup.getBoundingRect();\n            contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n\n            return this.group.getBoundingRect();\n        }\n\n    });\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 1055\n// module chunks = 0 1 2","/**\n * Box selection tool.\n *\n * @module echarts/component/helper/BrushController\n */\n\n\n\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var interactionMutex = require('./interactionMutex');\n    var DataDiffer = require('../../data/DataDiffer');\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var map = zrUtil.map;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathPow = Math.pow;\n\n    var COVER_Z = 10000;\n    var UNSELECT_THRESHOLD = 6;\n    var MIN_RESIZE_LINE_WIDTH = 6;\n    var MUTEX_RESOURCE_KEY = 'globalPan';\n\n    var DIRECTION_MAP = {\n        w: [0, 0],\n        e: [0, 1],\n        n: [1, 0],\n        s: [1, 1]\n    };\n    var CURSOR_MAP = {\n        w: 'ew',\n        e: 'ew',\n        n: 'ns',\n        s: 'ns',\n        ne: 'nesw',\n        sw: 'nesw',\n        nw: 'nwse',\n        se: 'nwse'\n    };\n    var DEFAULT_BRUSH_OPT = {\n        brushStyle: {\n            lineWidth: 2,\n            stroke: 'rgba(0,0,0,0.3)',\n            fill: 'rgba(0,0,0,0.1)'\n        },\n        transformable: true,\n        brushMode: 'single',\n        removeOnClick: false\n    };\n\n    var baseUID = 0;\n\n    /**\n     * @alias module:echarts/component/helper/BrushController\n     * @constructor\n     * @mixin {module:zrender/mixin/Eventful}\n     * @event module:echarts/component/helper/BrushController#brush\n     *        params:\n     *            areas: Array.<Array>, coord relates to container group,\n     *                                    If no container specified, to global.\n     *            opt {\n     *                isEnd: boolean,\n     *                removeOnClick: boolean\n     *            }\n     *\n     * @param {module:zrender/zrender~ZRender} zr\n     */\n    function BrushController(zr) {\n\n        if (__DEV__) {\n            zrUtil.assert(zr);\n        }\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:zrender/zrender~ZRender}\n         * @private\n         */\n        this._zr = zr;\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *     'line', 'rect', 'polygon' or false\n         *     If passing false/null/undefined, disable brush.\n         *     If passing 'auto', determined by panel.defaultBrushType\n         * @private\n         * @type {string}\n         */\n        this._brushType;\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *\n         * @private\n         * @type {Object}\n         */\n        this._brushOption;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._panels;\n\n        /**\n         * @private\n         * @type {Array.<nubmer>}\n         */\n        this._track = [];\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._dragging;\n\n        /**\n         * @private\n         * @type {Array}\n         */\n        this._covers = [];\n\n        /**\n         * @private\n         * @type {moudule:zrender/container/Group}\n         */\n        this._creatingCover;\n\n        /**\n         * `true` means global panel\n         * @private\n         * @type {module:zrender/container/Group|boolean}\n         */\n        this._creatingPanel;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._enableGlobalPan;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        if (__DEV__) {\n            this._mounted;\n        }\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._uid = 'brushController_' + baseUID++;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._handlers = {};\n        each(mouseHandlers, function (handler, eventName) {\n            this._handlers[eventName] = zrUtil.bind(handler, this);\n        }, this);\n    }\n\n    BrushController.prototype = {\n\n        constructor: BrushController,\n\n        /**\n         * If set to null/undefined/false, select disabled.\n         * @param {Object} brushOption\n         * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n         *                          If passing false/null/undefined, disable brush.\n         *                          If passing 'auto', determined by panel.defaultBrushType.\n         *                              ('auto' can not be used in global panel)\n         * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n         * @param {boolean} [brushOption.transformable=true]\n         * @param {boolean} [brushOption.removeOnClick=false]\n         * @param {Object} [brushOption.brushStyle]\n         * @param {number} [brushOption.brushStyle.width]\n         * @param {number} [brushOption.brushStyle.lineWidth]\n         * @param {string} [brushOption.brushStyle.stroke]\n         * @param {string} [brushOption.brushStyle.fill]\n         * @param {number} [brushOption.z]\n         */\n        enableBrush: function (brushOption) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            this._brushType && doDisableBrush(this);\n            brushOption.brushType && doEnableBrush(this, brushOption);\n\n            return this;\n        },\n\n        /**\n         * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n         *        Each items: {\n         *            panelId, // mandatory.\n         *            clipPath, // mandatory. function.\n         *            isTargetByCursor, // mandatory. function.\n         *            defaultBrushType, // optional, only used when brushType is 'auto'.\n         *            getLinearBrushOtherExtent, // optional. function.\n         *        }\n         */\n        setPanels: function (panelOpts) {\n            if (panelOpts && panelOpts.length) {\n                var panels = this._panels = {};\n                zrUtil.each(panelOpts, function (panelOpts) {\n                    panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n                });\n            }\n            else {\n                this._panels = null;\n            }\n            return this;\n        },\n\n        /**\n         * @param {Object} [opt]\n         * @return {boolean} [opt.enableGlobalPan=false]\n         */\n        mount: function (opt) {\n            opt = opt || {};\n\n            if (__DEV__) {\n                this._mounted = true; // should be at first.\n            }\n\n            this._enableGlobalPan = opt.enableGlobalPan;\n\n            var thisGroup = this.group;\n            this._zr.add(thisGroup);\n\n            thisGroup.attr({\n                position: opt.position || [0, 0],\n                rotation: opt.rotation || 0,\n                scale: opt.scale || [1, 1]\n            });\n            this._transform = thisGroup.getLocalTransform();\n\n            return this;\n        },\n\n        eachCover: function (cb, context) {\n            each(this._covers, cb, context);\n        },\n\n        /**\n         * Update covers.\n         * @param {Array.<Object>} brushOptionList Like:\n         *        [\n         *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n         *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n         *            ...\n         *        ]\n         *        `brushType` is required in each cover info. (can not be 'auto')\n         *        `id` is not mandatory.\n         *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n         *        If brushOptionList is null/undefined, all covers removed.\n         */\n        updateCovers: function (brushOptionList) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n                return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n            });\n\n            var tmpIdPrefix = '\\0-brush-index-';\n            var oldCovers = this._covers;\n            var newCovers = this._covers = [];\n            var controller = this;\n            var creatingCover = this._creatingCover;\n\n            (new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey))\n                .add(addOrUpdate)\n                .update(addOrUpdate)\n                .remove(remove)\n                .execute();\n\n            return this;\n\n            function getKey(brushOption, index) {\n                return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index)\n                    + '-' + brushOption.brushType;\n            }\n\n            function oldGetKey(cover, index) {\n                return getKey(cover.__brushOption, index);\n            }\n\n            function addOrUpdate(newIndex, oldIndex) {\n                var newBrushOption = brushOptionList[newIndex];\n                // Consider setOption in event listener of brushSelect,\n                // where updating cover when creating should be forbiden.\n                if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n                    newCovers[newIndex] = oldCovers[oldIndex];\n                }\n                else {\n                    var cover = newCovers[newIndex] = oldIndex != null\n                        ? (\n                            oldCovers[oldIndex].__brushOption = newBrushOption,\n                            oldCovers[oldIndex]\n                        )\n                        : endCreating(controller, createCover(controller, newBrushOption));\n                    updateCoverAfterCreation(controller, cover);\n                }\n            }\n\n            function remove(oldIndex) {\n                if (oldCovers[oldIndex] !== creatingCover) {\n                    controller.group.remove(oldCovers[oldIndex]);\n                }\n            }\n        },\n\n        unmount: function () {\n            if (__DEV__) {\n                if (!this._mounted) {\n                    return;\n                }\n            }\n\n            this.enableBrush(false);\n\n            // container may 'removeAll' outside.\n            clearCovers(this);\n            this._zr.remove(this.group);\n\n            if (__DEV__) {\n                this._mounted = false; // should be at last.\n            }\n\n            return this;\n        },\n\n        dispose: function () {\n            this.unmount();\n            this.off();\n        }\n    };\n\n    zrUtil.mixin(BrushController, Eventful);\n\n    function doEnableBrush(controller, brushOption) {\n        var zr = controller._zr;\n\n        // Consider roam, which takes globalPan too.\n        if (!controller._enableGlobalPan) {\n            interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n        }\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.on(eventName, handler);\n        });\n\n        controller._brushType = brushOption.brushType;\n        controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    }\n\n    function doDisableBrush(controller) {\n        var zr = controller._zr;\n\n        interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.off(eventName, handler);\n        });\n\n        controller._brushType = controller._brushOption = null;\n    }\n\n    function createCover(controller, brushOption) {\n        var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n        cover.__brushOption = brushOption;\n        updateZ(cover, brushOption);\n        controller.group.add(cover);\n        return cover;\n    }\n\n    function endCreating(controller, creatingCover) {\n        var coverRenderer = getCoverRenderer(creatingCover);\n        if (coverRenderer.endCreating) {\n            coverRenderer.endCreating(controller, creatingCover);\n            updateZ(creatingCover, creatingCover.__brushOption);\n        }\n        return creatingCover;\n    }\n\n    function updateCoverShape(controller, cover) {\n        var brushOption = cover.__brushOption;\n        getCoverRenderer(cover).updateCoverShape(\n            controller, cover, brushOption.range, brushOption\n        );\n    }\n\n    function updateZ(cover, brushOption) {\n        var z = brushOption.z;\n        z == null && (z = COVER_Z);\n        cover.traverse(function (el) {\n            el.z = z;\n            el.z2 = z; // Consider in given container.\n        });\n    }\n\n    function updateCoverAfterCreation(controller, cover) {\n        getCoverRenderer(cover).updateCommon(controller, cover);\n        updateCoverShape(controller, cover);\n    }\n\n    function getCoverRenderer(cover) {\n        return coverRenderers[cover.__brushOption.brushType];\n    }\n\n    // return target panel or `true` (means global panel)\n    function getPanelByPoint(controller, e, localCursorPoint) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panel;\n        var transform = controller._transform;\n        each(panels, function (pn) {\n            pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n        });\n        return panel;\n    }\n\n    // Return a panel or true\n    function getPanelByCover(controller, cover) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panelId = cover.__brushOption.panelId;\n        // User may give cover without coord sys info,\n        // which is then treated as global panel.\n        return panelId != null ? panels[panelId] : true;\n    }\n\n    function clearCovers(controller) {\n        var covers = controller._covers;\n        var originalLength = covers.length;\n        each(covers, function (cover) {\n            controller.group.remove(cover);\n        }, controller);\n        covers.length = 0;\n\n        return !!originalLength;\n    }\n\n    function trigger(controller, opt) {\n        var areas = map(controller._covers, function (cover) {\n            var brushOption = cover.__brushOption;\n            var range = zrUtil.clone(brushOption.range);\n            return {\n                brushType: brushOption.brushType,\n                panelId: brushOption.panelId,\n                range: range\n            };\n        });\n\n        controller.trigger('brush', areas, {\n            isEnd: !!opt.isEnd,\n            removeOnClick: !!opt.removeOnClick\n        });\n    }\n\n    function shouldShowCover(controller) {\n        var track = controller._track;\n\n        if (!track.length) {\n            return false;\n        }\n\n        var p2 = track[track.length - 1];\n        var p1 = track[0];\n        var dx = p2[0] - p1[0];\n        var dy = p2[1] - p1[1];\n        var dist = mathPow(dx * dx + dy * dy, 0.5);\n\n        return dist > UNSELECT_THRESHOLD;\n    }\n\n    function getTrackEnds(track) {\n        var tail = track.length - 1;\n        tail < 0 && (tail = 0);\n        return [track[0], track[tail]];\n    }\n\n    function createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n        var cover = new graphic.Group();\n\n        cover.add(new graphic.Rect({\n            name: 'main',\n            style: makeStyle(brushOption),\n            silent: true,\n            draggable: true,\n            cursor: 'move',\n            drift: curry(doDrift, controller, cover, 'nswe'),\n            ondragend: curry(trigger, controller, {isEnd: true})\n        }));\n\n        each(\n            edgeNames,\n            function (name) {\n                cover.add(new graphic.Rect({\n                    name: name,\n                    style: {opacity: 0},\n                    draggable: true,\n                    silent: true,\n                    invisible: true,\n                    drift: curry(doDrift, controller, cover, name),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            }\n        );\n\n        return cover;\n    }\n\n    function updateBaseRect(controller, cover, localRange, brushOption) {\n        var lineWidth = brushOption.brushStyle.lineWidth || 0;\n        var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n        var x = localRange[0][0];\n        var y = localRange[1][0];\n        var xa = x - lineWidth / 2;\n        var ya = y - lineWidth / 2;\n        var x2 = localRange[0][1];\n        var y2 = localRange[1][1];\n        var x2a = x2 - handleSize + lineWidth / 2;\n        var y2a = y2 - handleSize + lineWidth / 2;\n        var width = x2 - x;\n        var height = y2 - y;\n        var widtha = width + lineWidth;\n        var heighta = height + lineWidth;\n\n        updateRectShape(controller, cover, 'main', x, y, width, height);\n\n        if (brushOption.transformable) {\n            updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n            updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n\n            updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n            updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n        }\n    }\n\n    function updateCommon(controller, cover) {\n        var brushOption = cover.__brushOption;\n        var transformable = brushOption.transformable;\n\n        var mainEl = cover.childAt(0);\n        mainEl.useStyle(makeStyle(brushOption));\n        mainEl.attr({\n            silent: !transformable,\n            cursor: transformable ? 'move' : 'default'\n        });\n\n        each(\n            ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'],\n            function (name) {\n                var el = cover.childOfName(name);\n                var globalDir = getGlobalDirection(controller, name);\n\n                el && el.attr({\n                    silent: !transformable,\n                    invisible: !transformable,\n                    cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n                });\n            }\n        );\n    }\n\n    function updateRectShape(controller, cover, name, x, y, w, h) {\n        var el = cover.childOfName(name);\n        el && el.setShape(pointsToRect(\n            clipByPanel(controller, cover, [[x, y], [x + w, y + h]])\n        ));\n    }\n\n    function makeStyle(brushOption) {\n        return zrUtil.defaults({strokeNoScale: true}, brushOption.brushStyle);\n    }\n\n    function formatRectRange(x, y, x2, y2) {\n        var min = [mathMin(x, x2), mathMin(y, y2)];\n        var max = [mathMax(x, x2), mathMax(y, y2)];\n\n        return [\n            [min[0], max[0]], // x range\n            [min[1], max[1]] // y range\n        ];\n    }\n\n    function getTransform(controller) {\n        return graphic.getTransform(controller.group);\n    }\n\n    function getGlobalDirection(controller, localDirection) {\n        if (localDirection.length > 1) {\n            localDirection = localDirection.split('');\n            var globalDir = [\n                getGlobalDirection(controller, localDirection[0]),\n                getGlobalDirection(controller, localDirection[1])\n            ];\n            (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n            return globalDir.join('');\n        }\n        else {\n            var map = {w: 'left', e: 'right', n: 'top', s: 'bottom'};\n            var inverseMap = {left: 'w', right: 'e', top: 'n', bottom: 's'};\n            var globalDir = graphic.transformDirection(\n                map[localDirection], getTransform(controller)\n            );\n            return inverseMap[globalDir];\n        }\n    }\n\n    function driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n        var brushOption = cover.__brushOption;\n        var rectRange = toRectRange(brushOption.range);\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(name.split(''), function (namePart) {\n            var ind = DIRECTION_MAP[namePart];\n            rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n        });\n\n        brushOption.range = fromRectRange(formatRectRange(\n            rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]\n        ));\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function driftPolygon(controller, cover, dx, dy, e) {\n        var range = cover.__brushOption.range;\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(range, function (point) {\n            point[0] += localDelta[0];\n            point[1] += localDelta[1];\n        });\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function toLocalDelta(controller, dx, dy) {\n        var thisGroup = controller.group;\n        var localD = thisGroup.transformCoordToLocal(dx, dy);\n        var localZero = thisGroup.transformCoordToLocal(0, 0);\n\n        return [localD[0] - localZero[0], localD[1] - localZero[1]];\n    }\n\n    function clipByPanel(controller, cover, data) {\n        var panel = getPanelByCover(controller, cover);\n\n        return (panel && panel !== true)\n            ? panel.clipPath(data, controller._transform)\n            : zrUtil.clone(data);\n    }\n\n    function pointsToRect(points) {\n        var xmin = mathMin(points[0][0], points[1][0]);\n        var ymin = mathMin(points[0][1], points[1][1]);\n        var xmax = mathMax(points[0][0], points[1][0]);\n        var ymax = mathMax(points[0][1], points[1][1]);\n\n        return {\n            x: xmin,\n            y: ymin,\n            width: xmax - xmin,\n            height: ymax - ymin\n        };\n    }\n\n    function resetCursor(controller, e, localCursorPoint) {\n        // Check active\n        if (!controller._brushType) {\n            return;\n        }\n\n        var zr = controller._zr;\n        var covers = controller._covers;\n        var currPanel = getPanelByPoint(controller, e, localCursorPoint);\n\n        // Check whether in covers.\n        if (!controller._dragging) {\n            for (var i = 0; i < covers.length; i++) {\n                var brushOption = covers[i].__brushOption;\n                if (currPanel\n                    && (currPanel === true || brushOption.panelId === currPanel.panelId)\n                    && coverRenderers[brushOption.brushType].contain(\n                        covers[i], localCursorPoint[0], localCursorPoint[1]\n                    )\n                ) {\n                    // Use cursor style set on cover.\n                    return;\n                }\n            }\n        }\n\n        currPanel && zr.setCursorStyle('crosshair');\n    }\n\n    function preventDefault(e) {\n        var rawE = e.event;\n        rawE.preventDefault && rawE.preventDefault();\n    }\n\n    function mainShapeContain(cover, x, y) {\n        return cover.childOfName('main').contain(x, y);\n    }\n\n    function updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n        var creatingCover = controller._creatingCover;\n        var panel = controller._creatingPanel;\n        var thisBrushOption = controller._brushOption;\n        var eventParams;\n\n        controller._track.push(localCursorPoint.slice());\n\n        if (shouldShowCover(controller) || creatingCover) {\n\n            if (panel && !creatingCover) {\n                thisBrushOption.brushMode === 'single' && clearCovers(controller);\n                var brushOption = zrUtil.clone(thisBrushOption);\n                brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n                brushOption.panelId = panel === true ? null : panel.panelId;\n                creatingCover = controller._creatingCover = createCover(controller, brushOption);\n                controller._covers.push(creatingCover);\n            }\n\n            if (creatingCover) {\n                var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n                var coverBrushOption = creatingCover.__brushOption;\n\n                coverBrushOption.range = coverRenderer.getCreatingRange(\n                    clipByPanel(controller, creatingCover, controller._track)\n                );\n\n                if (isEnd) {\n                    endCreating(controller, creatingCover);\n                    coverRenderer.updateCommon(controller, creatingCover);\n                }\n\n                updateCoverShape(controller, creatingCover);\n\n                eventParams = {isEnd: isEnd};\n            }\n        }\n        else if (\n            isEnd\n            && thisBrushOption.brushMode === 'single'\n            && thisBrushOption.removeOnClick\n        ) {\n            // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n            // But a single click do not clear covers, because user may have casual\n            // clicks (for example, click on other component and do not expect covers\n            // disappear).\n            // Only some cover removed, trigger action, but not every click trigger action.\n            if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n                eventParams = {isEnd: isEnd, removeOnClick: true};\n            }\n        }\n\n        return eventParams;\n    }\n\n    function determineBrushType(brushType, panel) {\n        if (brushType === 'auto') {\n            if (__DEV__) {\n                zrUtil.assert(\n                    panel && panel.defaultBrushType,\n                    'MUST have defaultBrushType when brushType is \"atuo\"'\n                );\n            }\n            return panel.defaultBrushType;\n        }\n        return brushType;\n    }\n\n    var mouseHandlers = {\n\n        mousedown: function (e) {\n            if (this._dragging) {\n                // In case some browser do not support globalOut,\n                // and release mose out side the browser.\n                handleDragEnd.call(this, e);\n            }\n            else if (!e.target || !e.target.draggable) {\n\n                preventDefault(e);\n\n                var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n\n                this._creatingCover = null;\n                var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n                if (panel) {\n                    this._dragging = true;\n                    this._track = [localCursorPoint.slice()];\n                }\n            }\n        },\n\n        mousemove: function (e) {\n            var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n\n            resetCursor(this, e, localCursorPoint);\n\n            if (this._dragging) {\n\n                preventDefault(e);\n\n                var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n\n                eventParams && trigger(this, eventParams);\n            }\n        },\n\n        mouseup: handleDragEnd //,\n\n        // FIXME\n        // in tooltip, globalout should not be triggered.\n        // globalout: handleDragEnd\n    };\n\n    function handleDragEnd(e) {\n        if (this._dragging) {\n\n            preventDefault(e);\n\n            var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n            var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n\n            this._dragging = false;\n            this._track = [];\n            this._creatingCover = null;\n\n            // trigger event shoule be at final, after procedure will be nested.\n            eventParams && trigger(this, eventParams);\n        }\n    }\n\n    /**\n     * key: brushType\n     * @type {Object}\n     */\n    var coverRenderers = {\n\n        lineX: getLineRenderer(0),\n\n        lineY: getLineRenderer(1),\n\n        rect: {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            return range;\n                        },\n                        function (range) {\n                            return range;\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                updateBaseRect(controller, cover, localRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        },\n\n        polygon: {\n            createCover: function (controller, brushOption) {\n                var cover = new graphic.Group();\n\n                // Do not use graphic.Polygon because graphic.Polyline do not close the\n                // border of the shape when drawing, which is a better experience for user.\n                cover.add(new graphic.Polyline({\n                    name: 'main',\n                    style: makeStyle(brushOption),\n                    silent: true\n                }));\n\n                return cover;\n            },\n            getCreatingRange: function (localTrack) {\n                return localTrack;\n            },\n            endCreating: function (controller, cover) {\n                cover.remove(cover.childAt(0));\n                // Use graphic.Polygon close the shape.\n                cover.add(new graphic.Polygon({\n                    name: 'main',\n                    draggable: true,\n                    drift: curry(driftPolygon, controller, cover),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                cover.childAt(0).setShape({\n                    points: clipByPanel(controller, cover, localRange)\n                });\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        }\n    };\n\n    function getLineRenderer(xyIndex) {\n        return {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            var rectRange = [range, [0, 100]];\n                            xyIndex && rectRange.reverse();\n                            return rectRange;\n                        },\n                        function (rectRange) {\n                            return rectRange[xyIndex];\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    [['w', 'e'], ['n', 's']][xyIndex]\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n                var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n\n                return [min, max];\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                var otherExtent;\n                // If brushWidth not specified, fit the panel.\n                var panel = getPanelByCover(controller, cover);\n                if (panel !== true && panel.getLinearBrushOtherExtent) {\n                    otherExtent = panel.getLinearBrushOtherExtent(\n                        xyIndex, controller._transform\n                    );\n                }\n                else {\n                    var zr = controller._zr;\n                    otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n                }\n                var rectRange = [localRange, otherExtent];\n                xyIndex && rectRange.reverse();\n\n                updateBaseRect(controller, cover, rectRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        };\n    }\n\n    module.exports = BrushController;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/BrushController.js\n// module id = 1056\n// module chunks = 0 1 2","\n\n    var helper = {};\n\n    var IRRELEVANT_EXCLUDES = {'axisPointer': 1, 'tooltip': 1, 'brush': 1};\n\n    /**\n     * Avoid that: mouse click on a elements that is over geo or graph,\n     * but roam is triggered.\n     */\n    helper.onIrrelevantElement = function (e, api, targetCoordSysModel) {\n        var model = api.getComponentByElement(e.topTarget);\n        // If model is axisModel, it works only if it is injected with coordinateSystem.\n        var coordSys = model && model.coordinateSystem;\n        return model\n            && model !== targetCoordSysModel\n            && !IRRELEVANT_EXCLUDES[model.mainType]\n            && (coordSys && coordSys.model !== targetCoordSysModel);\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/cursorHelper.js\n// module id = 1057\n// module chunks = 0 1 2","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textHelper = require('../helper/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext2D} ctx\n         * @param  {Object} rect Displayable rect\n         */\n        drawRectText: function (ctx, rect) {\n            var style = this.style;\n\n            rect = style.textRect || rect;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.transformText) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // transformText and textRotation can not be used at the same time.\n            textHelper.renderText(this, ctx, text, style, rect);\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/mixin/RectText.js\n// module id = 1060\n// module chunks = 0 1 2","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/line.js\n// module id = 1061\n// module chunks = 0 1 2","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/quadratic.js\n// module id = 1062\n// module chunks = 0 1 2","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/windingLine.js\n// module id = 1063\n// module chunks = 0 1 2","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n    var textHelper = require('./helper/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            // Use props with prefix 'text'.\n            style.fill = style.stroke = style.shadowBlur = style.shadowColor =\n                style.shadowOffsetX = style.shadowOffsetY = null;\n\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            this.setTransform(ctx);\n\n            textHelper.renderText(this, ctx, text, style);\n\n            this.restoreTransform(ctx);\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            if (!this._rect) {\n                var text = style.text;\n                text != null ? (text += '') : (text = '');\n\n                var rect = textContain.getBoundingRect(\n                    style.text + '',\n                    style.font,\n                    style.textAlign,\n                    style.textVerticalAlign,\n                    style.textPadding,\n                    style.rich\n                );\n\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n\n                if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n                    var w = style.textStrokeWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Text.js\n// module id = 1064\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/LinearGradient.js\n// module id = 1065\n// module chunks = 0 1 2","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.6.3';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function (dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function (id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // var start = new Date();\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n            // var end = new Date();\n\n            // var log = document.getElementById('log');\n            // if (log) {\n            //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n            // }\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/zrender.js\n// module id = 1066\n// module chunks = 0 1 2","// FIXME Better way to pack data in graphic element\n\n\n    require('./axisPointer');\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip.js\n// module id = 1067\n// module chunks = 0 1 2","\n\n    // Do not contain scrollable legend, for sake of file size.\n\n    require('./legend/LegendModel');\n    require('./legend/legendAction');\n    require('./legend/LegendView');\n\n    var echarts = require('../echarts');\n    // Series Filter\n    echarts.registerProcessor(require('./legend/legendFilter'));\n\n    require('../model/Component').registerSubTypeDefaulter('legend', function () {\n        // Default 'plain' when no type specified.\n        return 'plain';\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 1068\n// module chunks = 0 1 2","\n    module.exports = function (seriesType, ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (!legendModels || !legendModels.length) {\n            return;\n        }\n        ecModel.eachSeriesByType(seriesType, function (series) {\n            var data = series.getData();\n            data.filterSelf(function (idx) {\n                var name = data.getName(idx);\n                // If in any legend component the status is not selected.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(name)) {\n                        return false;\n                    }\n                }\n                return true;\n            }, this);\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataFilter.js\n// module id = 1069\n// module chunks = 0 2","\n\n    require('./toolbox/ToolboxModel');\n    require('./toolbox/ToolboxView');\n\n    require('./toolbox/feature/SaveAsImage');\n    require('./toolbox/feature/MagicType');\n    require('./toolbox/feature/DataView');\n    require('./toolbox/feature/DataZoom');\n    require('./toolbox/feature/Restore');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox.js\n// module id = 1070\n// module chunks = 0 1 2","\n\n    var ATTR = '\\0_ec_interaction_mutex';\n\n    var interactionMutex = {\n\n        take: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            store[resourceKey] = userKey;\n        },\n\n        release: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            var uKey = store[resourceKey];\n\n            if (uKey === userKey) {\n                store[resourceKey] = null;\n            }\n        },\n\n        isTaken: function (zr, resourceKey) {\n            return !!getStore(zr)[resourceKey];\n        }\n    };\n\n    function getStore(zr) {\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    /**\n     * payload: {\n     *     type: 'takeGlobalCursor',\n     *     key: 'dataZoomSelect', or 'brush', or ...,\n     *         If no userKey, release global cursor.\n     * }\n     */\n    require('../../echarts').registerAction(\n        {type: 'takeGlobalCursor', event: 'globalCursorTaken', update: 'update'},\n        function () {}\n    );\n\n    module.exports = interactionMutex;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/interactionMutex.js\n// module id = 1071\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var brushHelper = require('./brushHelper');\n\n    var each = zrUtil.each;\n    var indexOf = zrUtil.indexOf;\n    var curry = zrUtil.curry;\n\n    var COORD_CONVERTS = ['dataToPoint', 'pointToData'];\n\n    // FIXME\n    // how to genarialize to more coordinate systems.\n    var INCLUDE_FINDER_MAIN_TYPES = [\n        'grid', 'xAxis', 'yAxis', 'geo', 'graph',\n        'polar', 'radiusAxis', 'angleAxis', 'bmap'\n    ];\n\n    /**\n     * [option in constructor]:\n     * {\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     * }\n     *\n     *\n     * [targetInfo]:\n     *\n     * There can be multiple axes in a single targetInfo. Consider the case\n     * of `grid` component, a targetInfo represents a grid which contains one or more\n     * cartesian and one or more axes. And consider the case of parallel system,\n     * which has multiple axes in a coordinate system.\n     * Can be {\n     *     panelId: ...,\n     *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n     *     coordSyses: all cartesians.\n     *     gridModel: <grid component>\n     *     xAxes: correspond to coordSyses on index\n     *     yAxes: correspond to coordSyses on index\n     * }\n     * or {\n     *     panelId: ...,\n     *     coordSys: <geo coord sys>\n     *     coordSyses: [<geo coord sys>]\n     *     geoModel: <geo component>\n     * }\n     *\n     *\n     * [panelOpt]:\n     *\n     * Make from targetInfo. Input to BrushController.\n     * {\n     *     panelId: ...,\n     *     rect: ...\n     * }\n     *\n     *\n     * [area]:\n     *\n     * Generated by BrushController or user input.\n     * {\n     *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n     *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     *     range: pixel range.\n     *     coordRange: representitive coord range (the first one of coordRanges).\n     *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n     * }\n     */\n\n    /**\n     * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n     *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} [opt]\n     * @param {Array.<string>} [opt.include] include coordinate system types.\n     */\n    function BrushTargetManager(option, ecModel, opt) {\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        var targetInfoList = this._targetInfoList = [];\n        var info = {};\n        var foundCpts = parseFinder(ecModel, option);\n\n        each(targetInfoBuilders, function (builder, type) {\n            if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n                builder(foundCpts, targetInfoList, info);\n            }\n        });\n    }\n\n    var proto = BrushTargetManager.prototype;\n\n    proto.setOutputRanges = function (areas, ecModel) {\n        this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            (area.coordRanges || (area.coordRanges = [])).push(coordRange);\n            // area.coordRange is the first of area.coordRanges\n            if (!area.coordRange) {\n                area.coordRange = coordRange;\n                // In 'category' axis, coord to pixel is not reversible, so we can not\n                // rebuild range by coordRange accrately, which may bring trouble when\n                // brushing only one item. So we use __rangeOffset to rebuilding range\n                // by coordRange. And this it only used in brush component so it is no\n                // need to be adapted to coordRanges.\n                var result = coordConvert[area.brushType](0, coordSys, coordRange);\n                area.__rangeOffset = {\n                    offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n                    xyMinMax: result.xyMinMax\n                };\n            }\n        });\n    };\n\n    proto.matchOutputRanges = function (areas, ecModel, cb) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (targetInfo && targetInfo !== true) {\n                zrUtil.each(\n                    targetInfo.coordSyses,\n                    function (coordSys) {\n                        var result = coordConvert[area.brushType](1, coordSys, area.range);\n                        cb(area, result.values, coordSys, ecModel);\n                    }\n                );\n            }\n        }, this);\n    };\n\n    proto.setInputRanges = function (areas, ecModel) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (__DEV__) {\n                zrUtil.assert(\n                    !targetInfo || targetInfo === true || area.coordRange,\n                    'coordRange must be specified when coord index specified.'\n                );\n                zrUtil.assert(\n                    !targetInfo || targetInfo !== true || area.range,\n                    'range must be specified in global brush.'\n                );\n            }\n\n            area.range = area.range || [];\n\n            // convert coordRange to global range and set panelId.\n            if (targetInfo && targetInfo !== true) {\n                area.panelId = targetInfo.panelId;\n                // (1) area.range shoule always be calculate from coordRange but does\n                // not keep its original value, for the sake of the dataZoom scenario,\n                // where area.coordRange remains unchanged but area.range may be changed.\n                // (2) Only support converting one coordRange to pixel range in brush\n                // component. So do not consider `coordRanges`.\n                // (3) About __rangeOffset, see comment above.\n                var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n                var rangeOffset = area.__rangeOffset;\n                area.range = rangeOffset\n                    ? diffProcessor[area.brushType](\n                        result.values,\n                        rangeOffset.offset,\n                        getScales(result.xyMinMax, rangeOffset.xyMinMax)\n                    )\n                    : result.values;\n            }\n        }, this);\n    };\n\n    proto.makePanelOpts = function (api, getDefaultBrushType) {\n        return zrUtil.map(this._targetInfoList, function (targetInfo) {\n            var rect = targetInfo.getPanelRect();\n            return {\n                panelId: targetInfo.panelId,\n                defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n                clipPath: brushHelper.makeRectPanelClipPath(rect),\n                isTargetByCursor: brushHelper.makeRectIsTargetByCursor(\n                    rect, api, targetInfo.coordSysModel\n                ),\n                getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n            };\n        });\n    };\n\n    proto.controlSeries = function (area, seriesModel, ecModel) {\n        // Check whether area is bound in coord, and series do not belong to that coord.\n        // If do not do this check, some brush (like lineX) will controll all axes.\n        var targetInfo = this.findTargetInfo(area, ecModel);\n        return targetInfo === true || (\n            targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0\n        );\n    };\n\n    /**\n     * If return Object, a coord found.\n     * If reutrn true, global found.\n     * Otherwise nothing found.\n     *\n     * @param {Object} area\n     * @param {Array} targetInfoList\n     * @return {Object|boolean}\n     */\n    proto.findTargetInfo = function (area, ecModel) {\n        var targetInfoList = this._targetInfoList;\n        var foundCpts = parseFinder(ecModel, area);\n\n        for (var i = 0; i < targetInfoList.length; i++) {\n            var targetInfo = targetInfoList[i];\n            var areaPanelId = area.panelId;\n            if (areaPanelId) {\n                if (targetInfo.panelId === areaPanelId) {\n                    return targetInfo;\n                }\n            }\n            else {\n                for (var i = 0; i < targetInfoMatchers.length; i++) {\n                    if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n                        return targetInfo;\n                    }\n                }\n            }\n        }\n\n        return true;\n    };\n\n    function formatMinMax(minMax) {\n        minMax[0] > minMax[1] && minMax.reverse();\n        return minMax;\n    }\n\n    function parseFinder(ecModel, option) {\n        return modelUtil.parseFinder(\n            ecModel, option, {includeMainTypes: INCLUDE_FINDER_MAIN_TYPES}\n        );\n    }\n\n    var targetInfoBuilders = {\n\n        grid: function (foundCpts, targetInfoList) {\n            var xAxisModels = foundCpts.xAxisModels;\n            var yAxisModels = foundCpts.yAxisModels;\n            var gridModels = foundCpts.gridModels;\n            // Remove duplicated.\n            var gridModelMap = zrUtil.createHashMap();\n            var xAxesHas = {};\n            var yAxesHas = {};\n\n            if (!xAxisModels && !yAxisModels && !gridModels) {\n                return;\n            }\n\n            each(xAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap.set(gridModel.id, gridModel);\n                xAxesHas[gridModel.id] = true;\n            });\n            each(yAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap.set(gridModel.id, gridModel);\n                yAxesHas[gridModel.id] = true;\n            });\n            each(gridModels, function (gridModel) {\n                gridModelMap.set(gridModel.id, gridModel);\n                xAxesHas[gridModel.id] = true;\n                yAxesHas[gridModel.id] = true;\n            });\n\n            gridModelMap.each(function (gridModel) {\n                var grid = gridModel.coordinateSystem;\n                var cartesians = [];\n\n                each(grid.getCartesians(), function (cartesian, index) {\n                    if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0\n                        || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0\n                    ) {\n                        cartesians.push(cartesian);\n                    }\n                });\n                targetInfoList.push({\n                    panelId: 'grid--' + gridModel.id,\n                    gridModel: gridModel,\n                    coordSysModel: gridModel,\n                    // Use the first one as the representitive coordSys.\n                    coordSys: cartesians[0],\n                    coordSyses: cartesians,\n                    getPanelRect: panelRectBuilder.grid,\n                    xAxisDeclared: xAxesHas[gridModel.id],\n                    yAxisDeclared: yAxesHas[gridModel.id]\n                });\n            });\n        },\n\n        geo: function (foundCpts, targetInfoList) {\n            each(foundCpts.geoModels, function (geoModel) {\n                var coordSys = geoModel.coordinateSystem;\n                targetInfoList.push({\n                    panelId: 'geo--' + geoModel.id,\n                    geoModel: geoModel,\n                    coordSysModel: geoModel,\n                    coordSys: coordSys,\n                    coordSyses: [coordSys],\n                    getPanelRect: panelRectBuilder.geo\n                });\n            });\n        }\n    };\n\n    var targetInfoMatchers = [\n\n        // grid\n        function (foundCpts, targetInfo) {\n            var xAxisModel = foundCpts.xAxisModel;\n            var yAxisModel = foundCpts.yAxisModel;\n            var gridModel = foundCpts.gridModel;\n\n            !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n            !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n\n            return gridModel && gridModel === targetInfo.gridModel;\n        },\n\n        // geo\n        function (foundCpts, targetInfo) {\n            var geoModel = foundCpts.geoModel;\n            return geoModel && geoModel === targetInfo.geoModel;\n        }\n    ];\n\n    var panelRectBuilder = {\n\n        grid: function () {\n            // grid is not Transformable.\n            return this.coordSys.grid.getRect().clone();\n        },\n\n        geo: function () {\n            var coordSys = this.coordSys;\n            var rect = coordSys.getBoundingRect().clone();\n            // geo roam and zoom transform\n            rect.applyTransform(graphic.getTransform(coordSys));\n            return rect;\n        }\n    };\n\n    var coordConvert = {\n\n        lineX: curry(axisConvert, 0),\n\n        lineY: curry(axisConvert, 1),\n\n        rect: function (to, coordSys, rangeOrCoordRange) {\n            var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n            var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n            var values = [\n                formatMinMax([xminymin[0], xmaxymax[0]]),\n                formatMinMax([xminymin[1], xmaxymax[1]])\n            ];\n            return {values: values, xyMinMax: values};\n        },\n\n        polygon: function (to, coordSys, rangeOrCoordRange) {\n            var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n            var values = zrUtil.map(rangeOrCoordRange, function (item) {\n                var p = coordSys[COORD_CONVERTS[to]](item);\n                xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n                xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n                xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n                xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n                return p;\n            });\n            return {values: values, xyMinMax: xyMinMax};\n        }\n    };\n\n    function axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n        if (__DEV__) {\n            zrUtil.assert(\n                coordSys.type === 'cartesian2d',\n                'lineX/lineY brush is available only in cartesian2d.'\n            );\n        }\n\n        var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n        var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n            return to\n                ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i]))\n                : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n        }));\n        var xyMinMax = [];\n        xyMinMax[axisNameIndex] = values;\n        xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n\n        return {values: values, xyMinMax: xyMinMax};\n    }\n\n    var diffProcessor = {\n        lineX: curry(axisDiffProcessor, 0),\n\n        lineY: curry(axisDiffProcessor, 1),\n\n        rect: function (values, refer, scales) {\n            return [\n                [values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]],\n                [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]\n            ];\n        },\n\n        polygon: function (values, refer, scales) {\n            return zrUtil.map(values, function (item, idx) {\n                return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n            });\n        }\n    };\n\n    function axisDiffProcessor(axisNameIndex, values, refer, scales) {\n        return [\n            values[0] - scales[axisNameIndex] * refer[0],\n            values[1] - scales[axisNameIndex] * refer[1]\n        ];\n    }\n\n    // We have to process scale caused by dataZoom manually,\n    // although it might be not accurate.\n    function getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n        var sizeCurr = getSize(xyMinMaxCurr);\n        var sizeOrigin = getSize(xyMinMaxOrigin);\n        var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n        isNaN(scales[0]) && (scales[0] = 1);\n        isNaN(scales[1]) && (scales[1] = 1);\n        return scales;\n    }\n\n    function getSize(xyMinMax) {\n        return xyMinMax\n            ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]]\n            : [NaN, NaN];\n    }\n\n    module.exports = BrushTargetManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/BrushTargetManager.js\n// module id = 1072\n// module chunks = 0 1 2","\n\n    var cursorHelper = require('./cursorHelper');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var graphicUtil = require('../../util/graphic');\n\n    var helper = {};\n\n    helper.makeRectPanelClipPath = function (rect) {\n        rect = normalizeRect(rect);\n        return function (localPoints, transform) {\n            return graphicUtil.clipPointsByRect(localPoints, rect);\n        };\n    };\n\n    helper.makeLinearBrushOtherExtent = function (rect, specifiedXYIndex) {\n        rect = normalizeRect(rect);\n        return function (xyIndex) {\n            var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n            var brushWidth = idx ? rect.width : rect.height;\n            var base = idx ? rect.x : rect.y;\n            return [base, base + (brushWidth || 0)];\n        };\n    };\n\n    helper.makeRectIsTargetByCursor = function (rect, api, targetModel) {\n        rect = normalizeRect(rect);\n        return function (e, localCursorPoint, transform) {\n            return rect.contain(localCursorPoint[0], localCursorPoint[1])\n                && !cursorHelper.onIrrelevantElement(e, api, targetModel);\n        };\n    };\n\n    // Consider width/height is negative.\n    function normalizeRect(rect) {\n        return BoundingRect.create(rect);\n    }\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/brushHelper.js\n// module id = 1073\n// module chunks = 0 1 2","\n\n    require('../../model/Component').registerSubTypeDefaulter('dataZoom', function () {\n        // Default 'slider' when no type specified.\n        return 'slider';\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/typeDefaulter.js\n// module id = 1074\n// module chunks = 0 1 2","/**\n * @file Data zoom processor\n */\n\n\n    var echarts = require('../../echarts');\n\n    echarts.registerProcessor(function (ecModel, api) {\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // We calculate window and reset axis here but not in model\n            // init stage and not after action dispatch handler, because\n            // reset should be called after seriesData.restoreData.\n            dataZoomModel.eachTargetAxis(resetSingleAxis);\n\n            // Caution: data zoom filtering is order sensitive when using\n            // percent range and no min/max/scale set on axis.\n            // For example, we have dataZoom definition:\n            // [\n            //      {xAxisIndex: 0, start: 30, end: 70},\n            //      {yAxisIndex: 0, start: 20, end: 80}\n            // ]\n            // In this case, [20, 80] of y-dataZoom should be based on data\n            // that have filtered by x-dataZoom using range of [30, 70],\n            // but should not be based on full raw data. Thus sliding\n            // x-dataZoom will change both ranges of xAxis and yAxis,\n            // while sliding y-dataZoom will only change the range of yAxis.\n            // So we should filter x-axis after reset x-axis immediately,\n            // and then reset y-axis and filter y-axis.\n            dataZoomModel.eachTargetAxis(filterSingleAxis);\n        });\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // Fullfill all of the range props so that user\n            // is able to get them from chart.getOption().\n            var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n            var percentRange = axisProxy.getDataPercentWindow();\n            var valueRange = axisProxy.getDataValueWindow();\n\n            dataZoomModel.setRawRange({\n                start: percentRange[0],\n                end: percentRange[1],\n                startValue: valueRange[0],\n                endValue: valueRange[1]\n            }, true);\n        });\n    });\n\n    function resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n    }\n\n    function filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n    }\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js\n// module id = 1075\n// module chunks = 0 1 2","/**\n * @file Data zoom action\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var helper = require('./helper');\n    var echarts = require('../../echarts');\n\n\n    echarts.registerAction('dataZoom', function (payload, ecModel) {\n\n        var linkedNodesFinder = helper.createLinkedNodesFinder(\n            zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'),\n            helper.eachAxisDim,\n            function (model, dimNames) {\n                return model.get(dimNames.axisIndex);\n            }\n        );\n\n        var effectedModels = [];\n\n        ecModel.eachComponent(\n            {mainType: 'dataZoom', query: payload},\n            function (model, index) {\n                effectedModels.push.apply(\n                    effectedModels, linkedNodesFinder(model).nodes\n                );\n            }\n        );\n\n        zrUtil.each(effectedModels, function (dataZoomModel, index) {\n            dataZoomModel.setRawRange({\n                start: payload.start,\n                end: payload.end,\n                startValue: payload.startValue,\n                endValue: payload.endValue\n            });\n        });\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/dataZoomAction.js\n// module id = 1076\n// module chunks = 0 1 2","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Global.js\n// module id = 1080\n// module chunks = 0 1 2","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/lineStyle.js\n// module id = 1081\n// module chunks = 0 1 2","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/areaStyle.js\n// module id = 1082\n// module chunks = 0 1 2","\n\n    var textContain = require('zrender/lib/contain/text');\n    var graphicUtil = require('../../util/graphic');\n\n    var PATH_COLOR = ['textStyle', 'color'];\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @param {boolean} [isEmphasis]\n         * @return {string}\n         */\n        getTextColor: function (isEmphasis) {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (\n                    (!isEmphasis && ecModel) ? ecModel.get(PATH_COLOR) : null\n                );\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('verticalAlign') || this.getShallow('baseline'),\n                this.getShallow('padding'),\n                this.getShallow('rich'),\n                this.getShallow('truncateText')\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/textStyle.js\n// module id = 1083\n// module chunks = 0 1 2","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/path.js\n// module id = 1084\n// module chunks = 0 1 2","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path The path to fetch value from object, like 'a.b.c'.\n         * @param {boolean} [loop] Whether to loop animation.\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * Caution: this method will stop previous animation.\n         * So do not use this method to one element twice before\n         * animation starts, unless you know what you are doing.\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         * @param {Function} [forceAnimate] Prevent stop animation and callback\n         *        immediently when target values are the same as current values.\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing, forceAnimate);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Animatable.js\n// module id = 1085\n// module chunks = 0 1 2","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Clip.js\n// module id = 1086\n// module chunks = 0 1 2","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/easing.js\n// module id = 1087\n// module chunks = 0 1 2","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/path.js\n// module id = 1088\n// module chunks = 0 1 2","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/cubic.js\n// module id = 1089\n// module chunks = 0 1 2","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/arc.js\n// module id = 1090\n// module chunks = 0 1 2","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/transformPath.js\n// module id = 1091\n// module chunks = 0 1 2","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Circle.js\n// module id = 1092\n// module chunks = 0 1 2","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var Path = require('../Path');\n    var fixClipWithShadow = require('../helper/fixClipWithShadow');\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: fixClipWithShadow(Path.prototype.brush),\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Sector.js\n// module id = 1093\n// module chunks = 0 1 2","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Ring.js\n// module id = 1094\n// module chunks = 0 1 2","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Polygon.js\n// module id = 1095\n// module chunks = 0 1 2","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 1096\n// module chunks = 0 1 2","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 1097\n// module chunks = 0 1 2","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Polyline.js\n// module id = 1098\n// module chunks = 0 1 2","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Rect.js\n// module id = 1099\n// module chunks = 0 1 2","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Line.js\n// module id = 1100\n// module chunks = 0 1 2","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 1101\n// module chunks = 0 1 2","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Arc.js\n// module id = 1102\n// module chunks = 0 1 2","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/CompoundPath.js\n// module id = 1103\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/RadialGradient.js\n// module id = 1104\n// module chunks = 0 1 2","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/itemStyle.js\n// module id = 1105\n// module chunks = 0 1 2","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/boxLayout.js\n// module id = 1106\n// module chunks = 0 1 2","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/globalDefault.js\n// module id = 1107\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/ExtensionAPI.js\n// module id = 1108\n// module chunks = 0 1 2","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/OptionManager.js\n// module id = 1109\n// module chunks = 0 1 2","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option, isTheme) {\n        compatStyle(option, isTheme);\n\n        var series = option.series;\n        each(zrUtil.isArray(series) ? series : [series], function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/preprocessor/backwardCompat.js\n// module id = 1110\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (!itemStyleOpt) {\n            return;\n        }\n        for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n            var styleName = POSSIBLE_STYLES[i];\n            var normalItemStyleOpt = itemStyleOpt.normal;\n            var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n            if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].normal) {\n                    opt[styleName].normal = normalItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                }\n                normalItemStyleOpt[styleName] = null;\n            }\n            if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].emphasis) {\n                    opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                }\n                emphasisItemStyleOpt[styleName] = null;\n            }\n        }\n    }\n\n    function compatTextStyle(opt, propName) {\n        var labelOptSingle = isObject(opt) && opt[propName];\n        var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n        if (textStyle) {\n            for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n                var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n                if (textStyle.hasOwnProperty(propName)) {\n                    labelOptSingle[propName] = textStyle[propName];\n                }\n            }\n        }\n    }\n\n    function compatLabelTextStyle(labelOpt) {\n        if (isObject(labelOpt)) {\n            compatTextStyle(labelOpt, 'normal');\n            compatTextStyle(labelOpt, 'emphasis');\n        }\n    }\n\n    function processSeries(seriesOpt) {\n        if (!isObject(seriesOpt)) {\n            return;\n        }\n\n        compatItemStyle(seriesOpt);\n        compatLabelTextStyle(seriesOpt.label);\n        // treemap\n        compatLabelTextStyle(seriesOpt.upperLabel);\n        // graph\n        compatLabelTextStyle(seriesOpt.edgeLabel);\n\n        var markPoint = seriesOpt.markPoint;\n        compatItemStyle(markPoint);\n        compatLabelTextStyle(markPoint && markPoint.label);\n\n        var markLine = seriesOpt.markLine;\n        compatItemStyle(seriesOpt.markLine);\n        compatLabelTextStyle(markLine && markLine.label);\n\n        var markArea = seriesOpt.markArea;\n        compatLabelTextStyle(markArea && markArea.label);\n\n        // For gauge\n        compatTextStyle(seriesOpt, 'axisLabel');\n        compatTextStyle(seriesOpt, 'title');\n        compatTextStyle(seriesOpt, 'detail');\n\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n                compatLabelTextStyle(data[i] && data[i].label);\n            }\n        }\n\n        // mark point data\n        var markPoint = seriesOpt.markPoint;\n        if (markPoint && markPoint.data) {\n            var mpData = markPoint.data;\n            for (var i = 0; i < mpData.length; i++) {\n                compatItemStyle(mpData[i]);\n                compatLabelTextStyle(mpData[i] && mpData[i].label);\n            }\n        }\n        // mark line data\n        var markLine = seriesOpt.markLine;\n        if (markLine && markLine.data) {\n            var mlData = markLine.data;\n            for (var i = 0; i < mlData.length; i++) {\n                if (zrUtil.isArray(mlData[i])) {\n                    compatItemStyle(mlData[i][0]);\n                    compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n                    compatItemStyle(mlData[i][1]);\n                    compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n                }\n                else {\n                    compatItemStyle(mlData[i]);\n                    compatLabelTextStyle(mlData[i] && mlData[i].label);\n                }\n            }\n        }\n    }\n\n    function toArr(o) {\n        return zrUtil.isArray(o) ? o : o ? [o] : [];\n    }\n\n    function toObj(o) {\n        return (zrUtil.isArray(o) ? o[0] : o) || {};\n    }\n\n    module.exports = function (option, isTheme) {\n        each(toArr(option.series), function (seriesOpt) {\n            isObject(seriesOpt) && processSeries(seriesOpt);\n        });\n\n        var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n        isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n\n        each(\n            axes,\n            function (axisName) {\n                each(toArr(option[axisName]), function (axisOpt) {\n                    if (axisOpt) {\n                        compatTextStyle(axisOpt, 'axisLabel');\n                        compatTextStyle(axisOpt.axisPointer, 'label');\n                    }\n                });\n            }\n        );\n\n        each(toArr(option.parallel), function (parallelOpt) {\n            var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n            compatTextStyle(parallelAxisDefault, 'axisLabel');\n            compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n        });\n\n        each(toArr(option.calendar), function (calendarOpt) {\n            compatTextStyle(calendarOpt, 'dayLabel');\n            compatTextStyle(calendarOpt, 'monthLabel');\n            compatTextStyle(calendarOpt, 'yearLabel');\n        });\n\n        // radar.name.textStyle\n        each(toArr(option.radar), function (radarOpt) {\n            compatTextStyle(radarOpt, 'name');\n        });\n\n        each(toArr(option.geo), function (geoOpt) {\n            if (isObject(geoOpt)) {\n                compatLabelTextStyle(geoOpt.label);\n                each(toArr(geoOpt.regions), function (regionObj) {\n                    compatLabelTextStyle(regionObj.label);\n                });\n            }\n        });\n\n        compatLabelTextStyle(toObj(option.timeline).label);\n        compatTextStyle(toObj(option.axisPointer), 'label');\n        compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 1111\n// module chunks = 0 1 2","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var vec2 = require('./core/vector');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch,\n            which: event.which\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget, x, y}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var lastHoveredTarget = lastHovered.target;\n\n            // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n            // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n            // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n            // See #6198.\n            if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n                lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n                lastHoveredTarget = lastHovered.target;\n            }\n\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var el = targetInfo.target;\n            if (el && el.silent) {\n                return;\n            }\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {x: x, y: y};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downEl = hoveredTarget;\n                this._downPoint = [event.zrX, event.zrY];\n                // In case click triggered before mouseup\n                this._upEl = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upEl = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downEl !== this._upEl\n                    // Original click event is triggered on the whole canvas element,\n                    // including the case that `mousedown` - `mousemove` - `mouseup`,\n                    // which should be filtered, otherwise it will bring trouble to\n                    // pan and zoom.\n                    || !this._downPoint\n                    // Arbitrary value\n                    || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4\n                ) {\n                    return;\n                }\n                this._downPoint = null;\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Handler.js\n// module id = 1112\n// module chunks = 0 1 2","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Draggable.js\n// module id = 1113\n// module chunks = 0 1 2","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Storage.js\n// module id = 1114\n// module chunks = 0 1 2","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Animation.js\n// module id = 1115\n// module chunks = 0 1 2","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/dom/HandlerProxy.js\n// module id = 1116\n// module chunks = 0 1 2","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/GestureMgr.js\n// module id = 1117\n// module chunks = 0 1 2","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Object} opts\n     */\n    var Painter = function (root, storage, opts) {\n\n        this.type = 'canvas';\n\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        getType: function () {\n            return 'canvas';\n        },\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        getViewportRootOffset: function () {\n            var viewportRoot = this.getViewportRoot();\n            if (viewportRoot) {\n                return {\n                    offsetLeft: viewportRoot.offsetLeft || 0,\n                    offsetTop: viewportRoot.offsetTop || 0\n                };\n            }\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            // IE8 does not support getComputedStyle, but it use VML.\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Painter.js\n// module id = 1118\n// module chunks = 0 1 2","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n            this.ctx.__currentValues = {};\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n            this.ctxBack.__currentValues = {};\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Layer.js\n// module id = 1119\n// module chunks = 0 1 2","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/seriesColor.js\n// module id = 1120\n// module chunks = 0 1 2","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/loading/default.js\n// module id = 1121\n// module chunks = 0 1 2","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Ordinal.js\n// module id = 1122\n// module chunks = 0 1 2","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var scaleHelper = require('./helper');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum, minInterval, maxInterval) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n\n            if (minInterval != null && approxInterval < minInterval) {\n                approxInterval = minInterval;\n            }\n            if (maxInterval != null && approxInterval > maxInterval) {\n                approxInterval = maxInterval;\n            }\n\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : (new Date(+extent[0] || +extent[1])).getTimezoneOffset() * 60 * 1000;\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Time.js\n// module id = 1123\n// module chunks = 0 1 2","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Log.js\n// module id = 1124\n// module chunks = 0 1 2","\n\n    var createListFromArray = require('./chart/helper/createListFromArray');\n    var symbolUtil = require('./util/symbol');\n    var axisHelper = require('./coord/axisHelper');\n    var axisModelCommonMixin = require('./coord/axisModelCommonMixin');\n    var Model = require('./model/Model');\n    var util = require('zrender/lib/core/util');\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: require('./data/helper/completeDimensions'),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/helper.js\n// module id = 1125\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var modelHelper = require('./modelHelper');\n    var findPointFromSeries = require('./findPointFromSeries');\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        // Pending\n        // See #6121. But we are not able to reproduce it yet.\n        if (!coordSysAxesInfo) {\n            return;\n        }\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 1126\n// module chunks = 0 1 2","\n\n    var echarts = require('../../echarts');\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                color: '#fff',\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 1127\n// module chunks = 0 1 2","\n\n    var globalListener = require('./globalListener');\n\n    var AxisPonterView = require('../../echarts').extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 1128\n// module chunks = 0 1 2","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 1129\n// module chunks = 0 1 2","\n\n    var TooltipContent = require('./TooltipContent');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var graphic = require('../../util/graphic');\n    var findPointFromSeries = require('../axisPointer/findPointFromSeries');\n    var layoutUtil = require('../../util/layout');\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n    var globalListener = require('../axisPointer/globalListener');\n    var axisHelper = require('../../coord/axisHelper');\n    var axisPointerViewHelper = require('../axisPointer/viewHelper');\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>|Object} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function getOuterSize(el) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        // Consider browser compatibility.\n        // IE8 does not support getComputedStyle.\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            var stl = document.defaultView.getComputedStyle(el);\n            if (stl) {\n                width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10)\n                    + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n                height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10)\n                    + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n            }\n        }\n\n        return {width: width, height: height};\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipView.js\n// module id = 1130\n// module chunks = 0 1 2","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRootOffset;\n            if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n                x += viewportRootOffset.offsetLeft;\n                y += viewportRootOffset.offsetTop;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 1131\n// module chunks = 0 1 2","/**\n * @file Legend action\n */\n\n\n    var echarts = require('../../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (selectedMap.hasOwnProperty(name)) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 1132\n// module chunks = 0 1 2","\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = 1133\n// module chunks = 0 1 2","/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n *\n * @module echarts/chart/helper/DataSelectable\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = {\n\n        updateSelectedMap: function (targetList) {\n            this._targetList = targetList.slice();\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n                targetMap.set(target.name, target);\n                return targetMap;\n            }, zrUtil.createHashMap());\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        // PENGING If selectedMode is null ?\n        select: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                this._selectTargetMap.each(function (target) {\n                    target.selected = false;\n                });\n            }\n            target && (target.selected = true);\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        unSelect: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            // var selectedMode = this.get('selectedMode');\n            // selectedMode !== 'single' && target && (target.selected = false);\n            target && (target.selected = false);\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        toggleSelected: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            if (target != null) {\n                this[target.selected ? 'unSelect' : 'select'](name, id);\n                return target.selected;\n            }\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        isSelected: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            return target && target.selected;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/selectableMixin.js\n// module id = 1134\n// module chunks = 0 2","// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\n\n\n    module.exports = function (seriesType, ecModel) {\n        // Pie and funnel may use diferrent scope\n        var paletteScope = {};\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var dataAll = seriesModel.getRawData();\n            var idxMap = {};\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                var data = seriesModel.getData();\n                data.each(function (idx) {\n                    var rawIdx = data.getRawIndex(idx);\n                    idxMap[rawIdx] = idx;\n                });\n                dataAll.each(function (rawIdx) {\n                    var filteredIdx = idxMap[rawIdx];\n\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n                    var singleDataColor = filteredIdx != null\n                        && data.getItemVisual(filteredIdx, 'color', true);\n\n                    if (!singleDataColor) {\n                        // FIXME Performance\n                        var itemModel = dataAll.getItemModel(rawIdx);\n                        var color = itemModel.get('itemStyle.normal.color')\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n                        // Legend may use the visual info in data before processed\n                        dataAll.setItemVisual(rawIdx, 'color', color);\n\n                        // Data is not filtered\n                        if (filteredIdx != null) {\n                            data.setItemVisual(filteredIdx, 'color', color);\n                        }\n                    }\n                    else {\n                        // Set data all color for legend\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/dataColor.js\n// module id = 1135\n// module chunks = 0 2","\n\n    var featureManager = require('./featureManager');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var ToolboxModel = require('../../echarts').extendComponentModel({\n\n        type: 'toolbox',\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        mergeDefaultAndTheme: function (option) {\n            ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n\n            zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n                var Feature = featureManager.get(featureName);\n                Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n            });\n        },\n\n        defaultOption: {\n\n            show: true,\n\n            z: 6,\n\n            zlevel: 0,\n\n            orient: 'horizontal',\n\n            left: 'right',\n\n            top: 'top',\n\n            // right\n            // bottom\n\n            backgroundColor: 'transparent',\n\n            borderColor: '#ccc',\n\n            borderRadius: 0,\n\n            borderWidth: 0,\n\n            padding: 5,\n\n            itemSize: 15,\n\n            itemGap: 8,\n\n            showTitle: true,\n\n            iconStyle: {\n                normal: {\n                    borderColor: '#666',\n                    color: 'none'\n                },\n                emphasis: {\n                    borderColor: '#3E98C5'\n                }\n            }\n            // textStyle: {},\n\n            // feature\n        }\n    });\n\n    module.exports = ToolboxModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/ToolboxModel.js\n// module id = 1136\n// module chunks = 0 1 2","\n\n    var featureManager = require('./featureManager');\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var DataDiffer = require('../../data/DataDiffer');\n    var listComponentHelper = require('../helper/listComponent');\n    var textContain = require('zrender/lib/contain/text');\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'toolbox',\n\n        render: function (toolboxModel, ecModel, api, payload) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!toolboxModel.get('show')) {\n                return;\n            }\n\n            var itemSize = +toolboxModel.get('itemSize');\n            var featureOpts = toolboxModel.get('feature') || {};\n            var features = this._features || (this._features = {});\n\n            var featureNames = [];\n            zrUtil.each(featureOpts, function (opt, name) {\n                featureNames.push(name);\n            });\n\n            (new DataDiffer(this._featureNames || [], featureNames))\n                .add(process)\n                .update(process)\n                .remove(zrUtil.curry(process, null))\n                .execute();\n\n            // Keep for diff.\n            this._featureNames = featureNames;\n\n            function process(newIndex, oldIndex) {\n                var featureName = featureNames[newIndex];\n                var oldName = featureNames[oldIndex];\n                var featureOpt = featureOpts[featureName];\n                var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n                var feature;\n\n                if (featureName && !oldName) { // Create\n                    if (isUserFeatureName(featureName)) {\n                        feature = {\n                            model: featureModel,\n                            onclick: featureModel.option.onclick,\n                            featureName: featureName\n                        };\n                    }\n                    else {\n                        var Feature = featureManager.get(featureName);\n                        if (!Feature) {\n                            return;\n                        }\n                        feature = new Feature(featureModel, ecModel, api);\n                    }\n                    features[featureName] = feature;\n                }\n                else {\n                    feature = features[oldName];\n                    // If feature does not exsit.\n                    if (!feature) {\n                        return;\n                    }\n                    feature.model = featureModel;\n                    feature.ecModel = ecModel;\n                    feature.api = api;\n                }\n\n                if (!featureName && oldName) {\n                    feature.dispose && feature.dispose(ecModel, api);\n                    return;\n                }\n\n                if (!featureModel.get('show') || feature.unusable) {\n                    feature.remove && feature.remove(ecModel, api);\n                    return;\n                }\n\n                createIconPaths(featureModel, feature, featureName);\n\n                featureModel.setIconStatus = function (iconName, status) {\n                    var option = this.option;\n                    var iconPaths = this.iconPaths;\n                    option.iconStatus = option.iconStatus || {};\n                    option.iconStatus[iconName] = status;\n                    // FIXME\n                    iconPaths[iconName] && iconPaths[iconName].trigger(status);\n                };\n\n                if (feature.render) {\n                    feature.render(featureModel, ecModel, api, payload);\n                }\n            }\n\n            function createIconPaths(featureModel, feature, featureName) {\n                var iconStyleModel = featureModel.getModel('iconStyle');\n\n                // If one feature has mutiple icon. they are orginaized as\n                // {\n                //     icon: {\n                //         foo: '',\n                //         bar: ''\n                //     },\n                //     title: {\n                //         foo: '',\n                //         bar: ''\n                //     }\n                // }\n                var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n                var titles = featureModel.get('title') || {};\n                if (typeof icons === 'string') {\n                    var icon = icons;\n                    var title = titles;\n                    icons = {};\n                    titles = {};\n                    icons[featureName] = icon;\n                    titles[featureName] = title;\n                }\n                var iconPaths = featureModel.iconPaths = {};\n                zrUtil.each(icons, function (iconStr, iconName) {\n                    var path = graphic.createIcon(\n                        iconStr,\n                        {},\n                        {\n                            x: -itemSize / 2,\n                            y: -itemSize / 2,\n                            width: itemSize,\n                            height: itemSize\n                        }\n                    );\n                    path.setStyle(iconStyleModel.getModel('normal').getItemStyle());\n                    path.hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n\n                    graphic.setHoverStyle(path);\n\n                    if (toolboxModel.get('showTitle')) {\n                        path.__title = titles[iconName];\n                        path.on('mouseover', function () {\n                                // Should not reuse above hoverStyle, which might be modified.\n                                var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n                                path.setStyle({\n                                    text: titles[iconName],\n                                    textPosition: hoverStyle.textPosition || 'bottom',\n                                    textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n                                    textAlign: hoverStyle.textAlign || 'center'\n                                });\n                            })\n                            .on('mouseout', function () {\n                                path.setStyle({\n                                    textFill: null\n                                });\n                            });\n                    }\n                    path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n\n                    group.add(path);\n                    path.on('click', zrUtil.bind(\n                        feature.onclick, feature, ecModel, api, iconName\n                    ));\n\n                    iconPaths[iconName] = path;\n                });\n            }\n\n            listComponentHelper.layout(group, toolboxModel, api);\n            // Render background after group is layout\n            // FIXME\n            group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel));\n\n            // Adjust icon title positions to avoid them out of screen\n            group.eachChild(function (icon) {\n                var titleText = icon.__title;\n                var hoverStyle = icon.hoverStyle;\n                // May be background element\n                if (hoverStyle && titleText) {\n                    var rect = textContain.getBoundingRect(\n                        titleText, textContain.makeFont(hoverStyle)\n                    );\n                    var offsetX = icon.position[0] + group.position[0];\n                    var offsetY = icon.position[1] + group.position[1] + itemSize;\n\n                    var needPutOnTop = false;\n                    if (offsetY + rect.height > api.getHeight()) {\n                        hoverStyle.textPosition = 'top';\n                        needPutOnTop = true;\n                    }\n                    var topOffset = needPutOnTop ? (-5 - rect.height) : (itemSize + 8);\n                    if (offsetX + rect.width /  2 > api.getWidth()) {\n                        hoverStyle.textPosition = ['100%', topOffset];\n                        hoverStyle.textAlign = 'right';\n                    }\n                    else if (offsetX - rect.width / 2 < 0) {\n                        hoverStyle.textPosition = [0, topOffset];\n                        hoverStyle.textAlign = 'left';\n                    }\n                }\n            });\n        },\n\n        updateView: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n            });\n        },\n\n        updateLayout: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n            });\n        },\n\n        remove: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.remove && feature.remove(ecModel, api);\n            });\n            this.group.removeAll();\n        },\n\n        dispose: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.dispose && feature.dispose(ecModel, api);\n            });\n        }\n    });\n\n    function isUserFeatureName(featureName) {\n        return featureName.indexOf('my') === 0;\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/ToolboxView.js\n// module id = 1137\n// module chunks = 0 1 2","\n\n    var env = require('zrender/lib/core/env');\n    var lang = require('../../../lang').toolbox.saveAsImage;\n\n    function SaveAsImage (model) {\n        this.model = model;\n    }\n\n    SaveAsImage.defaultOption = {\n        show: true,\n        icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n        title: lang.title,\n        type: 'png',\n        // Default use option.backgroundColor\n        // backgroundColor: '#fff',\n        name: '',\n        excludeComponents: ['toolbox'],\n        pixelRatio: 1,\n        lang: lang.lang.slice()\n    };\n\n    SaveAsImage.prototype.unusable = !env.canvasSupported;\n\n    var proto = SaveAsImage.prototype;\n\n    proto.onclick = function (ecModel, api) {\n        var model = this.model;\n        var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n        var $a = document.createElement('a');\n        var type = model.get('type', true) || 'png';\n        $a.download = title + '.' + type;\n        $a.target = '_blank';\n        var url = api.getConnectedDataURL({\n            type: type,\n            backgroundColor: model.get('backgroundColor', true)\n                || ecModel.get('backgroundColor') || '#fff',\n            excludeComponents: model.get('excludeComponents'),\n            pixelRatio: model.get('pixelRatio')\n        });\n        $a.href = url;\n        // Chrome and Firefox\n        if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n            var evt = new MouseEvent('click', {\n                view: window,\n                bubbles: true,\n                cancelable: false\n            });\n            $a.dispatchEvent(evt);\n        }\n        // IE\n        else {\n            if (window.navigator.msSaveOrOpenBlob) {\n                var bstr = atob(url.split(',')[1]);\n                var n = bstr.length;\n                var u8arr = new Uint8Array(n);\n                while(n--) {\n                    u8arr[n] = bstr.charCodeAt(n);\n                }\n                var blob = new Blob([u8arr]);\n                window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n            }\n            else {\n                var lang = model.get('lang');\n                var html = '' +\n                    '<body style=\"margin:0;\">' +\n                    '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + ((lang && lang[0]) || '') + '\" />' +\n                    '</body>';\n                var tab = window.open();\n                tab.document.write(html);\n            }\n        }\n    };\n\n    require('../featureManager').register(\n        'saveAsImage', SaveAsImage\n    );\n\n    module.exports = SaveAsImage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/SaveAsImage.js\n// module id = 1138\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var lang = require('../../../lang').toolbox.magicType;\n\n    function MagicType(model) {\n        this.model = model;\n    }\n\n    MagicType.defaultOption = {\n        show: true,\n        type: [],\n        // Icon group\n        icon: {\n            line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n            bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n            stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z', // jshint ignore:line\n            tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n        },\n        // `line`, `bar`, `stack`, `tiled`\n        title: zrUtil.clone(lang.title),\n        option: {},\n        seriesIndex: {}\n    };\n\n    var proto = MagicType.prototype;\n\n    proto.getIcons = function () {\n        var model = this.model;\n        var availableIcons = model.get('icon');\n        var icons = {};\n        zrUtil.each(model.get('type'), function (type) {\n            if (availableIcons[type]) {\n                icons[type] = availableIcons[type];\n            }\n        });\n        return icons;\n    };\n\n    var seriesOptGenreator = {\n        'line': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'line',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.line') || {}, true);\n            }\n        },\n        'bar': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'bar',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.bar') || {}, true);\n            }\n        },\n        'stack': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: '__ec_magicType_stack__'\n                }, model.get('option.stack') || {}, true);\n            }\n        },\n        'tiled': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: ''\n                }, model.get('option.tiled') || {}, true);\n            }\n        }\n    };\n\n    var radioTypes = [\n        ['line', 'bar'],\n        ['stack', 'tiled']\n    ];\n\n    proto.onclick = function (ecModel, api, type) {\n        var model = this.model;\n        var seriesIndex = model.get('seriesIndex.' + type);\n        // Not supported magicType\n        if (!seriesOptGenreator[type]) {\n            return;\n        }\n        var newOption = {\n            series: []\n        };\n        var generateNewSeriesTypes = function (seriesModel) {\n            var seriesType = seriesModel.subType;\n            var seriesId = seriesModel.id;\n            var newSeriesOpt = seriesOptGenreator[type](\n                seriesType, seriesId, seriesModel, model\n            );\n            if (newSeriesOpt) {\n                // PENDING If merge original option?\n                zrUtil.defaults(newSeriesOpt, seriesModel.option);\n                newOption.series.push(newSeriesOpt);\n            }\n            // Modify boundaryGap\n            var coordSys = seriesModel.coordinateSystem;\n            if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n                var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n                if (categoryAxis) {\n                    var axisDim = categoryAxis.dim;\n                    var axisType = axisDim + 'Axis';\n                    var axisModel = ecModel.queryComponents({\n                        mainType: axisType,\n                        index: seriesModel.get(name + 'Index'),\n                        id: seriesModel.get(name + 'Id')\n                    })[0];\n                    var axisIndex = axisModel.componentIndex;\n\n                    newOption[axisType] = newOption[axisType] || [];\n                    for (var i = 0; i <= axisIndex; i++) {\n                        newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n                    }\n                    newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n                }\n            }\n        };\n\n        zrUtil.each(radioTypes, function (radio) {\n            if (zrUtil.indexOf(radio, type) >= 0) {\n                zrUtil.each(radio, function (item) {\n                    model.setIconStatus(item, 'normal');\n                });\n            }\n        });\n\n        model.setIconStatus(type, 'emphasis');\n\n        ecModel.eachComponent(\n            {\n                mainType: 'series',\n                query: seriesIndex == null ? null : {\n                    seriesIndex: seriesIndex\n                }\n            }, generateNewSeriesTypes\n        );\n        api.dispatchAction({\n            type: 'changeMagicType',\n            currentType: type,\n            newOption: newOption\n        });\n    };\n\n    var echarts = require('../../../echarts');\n    echarts.registerAction({\n        type: 'changeMagicType',\n        event: 'magicTypeChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        ecModel.mergeOption(payload.newOption);\n    });\n\n    require('../featureManager').register('magicType', MagicType);\n\n    module.exports = MagicType;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/MagicType.js\n// module id = 1139\n// module chunks = 0 1 2","/**\n * @module echarts/component/toolbox/feature/DataView\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var eventTool = require('zrender/lib/core/event');\n    var lang = require('../../../lang').toolbox.dataView;\n\n    var BLOCK_SPLITER = new Array(60).join('-');\n    var ITEM_SPLITER = '\\t';\n    /**\n     * Group series into two types\n     *  1. on category axis, like line, bar\n     *  2. others, like scatter, pie\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object}\n     * @inner\n     */\n    function groupSeries(ecModel) {\n        var seriesGroupByCategoryAxis = {};\n        var otherSeries = [];\n        var meta = [];\n        ecModel.eachRawSeries(function (seriesModel) {\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n                var baseAxis = coordSys.getBaseAxis();\n                if (baseAxis.type === 'category') {\n                    var key = baseAxis.dim + '_' + baseAxis.index;\n                    if (!seriesGroupByCategoryAxis[key]) {\n                        seriesGroupByCategoryAxis[key] = {\n                            categoryAxis: baseAxis,\n                            valueAxis: coordSys.getOtherAxis(baseAxis),\n                            series: []\n                        };\n                        meta.push({\n                            axisDim: baseAxis.dim,\n                            axisIndex: baseAxis.index\n                        });\n                    }\n                    seriesGroupByCategoryAxis[key].series.push(seriesModel);\n                }\n                else {\n                    otherSeries.push(seriesModel);\n                }\n            }\n            else {\n                otherSeries.push(seriesModel);\n            }\n        });\n\n        return {\n            seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n            other: otherSeries,\n            meta: meta\n        };\n    }\n\n    /**\n     * Assemble content of series on cateogory axis\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleSeriesWithCategoryAxis(series) {\n        var tables = [];\n        zrUtil.each(series, function (group, key) {\n            var categoryAxis = group.categoryAxis;\n            var valueAxis = group.valueAxis;\n            var valueAxisDim = valueAxis.dim;\n\n            var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n                return series.name;\n            }));\n            var columns = [categoryAxis.model.getCategories()];\n            zrUtil.each(group.series, function (series) {\n                columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n                    return val;\n                }));\n            });\n            // Assemble table content\n            var lines = [headers.join(ITEM_SPLITER)];\n            for (var i = 0; i < columns[0].length; i++) {\n                var items = [];\n                for (var j = 0; j < columns.length; j++) {\n                    items.push(columns[j][i]);\n                }\n                lines.push(items.join(ITEM_SPLITER));\n            }\n            tables.push(lines.join('\\n'));\n        });\n        return tables.join('\\n\\n' +  BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * Assemble content of other series\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleOtherSeries(series) {\n        return zrUtil.map(series, function (series) {\n            var data = series.getRawData();\n            var lines = [series.name];\n            var vals = [];\n            data.each(data.dimensions, function () {\n                var argLen = arguments.length;\n                var dataIndex = arguments[argLen - 1];\n                var name = data.getName(dataIndex);\n                for (var i = 0; i < argLen - 1; i++) {\n                    vals[i] = arguments[i];\n                }\n                lines.push((name ? (name + ITEM_SPLITER) : '') + vals.join(ITEM_SPLITER));\n            });\n            return lines.join('\\n');\n        }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * @param {module:echarts/model/Global}\n     * @return {Object}\n     * @inner\n     */\n    function getContentFromModel(ecModel) {\n\n        var result = groupSeries(ecModel);\n\n        return {\n            value: zrUtil.filter([\n                    assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis),\n                    assembleOtherSeries(result.other)\n                ], function (str) {\n                    return str.replace(/[\\n\\t\\s]/g, '');\n                }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n\n            meta: result.meta\n        };\n    }\n\n\n    function trim(str) {\n        return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n    /**\n     * If a block is tsv format\n     */\n    function isTSVFormat(block) {\n        // Simple method to find out if a block is tsv format\n        var firstLine = block.slice(0, block.indexOf('\\n'));\n        if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n            return true;\n        }\n    }\n\n    var itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n    /**\n     * @param {string} tsv\n     * @return {Object}\n     */\n    function parseTSVContents(tsv) {\n        var tsvLines = tsv.split(/\\n+/g);\n        var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n\n        var categories = [];\n        var series = zrUtil.map(headers, function (header) {\n            return {\n                name: header,\n                data: []\n            };\n        });\n        for (var i = 0; i < tsvLines.length; i++) {\n            var items = trim(tsvLines[i]).split(itemSplitRegex);\n            categories.push(items.shift());\n            for (var j = 0; j < items.length; j++) {\n                series[j] && (series[j].data[i] = items[j]);\n            }\n        }\n        return {\n            series: series,\n            categories: categories\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @return {Array.<Object>}\n     * @inner\n     */\n    function parseListContents(str) {\n        var lines = str.split(/\\n+/g);\n        var seriesName = trim(lines.shift());\n\n        var data = [];\n        for (var i = 0; i < lines.length; i++) {\n            var items = trim(lines[i]).split(itemSplitRegex);\n            var name = '';\n            var value;\n            var hasName = false;\n            if (isNaN(items[0])) { // First item is name\n                hasName = true;\n                name = items[0];\n                items = items.slice(1);\n                data[i] = {\n                    name: name,\n                    value: []\n                };\n                value = data[i].value;\n            }\n            else {\n                value = data[i] = [];\n            }\n            for (var j = 0; j < items.length; j++) {\n                value.push(+items[j]);\n            }\n            if (value.length === 1) {\n                hasName ? (data[i].value = value[0]) : (data[i] = value[0]);\n            }\n        }\n\n        return {\n            name: seriesName,\n            data: data\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @param {Array.<Object>} blockMetaList\n     * @return {Object}\n     * @inner\n     */\n    function parseContents(str, blockMetaList) {\n        var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n        var newOption = {\n            series: []\n        };\n        zrUtil.each(blocks, function (block, idx) {\n            if (isTSVFormat(block)) {\n                var result = parseTSVContents(block);\n                var blockMeta = blockMetaList[idx];\n                var axisKey = blockMeta.axisDim + 'Axis';\n\n                if (blockMeta) {\n                    newOption[axisKey] = newOption[axisKey] || [];\n                    newOption[axisKey][blockMeta.axisIndex] = {\n                        data: result.categories\n                    };\n                    newOption.series = newOption.series.concat(result.series);\n                }\n            }\n            else {\n                var result = parseListContents(block);\n                newOption.series.push(result);\n            }\n        });\n        return newOption;\n    }\n\n    /**\n     * @alias {module:echarts/component/toolbox/feature/DataView}\n     * @constructor\n     * @param {module:echarts/model/Model} model\n     */\n    function DataView(model) {\n\n        this._dom = null;\n\n        this.model = model;\n    }\n\n    DataView.defaultOption = {\n        show: true,\n        readOnly: false,\n        optionToContent: null,\n        contentToOption: null,\n\n        icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n        title: zrUtil.clone(lang.title),\n        lang: zrUtil.clone(lang.lang),\n        backgroundColor: '#fff',\n        textColor: '#000',\n        textareaColor: '#fff',\n        textareaBorderColor: '#333',\n        buttonColor: '#c23531',\n        buttonTextColor: '#fff'\n    };\n\n    DataView.prototype.onclick = function (ecModel, api) {\n        var container = api.getDom();\n        var model = this.model;\n        if (this._dom) {\n            container.removeChild(this._dom);\n        }\n        var root = document.createElement('div');\n        root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n        root.style.backgroundColor = model.get('backgroundColor') || '#fff';\n\n        // Create elements\n        var header = document.createElement('h4');\n        var lang = model.get('lang') || [];\n        header.innerHTML = lang[0] || model.get('title');\n        header.style.cssText = 'margin: 10px 20px;';\n        header.style.color = model.get('textColor');\n\n        var viewMain = document.createElement('div');\n        var textarea = document.createElement('textarea');\n        viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n\n        var optionToContent = model.get('optionToContent');\n        var contentToOption = model.get('contentToOption');\n        var result = getContentFromModel(ecModel);\n        if (typeof optionToContent === 'function') {\n            var htmlOrDom = optionToContent(api.getOption());\n            if (typeof htmlOrDom === 'string') {\n                viewMain.innerHTML = htmlOrDom;\n            }\n            else if (zrUtil.isDom(htmlOrDom)) {\n                viewMain.appendChild(htmlOrDom);\n            }\n        }\n        else {\n            // Use default textarea\n            viewMain.appendChild(textarea);\n            textarea.readOnly = model.get('readOnly');\n            textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n            textarea.style.color = model.get('textColor');\n            textarea.style.borderColor = model.get('textareaBorderColor');\n            textarea.style.backgroundColor = model.get('textareaColor');\n            textarea.value = result.value;\n        }\n\n        var blockMetaList = result.meta;\n\n        var buttonContainer = document.createElement('div');\n        buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n\n        var buttonStyle = 'float:right;margin-right:20px;border:none;'\n            + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n        var closeButton = document.createElement('div');\n        var refreshButton = document.createElement('div');\n\n        buttonStyle += ';background-color:' + model.get('buttonColor');\n        buttonStyle += ';color:' + model.get('buttonTextColor');\n\n        var self = this;\n\n        function close() {\n            container.removeChild(root);\n            self._dom = null;\n        }\n        eventTool.addEventListener(closeButton, 'click', close);\n\n        eventTool.addEventListener(refreshButton, 'click', function () {\n            var newOption;\n            try {\n                if (typeof contentToOption === 'function') {\n                    newOption = contentToOption(viewMain, api.getOption());\n                }\n                else {\n                    newOption = parseContents(textarea.value, blockMetaList);\n                }\n            }\n            catch (e) {\n                close();\n                throw new Error('Data view format error ' + e);\n            }\n            if (newOption) {\n                api.dispatchAction({\n                    type: 'changeDataView',\n                    newOption: newOption\n                });\n            }\n\n            close();\n        });\n\n        closeButton.innerHTML = lang[1];\n        refreshButton.innerHTML = lang[2];\n        refreshButton.style.cssText = buttonStyle;\n        closeButton.style.cssText = buttonStyle;\n\n        !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n        buttonContainer.appendChild(closeButton);\n\n        // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n        eventTool.addEventListener(textarea, 'keydown', function (e) {\n            if ((e.keyCode || e.which) === 9) {\n                // get caret position/selection\n                var val = this.value;\n                var start = this.selectionStart;\n                var end = this.selectionEnd;\n\n                // set textarea value to: text before caret + tab + text after caret\n                this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end);\n\n                // put caret at right position again\n                this.selectionStart = this.selectionEnd = start + 1;\n\n                // prevent the focus lose\n                eventTool.stop(e);\n            }\n        });\n\n        root.appendChild(header);\n        root.appendChild(viewMain);\n        root.appendChild(buttonContainer);\n\n        viewMain.style.height = (container.clientHeight - 80) + 'px';\n\n        container.appendChild(root);\n        this._dom = root;\n    };\n\n    DataView.prototype.remove = function (ecModel, api) {\n        this._dom && api.getDom().removeChild(this._dom);\n    };\n\n    DataView.prototype.dispose = function (ecModel, api) {\n        this.remove(ecModel, api);\n    };\n\n    /**\n     * @inner\n     */\n    function tryMergeDataOption(newData, originalData) {\n        return zrUtil.map(newData, function (newVal, idx) {\n            var original = originalData && originalData[idx];\n            if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n                if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n                    newVal = newVal.value;\n                }\n                // Original data has option\n                return zrUtil.defaults({\n                    value: newVal\n                }, original);\n            }\n            else {\n                return newVal;\n            }\n        });\n    }\n\n    require('../featureManager').register('dataView', DataView);\n\n    require('../../../echarts').registerAction({\n        type: 'changeDataView',\n        event: 'dataViewChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        var newSeriesOptList = [];\n        zrUtil.each(payload.newOption.series, function (seriesOpt) {\n            var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n            if (!seriesModel) {\n                // New created series\n                // Geuss the series type\n                newSeriesOptList.push(zrUtil.extend({\n                    // Default is scatter\n                    type: 'scatter'\n                }, seriesOpt));\n            }\n            else {\n                var originalData = seriesModel.get('data');\n                newSeriesOptList.push({\n                    name: seriesOpt.name,\n                    data: tryMergeDataOption(seriesOpt.data, originalData)\n                });\n            }\n        });\n\n        ecModel.mergeOption(zrUtil.defaults({\n            series: newSeriesOptList\n        }, payload.newOption));\n    });\n\n    module.exports = DataView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/DataView.js\n// module id = 1140\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BrushController = require('../../helper/BrushController');\n    var BrushTargetManager = require('../../helper/BrushTargetManager');\n    var history = require('../../dataZoom/history');\n    var sliderMove = require('../../helper/sliderMove');\n    var lang = require('../../../lang').toolbox.dataZoom;\n\n    var each = zrUtil.each;\n\n    // Use dataZoomSelect\n    require('../../dataZoomSelect');\n\n    // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n    var DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\n    function DataZoom(model, ecModel, api) {\n\n        /**\n         * @private\n         * @type {module:echarts/component/helper/BrushController}\n         */\n        (this._brushController = new BrushController(api.getZr()))\n            .on('brush', zrUtil.bind(this._onBrush, this))\n            .mount();\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._isZoomActive;\n    }\n\n    DataZoom.defaultOption = {\n        show: true,\n        // Icon group\n        icon: {\n            zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n            back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n        },\n        // `zoom`, `back`\n        title: zrUtil.clone(lang.title)\n    };\n\n    var proto = DataZoom.prototype;\n\n    proto.render = function (featureModel, ecModel, api, payload) {\n        this.model = featureModel;\n        this.ecModel = ecModel;\n        this.api = api;\n\n        updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n        updateBackBtnStatus(featureModel, ecModel);\n    };\n\n    proto.onclick = function (ecModel, api, type) {\n        handlers[type].call(this);\n    };\n\n    proto.remove = function (ecModel, api) {\n        this._brushController.unmount();\n    };\n\n    proto.dispose = function (ecModel, api) {\n        this._brushController.dispose();\n    };\n\n    /**\n     * @private\n     */\n    var handlers = {\n\n        zoom: function () {\n            var nextActive = !this._isZoomActive;\n\n            this.api.dispatchAction({\n                type: 'takeGlobalCursor',\n                key: 'dataZoomSelect',\n                dataZoomSelectActive: nextActive\n            });\n        },\n\n        back: function () {\n            this._dispatchZoomAction(history.pop(this.ecModel));\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._onBrush = function (areas, opt) {\n        if (!opt.isEnd || !areas.length) {\n            return;\n        }\n        var snapshot = {};\n        var ecModel = this.ecModel;\n\n        this._brushController.updateCovers([]); // remove cover\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(this.model.option), ecModel, {include: ['grid']}\n        );\n        brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            if (coordSys.type !== 'cartesian2d') {\n                return;\n            }\n\n            var brushType = area.brushType;\n            if (brushType === 'rect') {\n                setBatch('x', coordSys, coordRange[0]);\n                setBatch('y', coordSys, coordRange[1]);\n            }\n            else {\n                setBatch(({lineX: 'x', lineY: 'y'})[brushType], coordSys, coordRange);\n            }\n        });\n\n        history.push(ecModel, snapshot);\n\n        this._dispatchZoomAction(snapshot);\n\n        function setBatch(dimName, coordSys, minMax) {\n            var axis = coordSys.getAxis(dimName);\n            var axisModel = axis.model;\n            var dataZoomModel = findDataZoom(dimName, axisModel, ecModel);\n\n            // Restrict range.\n            var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n            if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n                minMax = sliderMove(\n                    0, minMax.slice(), axis.scale.getExtent(), 0,\n                    minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan\n                );\n            }\n\n            dataZoomModel && (snapshot[dataZoomModel.id] = {\n                dataZoomId: dataZoomModel.id,\n                startValue: minMax[0],\n                endValue: minMax[1]\n            });\n        }\n\n        function findDataZoom(dimName, axisModel, ecModel) {\n            var found;\n            ecModel.eachComponent({mainType: 'dataZoom', subType: 'select'}, function (dzModel) {\n                var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n                has && (found = dzModel);\n            });\n            return found;\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._dispatchZoomAction = function (snapshot) {\n        var batch = [];\n\n        // Convert from hash map to array.\n        each(snapshot, function (batchItem, dataZoomId) {\n            batch.push(zrUtil.clone(batchItem));\n        });\n\n        batch.length && this.api.dispatchAction({\n            type: 'dataZoom',\n            from: this.uid,\n            batch: batch\n        });\n    };\n\n    function retrieveAxisSetting(option) {\n        var setting = {};\n        // Compatible with previous setting: null => all axis, false => no axis.\n        zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n            setting[name] = option[name];\n            setting[name] == null && (setting[name] = 'all');\n            (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n        });\n        return setting;\n    }\n\n    function updateBackBtnStatus(featureModel, ecModel) {\n        featureModel.setIconStatus(\n            'back',\n            history.count(ecModel) > 1 ? 'emphasis' : 'normal'\n        );\n    }\n\n    function updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n        var zoomActive = view._isZoomActive;\n\n        if (payload && payload.type === 'takeGlobalCursor') {\n            zoomActive = payload.key === 'dataZoomSelect'\n                ? payload.dataZoomSelectActive : false;\n        }\n\n        view._isZoomActive = zoomActive;\n\n        featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(featureModel.option), ecModel, {include: ['grid']}\n        );\n\n        view._brushController\n            .setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n                return (targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared)\n                    ? 'lineX'\n                    : (!targetInfo.xAxisDeclared && targetInfo.yAxisDeclared)\n                    ? 'lineY'\n                    : 'rect';\n            }))\n            .enableBrush(\n                zoomActive\n                ? {\n                    brushType: 'auto',\n                    brushStyle: {\n                        // FIXME user customized?\n                        lineWidth: 0,\n                        fill: 'rgba(0,0,0,0.2)'\n                    }\n                }\n                : false\n            );\n    }\n\n\n    require('../featureManager').register('dataZoom', DataZoom);\n\n\n    // Create special dataZoom option for select\n    require('../../../echarts').registerPreprocessor(function (option) {\n        if (!option) {\n            return;\n        }\n\n        var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n        if (!zrUtil.isArray(dataZoomOpts)) {\n            option.dataZoom = dataZoomOpts = [dataZoomOpts];\n        }\n\n        var toolboxOpt = option.toolbox;\n        if (toolboxOpt) {\n            // Assume there is only one toolbox\n            if (zrUtil.isArray(toolboxOpt)) {\n                toolboxOpt = toolboxOpt[0];\n            }\n\n            if (toolboxOpt && toolboxOpt.feature) {\n                var dataZoomOpt = toolboxOpt.feature.dataZoom;\n                addForAxis('xAxis', dataZoomOpt);\n                addForAxis('yAxis', dataZoomOpt);\n            }\n        }\n\n        function addForAxis(axisName, dataZoomOpt) {\n            if (!dataZoomOpt) {\n                return;\n            }\n\n            // Try not to modify model, because it is not merged yet.\n            var axisIndicesName = axisName + 'Index';\n            var givenAxisIndices = dataZoomOpt[axisIndicesName];\n            if (givenAxisIndices != null\n                && givenAxisIndices != 'all'\n                && !zrUtil.isArray(givenAxisIndices)\n            ) {\n                givenAxisIndices = (givenAxisIndices === false || givenAxisIndices === 'none') ? [] : [givenAxisIndices];\n            }\n\n            forEachComponent(axisName, function (axisOpt, axisIndex) {\n                if (givenAxisIndices != null\n                    && givenAxisIndices != 'all'\n                    && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1\n                ) {\n                    return;\n                }\n                var newOpt = {\n                    type: 'select',\n                    $fromToolbox: true,\n                    // Id for merge mapping.\n                    id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n                };\n                // FIXME\n                // Only support one axis now.\n                newOpt[axisIndicesName] = axisIndex;\n                dataZoomOpts.push(newOpt);\n            });\n        }\n\n        function forEachComponent(mainType, cb) {\n            var opts = option[mainType];\n            if (!zrUtil.isArray(opts)) {\n                opts = opts ? [opts] : [];\n            }\n            each(opts, cb);\n        }\n    });\n\n    module.exports = DataZoom;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/DataZoom.js\n// module id = 1141\n// module chunks = 0 1 2","/**\n * DataZoom component entry\n */\n\n\n    require('./dataZoom/typeDefaulter');\n\n    require('./dataZoom/DataZoomModel');\n    require('./dataZoom/DataZoomView');\n\n    require('./dataZoom/SelectZoomModel');\n    require('./dataZoom/SelectZoomView');\n\n    require('./dataZoom/dataZoomProcessor');\n    require('./dataZoom/dataZoomAction');\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoomSelect.js\n// module id = 1142\n// module chunks = 0 1 2","/**\n * @file Axis operator\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../../util/number');\n    var helper = require('./helper');\n    var each = zrUtil.each;\n    var asc = numberUtil.asc;\n\n    /**\n     * Operate single axis.\n     * One axis can only operated by one axis operator.\n     * Different dataZoomModels may be defined to operate the same axis.\n     * (i.e. 'inside' data zoom and 'slider' data zoom components)\n     * So dataZoomModels share one axisProxy in that case.\n     *\n     * @class\n     */\n    var AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._dimName = dimName;\n\n        /**\n         * @private\n         */\n        this._axisIndex = axisIndex;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._valueWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._percentWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._dataExtent;\n\n        /**\n         * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n         * @private\n         * @type {Object}\n         */\n        this._minMaxSpan;\n\n        /**\n         * @readOnly\n         * @type {module: echarts/model/Global}\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @private\n         * @type {module: echarts/component/dataZoom/DataZoomModel}\n         */\n        this._dataZoomModel = dataZoomModel;\n    };\n\n    AxisProxy.prototype = {\n\n        constructor: AxisProxy,\n\n        /**\n         * Whether the axisProxy is hosted by dataZoomModel.\n         *\n         * @public\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         * @return {boolean}\n         */\n        hostedBy: function (dataZoomModel) {\n            return this._dataZoomModel === dataZoomModel;\n        },\n\n        /**\n         * @return {Array.<number>} Value can only be NaN or finite value.\n         */\n        getDataValueWindow: function () {\n            return this._valueWindow.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getDataPercentWindow: function () {\n            return this._percentWindow.slice();\n        },\n\n        /**\n         * @public\n         * @param {number} axisIndex\n         * @return {Array} seriesModels\n         */\n        getTargetSeriesModels: function () {\n            var seriesModels = [];\n            var ecModel = this.ecModel;\n\n            ecModel.eachSeries(function (seriesModel) {\n                if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n                    var dimName = this._dimName;\n                    var axisModel = ecModel.queryComponents({\n                        mainType: dimName + 'Axis',\n                        index: seriesModel.get(dimName + 'AxisIndex'),\n                        id: seriesModel.get(dimName + 'AxisId')\n                    })[0];\n                    if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n                        seriesModels.push(seriesModel);\n                    }\n                }\n            }, this);\n\n            return seriesModels;\n        },\n\n        getAxisModel: function () {\n            return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n        },\n\n        getOtherAxisModel: function () {\n            var axisDim = this._dimName;\n            var ecModel = this.ecModel;\n            var axisModel = this.getAxisModel();\n            var isCartesian = axisDim === 'x' || axisDim === 'y';\n            var otherAxisDim;\n            var coordSysIndexName;\n            if (isCartesian) {\n                coordSysIndexName = 'gridIndex';\n                otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n            }\n            else {\n                coordSysIndexName = 'polarIndex';\n                otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n            }\n            var foundOtherAxisModel;\n            ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n                if ((otherAxisModel.get(coordSysIndexName) || 0)\n                    === (axisModel.get(coordSysIndexName) || 0)\n                ) {\n                    foundOtherAxisModel = otherAxisModel;\n                }\n            });\n            return foundOtherAxisModel;\n        },\n\n        getMinMaxSpan: function () {\n            return zrUtil.clone(this._minMaxSpan);\n        },\n\n        /**\n         * Only calculate by given range and this._dataExtent, do not change anything.\n         *\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         */\n        calculateDataWindow: function (opt) {\n            var dataExtent = this._dataExtent;\n            var axisModel = this.getAxisModel();\n            var scale = axisModel.axis.scale;\n            var rangePropMode = this._dataZoomModel.getRangePropMode();\n            var percentExtent = [0, 100];\n            var percentWindow = [\n                opt.start,\n                opt.end\n            ];\n            var valueWindow = [];\n\n            each(['startValue', 'endValue'], function (prop) {\n                valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n            });\n\n            // Normalize bound.\n            each([0, 1], function (idx) {\n                var boundValue = valueWindow[idx];\n                var boundPercent = percentWindow[idx];\n\n                // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n                // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n                // for cases that a dataZoom component controls multiple axes with different\n                // unit or extent, and the latter one is suitable for accurate zoom by pixel\n                // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n                // but it is awkward that `percentProp` can not be obtained from `valueProp`\n                // accurately (because all of values that are overflow the `dataExtent` will\n                // be calculated to percent '100%'). So we have to use\n                // `dataZoom.getRangePropMode()` to mark which prop is used.\n                // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n                // it remains its original value.\n\n                if (rangePropMode[idx] === 'percent') {\n                    if (boundPercent == null) {\n                        boundPercent = percentExtent[idx];\n                    }\n                    // Use scale.parse to math round for category or time axis.\n                    boundValue = scale.parse(numberUtil.linearMap(\n                        boundPercent, percentExtent, dataExtent, true\n                    ));\n                }\n                else {\n                    // Calculating `percent` from `value` may be not accurate, because\n                    // This calculation can not be inversed, because all of values that\n                    // are overflow the `dataExtent` will be calculated to percent '100%'\n                    boundPercent = numberUtil.linearMap(\n                        boundValue, dataExtent, percentExtent, true\n                    );\n                }\n\n                // valueWindow[idx] = round(boundValue);\n                // percentWindow[idx] = round(boundPercent);\n                valueWindow[idx] = boundValue;\n                percentWindow[idx] = boundPercent;\n            });\n\n            return {\n                valueWindow: asc(valueWindow),\n                percentWindow: asc(percentWindow)\n            };\n        },\n\n        /**\n         * Notice: reset should not be called before series.restoreData() called,\n         * so it is recommanded to be called in \"process stage\" but not \"model init\n         * stage\".\n         *\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        reset: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            // Culculate data window and data extent, and record them.\n            this._dataExtent = calculateDataExtent(\n                this, this._dimName, this.getTargetSeriesModels()\n            );\n\n            var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n\n            this._valueWindow = dataWindow.valueWindow;\n            this._percentWindow = dataWindow.percentWindow;\n\n            setMinMaxSpan(this);\n\n            // Update axis setting then.\n            setAxisModel(this);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        restore: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            this._valueWindow = this._percentWindow = null;\n            setAxisModel(this, true);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        filterData: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            var axisDim = this._dimName;\n            var seriesModels = this.getTargetSeriesModels();\n            var filterMode = dataZoomModel.get('filterMode');\n            var valueWindow = this._valueWindow;\n\n            if (filterMode === 'none') {\n                return;\n            }\n\n            // FIXME\n            // Toolbox may has dataZoom injected. And if there are stacked bar chart\n            // with NaN data, NaN will be filtered and stack will be wrong.\n            // So we need to force the mode to be set empty.\n            // In fect, it is not a big deal that do not support filterMode-'filter'\n            // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n            // selection\" some day, which might need \"adapt to data extent on the\n            // otherAxis\", which is disabled by filterMode-'empty'.\n            var otherAxisModel = this.getOtherAxisModel();\n            if (dataZoomModel.get('$fromToolbox')\n                && otherAxisModel\n                && otherAxisModel.get('type') === 'category'\n            ) {\n                filterMode = 'empty';\n            }\n\n            // Process series data\n            each(seriesModels, function (seriesModel) {\n                var seriesData = seriesModel.getData();\n                var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n                if (filterMode === 'weakFilter') {\n                    seriesData && seriesData.filterSelf(function (dataIndex) {\n                        var leftOut;\n                        var rightOut;\n                        var hasValue;\n                        for (var i = 0; i < dataDims.length; i++) {\n                            var value = seriesData.get(dataDims[i], dataIndex);\n                            var thisHasValue = !isNaN(value);\n                            var thisLeftOut = value < valueWindow[0];\n                            var thisRightOut = value > valueWindow[1];\n                            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n                                return true;\n                            }\n                            thisHasValue && (hasValue = true);\n                            thisLeftOut && (leftOut = true);\n                            thisRightOut && (rightOut = true);\n                        }\n                        // If both left out and right out, do not filter.\n                        return hasValue && leftOut && rightOut;\n                    });\n                }\n                else {\n                    seriesData && each(dataDims, function (dim) {\n                        if (filterMode === 'empty') {\n                            seriesModel.setData(\n                                seriesData.map(dim, function (value) {\n                                    return !isInWindow(value) ? NaN : value;\n                                })\n                            );\n                        }\n                        else {\n                            seriesData.filterSelf(dim, isInWindow);\n                        }\n                    });\n                }\n            });\n\n            function isInWindow(value) {\n                return value >= valueWindow[0] && value <= valueWindow[1];\n            }\n        }\n    };\n\n    function calculateDataExtent(axisProxy, axisDim, seriesModels) {\n        var dataExtent = [Infinity, -Infinity];\n\n        each(seriesModels, function (seriesModel) {\n            var seriesData = seriesModel.getData();\n            if (seriesData) {\n                each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    var seriesExtent = seriesData.getDataExtent(dim);\n                    seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n                    seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n                });\n            }\n        });\n\n        if (dataExtent[1] < dataExtent[0]) {\n            dataExtent = [NaN, NaN];\n        }\n\n        // It is important to get \"consistent\" extent when more then one axes is\n        // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n        // when zooming. But it is difficult to know what is \"consistent\", considering\n        // axes have different type or even different meanings (For example, two\n        // time axes are used to compare data of the same date in different years).\n        // So basically dataZoom just obtains extent by series.data (in category axis\n        // extent can be obtained from axis.data).\n        // Nevertheless, user can set min/max/scale on axes to make extent of axes\n        // consistent.\n        fixExtentByAxis(axisProxy, dataExtent);\n\n        return dataExtent;\n    }\n\n    function fixExtentByAxis(axisProxy, dataExtent) {\n        var axisModel = axisProxy.getAxisModel();\n        var min = axisModel.getMin(true);\n\n        // For category axis, if min/max/scale are not set, extent is determined\n        // by axis.data by default.\n        var isCategoryAxis = axisModel.get('type') === 'category';\n        var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n        if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n            dataExtent[0] = min;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n        }\n\n        var max = axisModel.getMax(true);\n        if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n            dataExtent[1] = max;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n        }\n\n        if (!axisModel.get('scale', true)) {\n            dataExtent[0] > 0 && (dataExtent[0] = 0);\n            dataExtent[1] < 0 && (dataExtent[1] = 0);\n        }\n\n        // For value axis, if min/max/scale are not set, we just use the extent obtained\n        // by series data, which may be a little different from the extent calculated by\n        // `axisHelper.getScaleExtent`. But the different just affects the experience a\n        // little when zooming. So it will not be fixed until some users require it strongly.\n\n        return dataExtent;\n    }\n\n    function setAxisModel(axisProxy, isRestore) {\n        var axisModel = axisProxy.getAxisModel();\n\n        var percentWindow = axisProxy._percentWindow;\n        var valueWindow = axisProxy._valueWindow;\n\n        if (!percentWindow) {\n            return;\n        }\n\n        // [0, 500]: arbitrary value, guess axis extent.\n        var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n        precision = Math.min(precision, 20);\n        // isRestore or isFull\n        var useOrigin = isRestore || (percentWindow[0] === 0 && percentWindow[1] === 100);\n\n        axisModel.setRange(\n            useOrigin ? null : +valueWindow[0].toFixed(precision),\n            useOrigin ? null : +valueWindow[1].toFixed(precision)\n        );\n    }\n\n    function setMinMaxSpan(axisProxy) {\n        var minMaxSpan = axisProxy._minMaxSpan = {};\n        var dataZoomModel = axisProxy._dataZoomModel;\n\n        each(['min', 'max'], function (minMax) {\n            minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span');\n\n            // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n            var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n            if (valueSpan != null) {\n                minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n\n                valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n                if (valueSpan != null) {\n                    minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(\n                        valueSpan, axisProxy._dataExtent, [0, 100], true\n                    );\n                }\n            }\n        });\n    }\n\n    module.exports = AxisProxy;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/AxisProxy.js\n// module id = 1143\n// module chunks = 0 1 2","/**\n * @file Data zoom model\n */\n\n\n    var DataZoomModel = require('./DataZoomModel');\n\n    module.exports = DataZoomModel.extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SelectZoomModel.js\n// module id = 1144\n// module chunks = 0 1 2","\n\n    module.exports = require('./DataZoomView').extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/dataZoom/SelectZoomView.js\n// module id = 1145\n// module chunks = 0 1 2","'use strict';\n\n\n    var history = require('../../dataZoom/history');\n    var lang = require('../../../lang').toolbox.restore;\n\n    function Restore(model) {\n        this.model = model;\n    }\n\n    Restore.defaultOption = {\n        show: true,\n        icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n        title: lang.title\n    };\n\n    var proto = Restore.prototype;\n\n    proto.onclick = function (ecModel, api, type) {\n        history.clear(ecModel);\n\n        api.dispatchAction({\n            type: 'restore',\n            from: this.uid\n        });\n    };\n\n\n    require('../featureManager').register('restore', Restore);\n\n\n    require('../../../echarts').registerAction(\n        {type: 'restore', event: 'restore', update: 'prepareAndUpdate'},\n        function (payload, ecModel) {\n            ecModel.resetOption('recreate');\n        }\n    );\n\n    module.exports = Restore;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/feature/Restore.js\n// module id = 1146\n// module chunks = 0 1 2","\n    var echarts = require('../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n    module.exports = function (seriesType, actionInfos) {\n        zrUtil.each(actionInfos, function (actionInfo) {\n            actionInfo.update = 'updateView';\n            /**\n             * @payload\n             * @property {string} seriesName\n             * @property {string} name\n             */\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\n                var selected = {};\n                ecModel.eachComponent(\n                    {mainType: 'series', subType: seriesType, query: payload},\n                    function (seriesModel) {\n                        if (seriesModel[actionInfo.method]) {\n                            seriesModel[actionInfo.method](\n                                payload.name,\n                                payload.dataIndex\n                            );\n                        }\n                        var data = seriesModel.getData();\n                        // Create selected map\n                        data.each(function (idx) {\n                            var name = data.getName(idx);\n                            selected[name] = seriesModel.isSelected(name)\n                                || false;\n                        });\n                    }\n                );\n                return {\n                    name: payload.name,\n                    selected: selected\n                };\n            });\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/action/createDataSelectAction.js\n// module id = 1150\n// module chunks = 0 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('./pie/PieSeries');\n    require('./pie/PieView');\n\n    require('../action/createDataSelectAction')('pie', [{\n        type: 'pieToggleSelect',\n        event: 'pieselectchanged',\n        method: 'toggleSelected'\n    }, {\n        type: 'pieSelect',\n        event: 'pieselected',\n        method: 'select'\n    }, {\n        type: 'pieUnSelect',\n        event: 'pieunselected',\n        method: 'unSelect'\n    }]);\n\n    echarts.registerVisual(zrUtil.curry(require('../visual/dataColor'), 'pie'));\n\n    echarts.registerLayout(zrUtil.curry(\n        require('./pie/pieLayout'), 'pie'\n    ));\n\n    echarts.registerProcessor(zrUtil.curry(require('../processor/dataFilter'), 'pie'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie.js\n// module id = 1158\n// module chunks = 0 2","'use strict';\n\n\n    var List = require('../../data/List');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var numberUtil = require('../../util/number');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n\n    var dataSelectableMixin = require('../../component/helper/selectableMixin');\n\n    var PieSeries = require('../../echarts').extendSeriesModel({\n\n        type: 'series.pie',\n\n        // Overwrite\n        init: function (option) {\n            PieSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n\n            this.updateSelectedMap(option.data);\n\n            this._defaultLabelLine(option);\n        },\n\n        // Overwrite\n        mergeOption: function (newOption) {\n            PieSeries.superCall(this, 'mergeOption', newOption);\n            this.updateSelectedMap(this.option.data);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n            // FIXME toFixed?\n\n            var valueList = [];\n            data.each('value', function (value) {\n                valueList.push(value);\n            });\n\n            params.percent = numberUtil.getPercentWithPrecision(\n                valueList,\n                dataIndex,\n                data.hostModel.get('percentPrecision')\n            );\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            radius: [0, '75%'],\n            // 默认顺时针\n            clockwise: true,\n            startAngle: 90,\n            // 最小角度改为0\n            minAngle: 0,\n            // 选中时扇区偏移量\n            selectedOffset: 10,\n            // 高亮扇区偏移量\n            hoverOffset: 10,\n\n            // If use strategy to avoid label overlapping\n            avoidLabelOverlap: true,\n            // 选择模式，默认关闭，可选single，multiple\n            // selectedMode: false,\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n            // roseType: null,\n\n            percentPrecision: 2,\n\n            // If still show when all data zero.\n            stillShowZeroSum: true,\n\n            // cursor: null,\n\n            label: {\n                normal: {\n                    // If rotate around circle\n                    rotate: false,\n                    show: true,\n                    // 'outer', 'inside', 'center'\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                    // 默认使用全局文本样式，详见TEXTSTYLE\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n                },\n                emphasis: {}\n            },\n            // Enabled when label.normal.position is 'outer'\n            labelLine: {\n                normal: {\n                    show: true,\n                    // 引导线两段中的第一段长度\n                    length: 15,\n                    // 引导线两段中的第二段长度\n                    length2: 15,\n                    smooth: false,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 1\n                },\n                emphasis: {}\n            },\n\n            // Animation type canbe expansion, scale\n            animationType: 'expansion',\n\n            animationEasing: 'cubicOut',\n\n            data: []\n        }\n    });\n\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\n    module.exports = PieSeries;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieSeries.js\n// module id = 1159\n// module chunks = 0 2","\n\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n        var data = seriesModel.getData();\n        var dataIndex = this.dataIndex;\n        var name = data.getName(dataIndex);\n        var selectedOffset = seriesModel.get('selectedOffset');\n\n        api.dispatchAction({\n            type: 'pieToggleSelect',\n            from: uid,\n            name: name,\n            seriesId: seriesModel.id\n        });\n\n        data.each(function (idx) {\n            toggleItemSelected(\n                data.getItemGraphicEl(idx),\n                data.getItemLayout(idx),\n                seriesModel.isSelected(data.getName(idx)),\n                selectedOffset,\n                hasAnimation\n            );\n        });\n    }\n\n    /**\n     * @param {module:zrender/graphic/Sector} el\n     * @param {Object} layout\n     * @param {boolean} isSelected\n     * @param {number} selectedOffset\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\n        var dx = Math.cos(midAngle);\n        var dy = Math.sin(midAngle);\n\n        var offset = isSelected ? selectedOffset : 0;\n        var position = [dx * offset, dy * offset];\n\n        hasAnimation\n            // animateTo will stop revious animation like update transition\n            ? el.animate()\n                .when(200, {\n                    position: position\n                })\n                .start('bounceOut')\n            : el.attr('position', position);\n    }\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function PiePiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var sector = new graphic.Sector({\n            z2: 2\n        });\n        var polyline = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(sector);\n        this.add(polyline);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            polyline.ignore = polyline.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            polyline.ignore = polyline.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var piePieceProto = PiePiece.prototype;\n\n    piePieceProto.updateData = function (data, idx, firstCreate) {\n\n        var sector = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var sectorShape = zrUtil.extend({}, layout);\n        sectorShape.label = null;\n\n        if (firstCreate) {\n            sector.setShape(sectorShape);\n\n            var animationType = seriesModel.getShallow('animationType');\n            if (animationType === 'scale') {\n                sector.shape.r = layout.r0;\n                graphic.initProps(sector, {\n                    shape: {\n                        r: layout.r\n                    }\n                }, seriesModel, idx);\n            }\n            // Expansion\n            else {\n                sector.shape.endAngle = layout.startAngle;\n                graphic.updateProps(sector, {\n                    shape: {\n                        endAngle: layout.endAngle\n                    }\n                }, seriesModel, idx);\n            }\n\n        }\n        else {\n            graphic.updateProps(sector, {\n                shape: sectorShape\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        sector.useStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'bevel',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle()\n            )\n        );\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && sector.attr('cursor', cursorStyle);\n\n        // Toggle selected\n        toggleItemSelected(\n            this,\n            data.getItemLayout(idx),\n            itemModel.get('selected'),\n            seriesModel.get('selectedOffset'),\n            seriesModel.get('animation')\n        );\n\n        function onEmphasis() {\n            // Sector may has animation of updating data. Force to move to the last frame\n            // Or it may stopped on the wrong shape\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r + seriesModel.get('hoverOffset')\n                }\n            }, 300, 'elasticOut');\n        }\n        function onNormal() {\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r\n                }\n            }, 300, 'elasticOut');\n        }\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n        if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n            sector\n                .on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    piePieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || [\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n                ]\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.setLabelStyle(\n            labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel,\n            {\n                labelFetcher: data.hostModel,\n                labelDataIndex: idx,\n                defaultText: data.getName(idx),\n                autoColor: visualColor,\n                useInsideStyle: !!labelLayout.inside\n            },\n            {\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.verticalAlign,\n                opacity: data.getItemVisual(idx, 'opacity')\n            }\n        );\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor,\n            opacity: data.getItemVisual(idx, 'opacity')\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\n        var smooth = labelLineModel.get('smooth');\n        if (smooth && smooth === true) {\n            smooth = 0.4;\n        }\n        labelLine.setShape({\n            smooth: smooth\n        });\n    };\n\n    zrUtil.inherits(PiePiece, graphic.Group);\n\n\n    // Pie view\n    var Pie = require('../../view/Chart').extend({\n\n        type: 'pie',\n\n        init: function () {\n            var sectorGroup = new graphic.Group();\n            this._sectorGroup = sectorGroup;\n        },\n\n        render: function (seriesModel, ecModel, api, payload) {\n            if (payload && (payload.from === this.uid)) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n            var group = this.group;\n\n            var hasAnimation = ecModel.get('animation');\n            var isFirstRender = !oldData;\n            var animationType = seriesModel.get('animationType');\n\n            var onSectorClick = zrUtil.curry(\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n            );\n\n            var selectedMode = seriesModel.get('selectedMode');\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var piePiece = new PiePiece(data, idx);\n                    // Default expansion animation\n                    if (isFirstRender && animationType !== 'scale') {\n                        piePiece.eachChild(function (child) {\n                            child.stopAnimation(true);\n                        });\n                    }\n\n                    selectedMode && piePiece.on('click', onSectorClick);\n\n                    data.setItemGraphicEl(idx, piePiece);\n\n                    group.add(piePiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    piePiece.off('click');\n                    selectedMode && piePiece.on('click', onSectorClick);\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            if (\n                hasAnimation && isFirstRender && data.count() > 0\n                // Default expansion animation\n                && animationType !== 'scale'\n            ) {\n                var shape = data.getItemLayout(0);\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n                group.setClipPath(this._createClipPath(\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n                ));\n            }\n\n            this._data = data;\n        },\n\n        dispose: function () {},\n\n        _createClipPath: function (\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\n        ) {\n            var clipPath = new graphic.Sector({\n                shape: {\n                    cx: cx,\n                    cy: cy,\n                    r0: 0,\n                    r: r,\n                    startAngle: startAngle,\n                    endAngle: startAngle,\n                    clockwise: clockwise\n                }\n            });\n\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n                }\n            }, seriesModel, cb);\n\n            return clipPath;\n        },\n\n        /**\n         * @implement\n         */\n        containPoint: function (point, seriesModel) {\n            var data = seriesModel.getData();\n            var itemLayout = data.getItemLayout(0);\n            if (itemLayout) {\n                var dx = point[0] - itemLayout.cx;\n                var dy = point[1] - itemLayout.cy;\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                return radius <= itemLayout.r && radius >= itemLayout.r0;\n            }\n        }\n\n    });\n\n    module.exports = Pie;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieView.js\n// module id = 1160\n// module chunks = 0 2","\n\n    var numberUtil = require('../../util/number');\n    var parsePercent = numberUtil.parsePercent;\n    var labelLayout = require('./labelLayout');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var PI2 = Math.PI * 2;\n    var RADIAN = Math.PI / 180;\n\n    module.exports = function (seriesType, ecModel, api, payload) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var center = seriesModel.get('center');\n            var radius = seriesModel.get('radius');\n\n            if (!zrUtil.isArray(radius)) {\n                radius = [0, radius];\n            }\n            if (!zrUtil.isArray(center)) {\n                center = [center, center];\n            }\n\n            var width = api.getWidth();\n            var height = api.getHeight();\n            var size = Math.min(width, height);\n            var cx = parsePercent(center[0], width);\n            var cy = parsePercent(center[1], height);\n            var r0 = parsePercent(radius[0], size / 2);\n            var r = parsePercent(radius[1], size / 2);\n\n            var data = seriesModel.getData();\n\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\n            var validDataCount = 0;\n            data.each('value', function (value) {\n                !isNaN(value) && validDataCount++;\n            });\n\n            var sum = data.getSum('value');\n            // Sum may be 0\n            var unitRadian = Math.PI / (sum || validDataCount) * 2;\n\n            var clockwise = seriesModel.get('clockwise');\n\n            var roseType = seriesModel.get('roseType');\n            var stillShowZeroSum = seriesModel.get('stillShowZeroSum');\n\n            // [0...max]\n            var extent = data.getDataExtent('value');\n            extent[0] = 0;\n\n            // In the case some sector angle is smaller than minAngle\n            var restAngle = PI2;\n            var valueSumLargerThanMinAngle = 0;\n\n            var currentAngle = startAngle;\n            var dir = clockwise ? 1 : -1;\n\n            data.each('value', function (value, idx) {\n                var angle;\n                if (isNaN(value)) {\n                    data.setItemLayout(idx, {\n                        angle: NaN,\n                        startAngle: NaN,\n                        endAngle: NaN,\n                        clockwise: clockwise,\n                        cx: cx,\n                        cy: cy,\n                        r0: r0,\n                        r: roseType\n                            ? NaN\n                            : r\n                    });\n                    return;\n                }\n\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n                if (roseType !== 'area') {\n                    angle = (sum === 0 && stillShowZeroSum)\n                        ? unitRadian : (value * unitRadian);\n                }\n                else {\n                    angle = PI2 / validDataCount;\n                }\n\n                if (angle < minAngle) {\n                    angle = minAngle;\n                    restAngle -= minAngle;\n                }\n                else {\n                    valueSumLargerThanMinAngle += value;\n                }\n\n                var endAngle = currentAngle + dir * angle;\n                data.setItemLayout(idx, {\n                    angle: angle,\n                    startAngle: currentAngle,\n                    endAngle: endAngle,\n                    clockwise: clockwise,\n                    cx: cx,\n                    cy: cy,\n                    r0: r0,\n                    r: roseType\n                        ? numberUtil.linearMap(value, extent, [r0, r])\n                        : r\n                });\n\n                currentAngle = endAngle;\n            }, true);\n\n            // Some sector is constrained by minAngle\n            // Rest sectors needs recalculate angle\n            if (restAngle < PI2 && validDataCount) {\n                // Average the angle if rest angle is not enough after all angles is\n                // Constrained by minAngle\n                if (restAngle <= 1e-3) {\n                    var angle = PI2 / validDataCount;\n                    data.each('value', function (value, idx) {\n                        if (!isNaN(value)) {\n                            var layout = data.getItemLayout(idx);\n                            layout.angle = angle;\n                            layout.startAngle = startAngle + dir * idx * angle;\n                            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n                        }\n                    });\n                }\n                else {\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n                    currentAngle = startAngle;\n                    data.each('value', function (value, idx) {\n                        if (!isNaN(value)) {\n                            var layout = data.getItemLayout(idx);\n                            var angle = layout.angle === minAngle\n                                ? minAngle : value * unitRadian;\n                            layout.startAngle = currentAngle;\n                            layout.endAngle = currentAngle + dir * angle;\n                            currentAngle += dir * angle;\n                        }\n                    });\n                }\n            }\n\n            labelLayout(seriesModel, r, width, height);\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/pieLayout.js\n// module id = 1161\n// module chunks = 0 2","'use strict';\n// FIXME emphasis label position is not same with normal label position\n\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n        list.sort(function (a, b) {\n            return a.y - b.y;\n        });\n\n        // 压\n        function shiftDown(start, end, delta, dir) {\n            for (var j = start; j < end; j++) {\n                list[j].y += delta;\n                if (j > start\n                    && j + 1 < end\n                    && list[j + 1].y > list[j].y + list[j].height\n                ) {\n                    shiftUp(j, delta / 2);\n                    return;\n                }\n            }\n\n            shiftUp(end - 1, delta / 2);\n        }\n\n        // 弹\n        function shiftUp(end, delta) {\n            for (var j = end; j >= 0; j--) {\n                list[j].y -= delta;\n                if (j > 0\n                    && list[j].y > list[j - 1].y + list[j - 1].height\n                ) {\n                    break;\n                }\n            }\n        }\n\n        function changeX(list, isDownList, cx, cy, r, dir) {\n            var lastDeltaX = dir > 0\n                ? isDownList                // 右侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0                     // 上\n                : isDownList                // 左侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0;                    // 上\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                // Not change x for center label\n                if (list[i].position === 'center') {\n                    continue;\n                }\n                var deltaY = Math.abs(list[i].y - cy);\n                var length = list[i].len;\n                var length2 = list[i].len2;\n                var deltaX = (deltaY < r + length)\n                    ? Math.sqrt(\n                          (r + length + length2) * (r + length + length2)\n                          - deltaY * deltaY\n                      )\n                    : Math.abs(list[i].x - cx);\n                if (isDownList && deltaX >= lastDeltaX) {\n                    // 右下，左下\n                    deltaX = lastDeltaX - 10;\n                }\n                if (!isDownList && deltaX <= lastDeltaX) {\n                    // 右上，左上\n                    deltaX = lastDeltaX + 10;\n                }\n\n                list[i].x = cx + deltaX * dir;\n                lastDeltaX = deltaX;\n            }\n        }\n\n        var lastY = 0;\n        var delta;\n        var len = list.length;\n        var upList = [];\n        var downList = [];\n        for (var i = 0; i < len; i++) {\n            delta = list[i].y - lastY;\n            if (delta < 0) {\n                shiftDown(i, len, -delta, dir);\n            }\n            lastY = list[i].y + list[i].height;\n        }\n        if (viewHeight - lastY < 0) {\n            shiftUp(len - 1, lastY - viewHeight);\n        }\n        for (var i = 0; i < len; i++) {\n            if (list[i].y >= cy) {\n                downList.push(list[i]);\n            }\n            else {\n                upList.push(list[i]);\n            }\n        }\n        changeX(upList, false, cx, cy, r, dir);\n        changeX(downList, true, cx, cy, r, dir);\n    }\n\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n        var leftList = [];\n        var rightList = [];\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            if (labelLayoutList[i].x < cx) {\n                leftList.push(labelLayoutList[i]);\n            }\n            else {\n                rightList.push(labelLayoutList[i]);\n            }\n        }\n\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            var linePoints = labelLayoutList[i].linePoints;\n            if (linePoints) {\n                var dist = linePoints[1][0] - linePoints[2][0];\n                if (labelLayoutList[i].x < cx) {\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\n                }\n                else {\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\n                }\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n                linePoints[1][0] = linePoints[2][0] + dist;\n            }\n        }\n    }\n\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n        var data = seriesModel.getData();\n        var labelLayoutList = [];\n        var cx;\n        var cy;\n        var hasLabelRotate = false;\n\n        data.each(function (idx) {\n            var layout = data.getItemLayout(idx);\n\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            // Use position in normal or emphasis\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n            var labelLineLen = labelLineModel.get('length');\n            var labelLineLen2 = labelLineModel.get('length2');\n\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n            var dx = Math.cos(midAngle);\n            var dy = Math.sin(midAngle);\n\n            var textX;\n            var textY;\n            var linePoints;\n            var textAlign;\n\n            cx = layout.cx;\n            cy = layout.cy;\n\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n            if (labelPosition === 'center') {\n                textX = layout.cx;\n                textY = layout.cy;\n                textAlign = 'center';\n            }\n            else {\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\n                textX = x1 + dx * 3;\n                textY = y1 + dy * 3;\n\n                if (!isLabelInside) {\n                    // For roseType\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n                    var y3 = y2;\n\n                    textX = x3 + (dx < 0 ? -5 : 5);\n                    textY = y3;\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n                }\n\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n            }\n            var font = labelModel.getFont();\n\n            var labelRotate = labelModel.get('rotate')\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\n                        || data.getName(idx);\n            var textRect = textContain.getBoundingRect(\n                text, font, textAlign, 'top'\n            );\n            hasLabelRotate = !!labelRotate;\n            layout.label = {\n                x: textX,\n                y: textY,\n                position: labelPosition,\n                height: textRect.height,\n                len: labelLineLen,\n                len2: labelLineLen2,\n                linePoints: linePoints,\n                textAlign: textAlign,\n                verticalAlign: 'middle',\n                rotation: labelRotate,\n                inside: isLabelInside\n            };\n\n            // Not layout the inside label\n            if (!isLabelInside) {\n                labelLayoutList.push(layout.label);\n            }\n        });\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/labelLayout.js\n// module id = 1162\n// module chunks = 0 2","import React from 'react'\nimport echarts from 'echarts/lib/echarts' //必须\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/chart/pie'\nimport 'echarts/lib/component/toolbox'\n\nexport default class PieReact extends React.Component {\n  \n  constructor(props) {\n    super(props)\n    this.initPie = this.initPie.bind(this)\n  }\n  \n  initPie() {\n    const { option={} } = this.props //外部传入的data数据\n    let myChart = echarts.init(this.ID) //初始化echarts\n\n    //设置options\n    myChart.setOption(option)\n    window.onresize = function() {\n      myChart.resize()\n    }\n  }\n  \n  componentDidMount() {\n    this.initPie()\n  }\n  \n  componentDidUpdate() {\n    this.initPie()\n  }\n  \n  render() {\n    const { width=\"100%\", height = '300px' } = this.props\n    return <div ref={ID => this.ID = ID} style={{width, height}}></div>\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Echarts/PieReact.js","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            var Ctor = source.constructor;\n            if (source.constructor.from) {\n                result = Ctor.from(source);\n            }\n            else {\n                result = new Ctor(source.length);\n                for (var i = 0, len = source.length; i < len; i++) {\n                    result[i] = clone(source[i]);\n                }\n            }\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * Low performance.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    function retrieve2(value0, value1) {\n        return value0 != null\n            ? value0\n            : value1;\n    }\n\n    function retrieve3(value0, value1, value2) {\n        return value0 != null\n            ? value0\n            : value1 != null\n            ? value1\n            : value2;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     * @return {Array.<number>}\n     */\n    function normalizeCssArray(val) {\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        var len = val.length;\n        if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[HASH_MAP_PREFIX + key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        retrieve2: retrieve2,\n        retrieve3: retrieve3,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        normalizeCssArray: normalizeCssArray,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/util.js\n// module id = 972\n// module chunks = 0 1 2","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n    var backwardCompat = require('./preprocessor/backwardCompat');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender/lib/zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        var theme = zrUtil.clone(theme);\n        theme && backwardCompat(theme, true);\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = theme;\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // Avoid dispatch action before setOption. Especially in `connect`.\n        if (!this._model) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.7.2',\n        dependencies: {\n            zrender: '3.6.2'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(backwardCompat);\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.Axis = require('./coord/Axis');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = require('./helper');\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/echarts.js\n// module id = 973\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n    var Transformable = require('zrender/lib/mixin/Transformable');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var EMPTY_OBJ = {};\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    var subPixelOptimize = graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                // See comment in `doSingleEnterHover`.\n                if (hoverStyle[name] != null) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            var style = el.style;\n            var insideRollbackOpt = style.insideRollbackOpt;\n\n            // Consider case: only `position: 'top'` is set on emphasis, then text\n            // color should be returned to `autoColor`, rather than remain '#fff'.\n            // So we should rollback then apply again after style merging.\n            insideRollbackOpt && rollbackInsideStyle(style);\n\n            // styles can be:\n            // {\n            //     label: {\n            //         normal: {\n            //             show: false,\n            //             position: 'outside',\n            //             fontSize: 18\n            //         },\n            //         emphasis: {\n            //             show: true\n            //         }\n            //     }\n            // },\n            // where properties of `emphasis` may not appear in `normal`. We previously use\n            // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n            // But consider rich text and setOption in merge mode, it is impossible to cover\n            // all properties in merge. So we use merge mode when setting style here, where\n            // only properties that is not `null/undefined` can be set. The disadventage:\n            // null/undefined can not be used to remove style any more in `emphasis`.\n            style.extendFrom(el.__hoverStl);\n\n            // Do not save `insideRollback`.\n            if (insideRollbackOpt) {\n                applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt);\n\n                // textFill may be rollbacked to null.\n                if (style.textFill == null) {\n                    style.textFill = insideRollbackOpt.autoColor;\n                }\n            }\n\n            el.dirty(false);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            // Consider null/undefined value, should use\n            // `setStyle` but not `extendFrom(stl, true)`.\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * @param {Object|module:zrender/graphic/Style} normalStyle\n     * @param {Object} emphasisStyle\n     * @param {module:echarts/model/Model} normalModel\n     * @param {module:echarts/model/Model} emphasisModel\n     * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n     * @param {Object} [opt.defaultText]\n     * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n     *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n     *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n     *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n     * @param {Object} [normalSpecified]\n     * @param {Object} [emphasisSpecified]\n     */\n    graphic.setLabelStyle = function (\n        normalStyle, emphasisStyle,\n        normalModel, emphasisModel,\n        opt,\n        normalSpecified, emphasisSpecified\n    ) {\n        opt = opt || EMPTY_OBJ;\n        var labelFetcher = opt.labelFetcher;\n        var labelDataIndex = opt.labelDataIndex;\n        var labelDimIndex = opt.labelDimIndex;\n\n        // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n        // is not supported util someone requests.\n\n        var showNormal = normalModel.getShallow('show');\n        var showEmphasis = emphasisModel.getShallow('show');\n\n        // Consider performance, only fetch label when necessary.\n        // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n        // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n        var baseText = (showNormal || showEmphasis)\n            ? zrUtil.retrieve2(\n                labelFetcher\n                    ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex)\n                    : null,\n                opt.defaultText\n            )\n            : null;\n        var normalStyleText = showNormal ? baseText : null;\n        var emphasisStyleText = showEmphasis\n            ? zrUtil.retrieve2(\n                labelFetcher\n                    ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex)\n                    : null,\n                baseText\n            )\n            : null;\n\n        // Optimize: If style.text is null, text will not be drawn.\n        if (normalStyleText != null || emphasisStyleText != null) {\n            // Always set `textStyle` even if `normalStyle.text` is null, because default\n            // values have to be set on `normalStyle`.\n            // If we set default values on `emphasisStyle`, consider case:\n            // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n            // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n            // Then the 'red' will not work on emphasis.\n            setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n            setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n        }\n\n        normalStyle.text = normalStyleText;\n        emphasisStyle.text = emphasisStyleText;\n    };\n\n    /**\n     * Set basic textStyle properties.\n     * @param {Object|module:zrender/graphic/Style} textStyle\n     * @param {module:echarts/model/Model} model\n     * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n     * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n     * @param {boolean} [isEmphasis]\n     */\n    var setTextStyle = graphic.setTextStyle = function (\n        textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis\n    ) {\n        setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n        specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n        return textStyle;\n    };\n\n    /**\n     * Set text option in the style.\n     * @deprecated\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string|boolean} defaultColor Default text color.\n     *        If set as false, it will be processed as a emphasis style.\n     */\n    graphic.setText = function (textStyle, labelModel, defaultColor) {\n        var opt = {isRectText: true};\n        var isEmphasis;\n\n        if (defaultColor === false) {\n            isEmphasis = true;\n        }\n        else {\n            // Support setting color as 'auto' to get visual color.\n            opt.autoColor = defaultColor;\n        }\n        setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n    };\n\n    /**\n     * {\n     *      disableBox: boolean, Whether diable drawing box of block (outer most).\n     *      isRectText: boolean,\n     *      autoColor: string, specify a color when color is 'auto',\n     *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n     *              If autoColor specified, it is used as default textFill.\n     *      useInsideStyle:\n     *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n     *                  if `textFill` is not specified.\n     *              `false`: Do not use inside style.\n     *              `null/undefined`: use inside style if `isRectText` is true and\n     *                  `textFill` is not specified and textPosition contains `'inside'`.\n     *      forceRich: boolean\n     * }\n     */\n    function setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n        // Consider there will be abnormal when merge hover style to normal style if given default value.\n        opt = opt || EMPTY_OBJ;\n\n        if (opt.isRectText) {\n            var textPosition = textStyleModel.getShallow('position')\n                || (isEmphasis ? null : 'inside');\n            // 'outside' is not a valid zr textPostion value, but used\n            // in bar series, and magric type should be considered.\n            textPosition === 'outside' && (textPosition = 'top');\n            textStyle.textPosition = textPosition;\n            textStyle.textOffset = textStyleModel.getShallow('offset');\n            var labelRotate = textStyleModel.getShallow('rotate');\n            labelRotate != null && (labelRotate *= Math.PI / 180);\n            textStyle.textRotation = labelRotate;\n            textStyle.textDistance = zrUtil.retrieve2(\n                textStyleModel.getShallow('distance'), isEmphasis ? null : 5\n            );\n        }\n\n        var ecModel = textStyleModel.ecModel;\n        var globalTextStyle = ecModel && ecModel.option.textStyle;\n\n        // Consider case:\n        // {\n        //     data: [{\n        //         value: 12,\n        //         label: {\n        //             normal: {\n        //                 rich: {\n        //                     // no 'a' here but using parent 'a'.\n        //                 }\n        //             }\n        //         }\n        //     }],\n        //     rich: {\n        //         a: { ... }\n        //     }\n        // }\n        var richItemNames = getRichItemNames(textStyleModel);\n        var richResult;\n        if (richItemNames) {\n            richResult = {};\n            for (var name in richItemNames) {\n                if (richItemNames.hasOwnProperty(name)) {\n                    // Cascade is supported in rich.\n                    var richTextStyle = textStyleModel.getModel(['rich', name]);\n                    // In rich, never `disableBox`.\n                    setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n                }\n            }\n        }\n        textStyle.rich = richResult;\n\n        setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n        if (opt.forceRich && !opt.textStyle) {\n            opt.textStyle = {};\n        }\n\n        return textStyle;\n    }\n\n    // Consider case:\n    // {\n    //     data: [{\n    //         value: 12,\n    //         label: {\n    //             normal: {\n    //                 rich: {\n    //                     // no 'a' here but using parent 'a'.\n    //                 }\n    //             }\n    //         }\n    //     }],\n    //     rich: {\n    //         a: { ... }\n    //     }\n    // }\n    function getRichItemNames(textStyleModel) {\n        // Use object to remove duplicated names.\n        var richItemNameMap;\n        while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n            var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n            if (rich) {\n                richItemNameMap = richItemNameMap || {};\n                for (var name in rich) {\n                    if (rich.hasOwnProperty(name)) {\n                        richItemNameMap[name] = 1;\n                    }\n                }\n            }\n            textStyleModel = textStyleModel.parentModel;\n        }\n        return richItemNameMap;\n    }\n\n    function setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n        // In merge mode, default value should not be given.\n        globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n\n        textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt)\n            || globalTextStyle.color;\n        textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt)\n            || globalTextStyle.textBorderColor;\n        textStyle.textStrokeWidth = zrUtil.retrieve2(\n            textStyleModel.getShallow('textBorderWidth'),\n            globalTextStyle.textBorderWidth\n        );\n\n        if (!isEmphasis) {\n            if (isBlock) {\n                // Always set `insideRollback`, for clearing previous.\n                var originalTextPosition = textStyle.textPosition;\n                textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt);\n                // Save original textPosition, because style.textPosition will be repalced by\n                // real location (like [10, 30]) in zrender.\n                textStyle.insideOriginalTextPosition = originalTextPosition;\n                textStyle.insideRollbackOpt = opt;\n            }\n\n            // Set default finally.\n            if (textStyle.textFill == null) {\n                textStyle.textFill = opt.autoColor;\n            }\n        }\n\n        // Do not use `getFont` here, because merge should be supported, where\n        // part of these properties may be changed in emphasis style, and the\n        // others should remain their original value got from normal style.\n        textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n        textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n        textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n        textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n\n        textStyle.textAlign = textStyleModel.getShallow('align');\n        textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign')\n            || textStyleModel.getShallow('baseline');\n\n        textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n        textStyle.textWidth = textStyleModel.getShallow('width');\n        textStyle.textHeight = textStyleModel.getShallow('height');\n        textStyle.textTag = textStyleModel.getShallow('tag');\n\n        if (!isBlock || !opt.disableBox) {\n            textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n            textStyle.textPadding = textStyleModel.getShallow('padding');\n            textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n            textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n            textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n\n            textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n            textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n            textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n            textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n        }\n\n        textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor')\n            || globalTextStyle.textShadowColor;\n        textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur')\n            || globalTextStyle.textShadowBlur;\n        textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX')\n            || globalTextStyle.textShadowOffsetX;\n        textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY')\n            || globalTextStyle.textShadowOffsetY;\n    }\n\n    function getAutoColor(color, opt) {\n        return color !== 'auto' ? color : (opt && opt.autoColor) ? opt.autoColor : null;\n    }\n\n    function applyInsideStyle(textStyle, textPosition, opt) {\n        var useInsideStyle = opt.useInsideStyle;\n        var insideRollback;\n\n        if (textStyle.textFill == null\n            && useInsideStyle !== false\n            && (useInsideStyle === true\n                || (opt.isRectText\n                    && textPosition\n                    // textPosition can be [10, 30]\n                    && typeof textPosition === 'string'\n                    && textPosition.indexOf('inside') >= 0\n                )\n            )\n        ) {\n            insideRollback = {\n                textFill: null,\n                textStroke: textStyle.textStroke,\n                textStrokeWidth: textStyle.textStrokeWidth\n            };\n            textStyle.textFill = '#fff';\n            // Consider text with #fff overflow its container.\n            if (textStyle.textStroke == null) {\n                textStyle.textStroke = opt.autoColor;\n                textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n            }\n        }\n\n        return insideRollback;\n    }\n\n    function rollbackInsideStyle(style) {\n        var insideRollback = style.insideRollback;\n        if (insideRollback) {\n            style.textFill = insideRollback.textFill;\n            style.textStroke = insideRollback.textStroke;\n            style.textStrokeWidth = insideRollback.textStrokeWidth;\n        }\n    }\n\n    graphic.getFont = function (opt, ecModel) {\n        // ecModel or default text style model.\n        var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    /**\n     * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n     * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n     * @param {Object} [rect] {x, y, width, height}\n     * @return {module:zrender/Element} Icon path or image element.\n     */\n    graphic.createIcon = function (iconStr, opt, rect) {\n        opt = zrUtil.extend({rectHover: true}, opt);\n        var style = opt.style = {strokeNoScale: true};\n        rect = rect || {x: -1, y: -1, width: 2, height: 2};\n\n        if (iconStr) {\n            return iconStr.indexOf('image://') === 0\n                ? (\n                    style.image = iconStr.slice(8),\n                    zrUtil.defaults(style, rect),\n                    new graphic.Image(opt)\n                )\n                : (\n                    graphic.makePath(\n                        iconStr.replace('path://', ''),\n                        opt,\n                        rect,\n                        'center'\n                    )\n                );\n        }\n\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/graphic.js\n// module id = 974\n// module chunks = 0 1 2","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * Consider DST, it is incorrect to provide a method `getTimezoneOffset`\n     * without time specified. So this method is removed.\n     *\n     * @return {number} in minutes\n     */\n    // number.getTimezoneOffset = function () {\n    //     return (new Date()).getTimezoneOffset();\n    // };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            // Use local time when no timezone offset specifed.\n            if (!match[8]) {\n                // match[n] can only be string or undefined.\n                // But take care of '12' + 1 => '121'.\n                return new Date(\n                    +match[1],\n                    +(match[2] || 1) - 1,\n                    +match[3] || 1,\n                    +match[4] || 0,\n                    +(match[5] || 0),\n                    +match[6] || 0,\n                    +match[7] || 0\n                );\n            }\n            // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n            // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n            // For example, system timezone is set as \"Time Zone: America/Toronto\",\n            // then these code will get different result:\n            // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n            // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n            // So we should not use `new Date`, but use `Date.UTC`.\n            else {\n                var hour = +match[4] || 0;\n                if (match[8].toUpperCase() !== 'Z') {\n                    hour -= match[8].slice(0, 3);\n                }\n                return new Date(Date.UTC(\n                    +match[1],\n                    +(match[2] || 1) - 1,\n                    +match[3] || 1,\n                    hour,\n                    +(match[5] || 0),\n                    +match[6] || 0,\n                    +match[7] || 0\n                ));\n            }\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/number.js\n// module id = 975\n// module chunks = 0 1 2","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             fontSize: 18\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            for (var i = 0, len = subOpts.length; i < len; i++) {\n                var subOptName = subOpts[i];\n                if (!emphasisOpt.hasOwnProperty(subOptName)\n                    && normalOpt.hasOwnProperty(subOptName)\n                ) {\n                    emphasisOpt[subOptName] = normalOpt[subOptName];\n                }\n            }\n        }\n    };\n\n    modelUtil.TEXT_STYLE_OPTIONS = [\n        'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n        'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth',\n        'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline',\n        'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY',\n        'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY',\n        'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding'\n    ];\n\n    // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n    //     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n    //     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n    //     // FIXME: deprecated, check and remove it.\n    //     'textStyle'\n    // ]);\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/model.js\n// module id = 976\n// module chunks = 0 1 2","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/vector.js\n// module id = 977\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    formatUtil.normalizeCssArray = zrUtil.normalizeCssArray;\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .replace('M', M)\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    formatUtil.getTextRect = textContain.getBoundingRect;\n\n    module.exports = formatUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/format.js\n// module id = 978\n// module chunks = 0 1 2","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/env.js\n// module id = 979\n// module chunks = 0 1 2","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Model.js\n// module id = 980\n// module chunks = 0 1 2","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Path.js\n// module id = 981\n// module chunks = 0 1 2","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                // FIXME compare before adding gap?\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    // FIXME: consider rect.y is not `0`?\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect {width, height}\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        if (aspect != null) {\n            // If width and height are not given\n            // 1. Graph should not exceeds the container\n            // 2. Aspect must be keeped\n            // 3. Graph should take the space as more as possible\n            // FIXME\n            // Margin is not considered, because there is no case that both\n            // using margin and aspect so far.\n            if (isNaN(width) && isNaN(height)) {\n                if (aspect > containerWidth / containerHeight) {\n                    width = containerWidth * 0.8;\n                }\n                else {\n                    height = containerHeight * 0.8;\n                }\n            }\n\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - horizontalMargin - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - verticalMargin - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n     * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        // The real width and height can not be specified but calculated by the given el.\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n     *  that width (or height) should not be calculated by left and right (or top and bottom).\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/layout.js\n// module id = 982\n// module chunks = 0 1 2","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/BoundingRect.js\n// module id = 983\n// module chunks = 0 1 2","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Component.js\n// module id = 984\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/clazz.js\n// module id = 985\n// module chunks = 0 1 2","\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var imageHelper = require('../graphic/helper/image');\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n\n    var TEXT_CACHE_MAX = 5000;\n    var STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\n    var DEFAULT_FONT = '12px sans-serif';\n\n    var retrieve2 = util.retrieve2;\n    var retrieve3 = util.retrieve3;\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {number} width\n     */\n    function getTextWidth(text, font) {\n        font = font || DEFAULT_FONT;\n        var key = text + ':' + font;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // textContain.measureText may be overrided in SVG or VML\n            width = Math.max(textContain.measureText(textLines[i], font).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {string} [textAlign='left']\n     * @param {string} [textVerticalAlign='top']\n     * @param {Array.<number>} [textPadding]\n     * @param {Object} [rich]\n     * @param {Object} [truncate]\n     * @return {Object} {x, y, width, height, lineHeight}\n     */\n    function getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        return rich\n            ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate)\n            : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n    }\n\n    function getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n        var contentBlock = parsePlainText(text, font, textPadding, truncate);\n        var outerWidth = getTextWidth(text, font);\n        if (textPadding) {\n            outerWidth += textPadding[1] + textPadding[3];\n        }\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n        rect.lineHeight = contentBlock.lineHeight;\n\n        return rect;\n    }\n\n    function getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        var contentBlock = parseRichText(text, {\n            rich: rich,\n            truncate: truncate,\n            font: font,\n            textAlign: textAlign,\n            textPadding: textPadding\n        });\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        return new BoundingRect(x, y, outerWidth, outerHeight);\n    }\n\n    /**\n     * @public\n     * @param {number} x\n     * @param {number} width\n     * @param {string} [textAlign='left']\n     * @return {number} Adjusted x.\n     */\n    function adjustTextX(x, width, textAlign) {\n        // FIXME Right to left language\n        if (textAlign === 'right') {\n            x -= width;\n        }\n        else if (textAlign === 'center') {\n            x -= width / 2;\n        }\n        return x;\n    }\n\n    /**\n     * @public\n     * @param {number} y\n     * @param {number} height\n     * @param {string} [textVerticalAlign='top']\n     * @return {number} Adjusted y.\n     */\n    function adjustTextY(y, height, textVerticalAlign) {\n        if (textVerticalAlign === 'middle') {\n            y -= height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y -= height;\n        }\n        return y;\n    }\n\n    /**\n     * @public\n     * @param {stirng} textPosition\n     * @param {Object} rect {x, y, width, height}\n     * @param {number} distance\n     * @return {Object} {x, y, textAlign, textVerticalAlign}\n     */\n    function adjustTextPositionOnRect(textPosition, rect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n        var halfHeight = height / 2;\n\n        var textAlign = 'left';\n        var textVerticalAlign = 'top';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - distance;\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - distance;\n                textAlign = 'right';\n                textVerticalAlign = 'bottom';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @public\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} font\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, font, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        var textLines = (text + '').split('\\n');\n        options = prepareTruncateOptions(containerWidth, font, ellipsis, options);\n\n        // FIXME\n        // It is not appropriate that every line has '...' when truncate multiple lines.\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            textLines[i] = truncateSingleLine(textLines[i], options);\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n        options = util.extend({}, options);\n\n        options.font = font;\n        var ellipsis = retrieve2(ellipsis, '...');\n        options.maxIterations = retrieve2(options.maxIterations, 2);\n        var minChar = options.minChar = retrieve2(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        options.cnCharWidth = getTextWidth('国', font);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = options.ascCharWidth = getTextWidth('a', font);\n        options.placeholder = retrieve2(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        options.ellipsis = ellipsis;\n        options.ellipsisWidth = ellipsisWidth;\n        options.contentWidth = contentWidth;\n        options.containerWidth = containerWidth;\n\n        return options;\n    }\n\n    function truncateSingleLine(textLine, options) {\n        var containerWidth = options.containerWidth;\n        var font = options.font;\n        var contentWidth = options.contentWidth;\n\n        if (!containerWidth) {\n            return '';\n        }\n\n        var lineWidth = getTextWidth(textLine, font);\n\n        if (lineWidth <= containerWidth) {\n            return textLine;\n        }\n\n        for (var j = 0;; j++) {\n            if (lineWidth <= contentWidth || j >= options.maxIterations) {\n                textLine += options.ellipsis;\n                break;\n            }\n\n            var subLength = j === 0\n                ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth)\n                : lineWidth > 0\n                ? Math.floor(textLine.length * contentWidth / lineWidth)\n                : 0;\n\n            textLine = textLine.substr(0, subLength);\n            lineWidth = getTextWidth(textLine, font);\n        }\n\n        if (textLine === '') {\n            textLine = options.placeholder;\n        }\n\n        return textLine;\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    /**\n     * @public\n     * @param {string} font\n     * @return {number} line height\n     */\n    function getLineHeight(font) {\n        // FIXME A rough approach.\n        return getTextWidth('国', font);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {Object} width\n     */\n    function measureText(text, font) {\n        var ctx = util.getContext();\n        ctx.font = font || DEFAULT_FONT;\n        return ctx.measureText(text);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {Object} [truncate]\n     * @return {Object} block: {lineHeight, lines, height, outerHeight}\n     *  Notice: for performance, do not calculate outerWidth util needed.\n     */\n    function parsePlainText(text, font, padding, truncate) {\n        text != null && (text += '');\n\n        var lineHeight = getLineHeight(font);\n        var lines = text ? text.split('\\n') : [];\n        var height = lines.length * lineHeight;\n        var outerHeight = height;\n\n        if (padding) {\n            outerHeight += padding[0] + padding[2];\n        }\n\n        if (text && truncate) {\n            var truncOuterHeight = truncate.outerHeight;\n            var truncOuterWidth = truncate.outerWidth;\n            if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n                text = '';\n                lines = [];\n            }\n            else if (truncOuterWidth != null) {\n                var options = prepareTruncateOptions(\n                    truncOuterWidth - (padding ? padding[1] + padding[3] : 0),\n                    font,\n                    truncate.ellipsis,\n                    {minChar: truncate.minChar, placeholder: truncate.placeholder}\n                );\n\n                // FIXME\n                // It is not appropriate that every line has '...' when truncate multiple lines.\n                for (var i = 0, len = lines.length; i < len; i++) {\n                    lines[i] = truncateSingleLine(lines[i], options);\n                }\n            }\n        }\n\n        return {\n            lines: lines,\n            height: height,\n            outerHeight: outerHeight,\n            lineHeight: lineHeight\n        };\n    }\n\n    /**\n     * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n     * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n     *\n     * @public\n     * @param {string} text\n     * @param {Object} style\n     * @return {Object} block\n     * {\n     *      width,\n     *      height,\n     *      lines: [{\n     *          lineHeight,\n     *          width,\n     *          tokens: [[{\n     *              styleName,\n     *              text,\n     *              width,      // include textPadding\n     *              height,     // include textPadding\n     *              textWidth, // pure text width\n     *              textHeight, // pure text height\n     *              lineHeihgt,\n     *              font,\n     *              textAlign,\n     *              textVerticalAlign\n     *          }], [...], ...]\n     *      }, ...]\n     * }\n     * If styleName is undefined, it is plain text.\n     */\n    function parseRichText(text, style) {\n        var contentBlock = {lines: [], width: 0, height: 0};\n\n        text != null && (text += '');\n        if (!text) {\n            return contentBlock;\n        }\n\n        var lastIndex = STYLE_REG.lastIndex = 0;\n        var result;\n        while ((result = STYLE_REG.exec(text)) != null)  {\n            var matchedIndex = result.index;\n            if (matchedIndex > lastIndex) {\n                pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n            }\n            pushTokens(contentBlock, result[2], result[1]);\n            lastIndex = STYLE_REG.lastIndex;\n        }\n\n        if (lastIndex < text.length) {\n            pushTokens(contentBlock, text.substring(lastIndex, text.length));\n        }\n\n        var lines = contentBlock.lines;\n        var contentHeight = 0;\n        var contentWidth = 0;\n        // For `textWidth: 100%`\n        var pendingList = [];\n\n        var stlPadding = style.textPadding;\n\n        var truncate = style.truncate;\n        var truncateWidth = truncate && truncate.outerWidth;\n        var truncateHeight = truncate && truncate.outerHeight;\n        if (stlPadding) {\n            truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n            truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n        }\n\n        // Calculate layout info of tokens.\n        for (var i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var lineHeight = 0;\n            var lineWidth = 0;\n\n            for (var j = 0; j < line.tokens.length; j++) {\n                var token = line.tokens[j];\n                var tokenStyle = token.styleName && style.rich[token.styleName] || {};\n                // textPadding should not inherit from style.\n                var textPadding = token.textPadding = tokenStyle.textPadding;\n\n                // textFont has been asigned to font by `normalizeStyle`.\n                var font = token.font = tokenStyle.font || style.font;\n\n                // textHeight can be used when textVerticalAlign is specified in token.\n                var tokenHeight = token.textHeight = retrieve2(\n                    // textHeight should not be inherited, consider it can be specified\n                    // as box height of the block.\n                    tokenStyle.textHeight, textContain.getLineHeight(font)\n                );\n                textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n                token.height = tokenHeight;\n                token.lineHeight = retrieve3(\n                    tokenStyle.textLineHeight, style.textLineHeight, tokenHeight\n                );\n\n                token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n                token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n                if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n                    return {lines: [], width: 0, height: 0};\n                }\n\n                token.textWidth = textContain.getWidth(token.text, font);\n                var tokenWidth = tokenStyle.textWidth;\n                var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto';\n\n                // Percent width, can be `100%`, can be used in drawing separate\n                // line when box width is needed to be auto.\n                if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n                    token.percentWidth = tokenWidth;\n                    pendingList.push(token);\n                    tokenWidth = 0;\n                    // Do not truncate in this case, because there is no user case\n                    // and it is too complicated.\n                }\n                else {\n                    if (tokenWidthNotSpecified) {\n                        tokenWidth = token.textWidth;\n\n                        // FIXME: If image is not loaded and textWidth is not specified, calling\n                        // `getBoundingRect()` will not get correct result.\n                        var textBackgroundColor = tokenStyle.textBackgroundColor;\n                        var bgImg = textBackgroundColor && textBackgroundColor.image;\n\n                        // Use cases:\n                        // (1) If image is not loaded, it will be loaded at render phase and call\n                        // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n                        // image, and then the right size will be calculated here at the next tick.\n                        // See `graphic/helper/text.js`.\n                        // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n                        // use `imageHelper.findExistImage` to find cached image.\n                        // `imageHelper.findExistImage` will always be called here before\n                        // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n                        // which ensures that image will not be rendered before correct size calcualted.\n                        if (bgImg) {\n                            bgImg = imageHelper.findExistImage(bgImg);\n                            if (imageHelper.isImageReady(bgImg)) {\n                                tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n                            }\n                        }\n                    }\n\n                    var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n                    tokenWidth += paddingW;\n\n                    var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n                    if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n                        if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n                            token.text = '';\n                            token.textWidth = tokenWidth = 0;\n                        }\n                        else {\n                            token.text = truncateText(\n                                token.text, remianTruncWidth - paddingW, font, truncate.ellipsis,\n                                {minChar: truncate.minChar}\n                            );\n                            token.textWidth = textContain.getWidth(token.text, font);\n                            tokenWidth = token.textWidth + paddingW;\n                        }\n                    }\n                }\n\n                lineWidth += (token.width = tokenWidth);\n                tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n            }\n\n            line.width = lineWidth;\n            line.lineHeight = lineHeight;\n            contentHeight += lineHeight;\n            contentWidth = Math.max(contentWidth, lineWidth);\n        }\n\n        contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n        contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n        if (stlPadding) {\n            contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n            contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n        }\n\n        for (var i = 0; i < pendingList.length; i++) {\n            var token = pendingList[i];\n            var percentWidth = token.percentWidth;\n            // Should not base on outerWidth, because token can not be placed out of padding.\n            token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n        }\n\n        return contentBlock;\n    }\n\n    function pushTokens(block, str, styleName) {\n        var isEmptyStr = str === '';\n        var strs = str.split('\\n');\n        var lines = block.lines;\n\n        for (var i = 0; i < strs.length; i++) {\n            var text = strs[i];\n            var token = {\n                styleName: styleName,\n                text: text,\n                isLineHolder: !text && !isEmptyStr\n            };\n\n            // The first token should be appended to the last line.\n            if (!i) {\n                var tokens = (lines[lines.length - 1] || (lines[0] = {tokens: []})).tokens;\n\n                // Consider cases:\n                // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n                // (which is a placeholder) should be replaced by new token.\n                // (2) A image backage, where token likes {a|}.\n                // (3) A redundant '' will affect textAlign in line.\n                // (4) tokens with the same tplName should not be merged, because\n                // they should be displayed in different box (with border and padding).\n                var tokensLen = tokens.length;\n                (tokensLen === 1 && tokens[0].isLineHolder)\n                    ? (tokens[0] = token)\n                    // Consider text is '', only insert when it is the \"lineHolder\" or\n                    // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n                    : ((text || !tokensLen || isEmptyStr) && tokens.push(token));\n            }\n            // Other tokens always start a new line.\n            else {\n                // If there is '', insert it as a placeholder.\n                lines.push({tokens: [token]});\n            }\n        }\n    }\n\n    function makeFont(style) {\n        // FIXME in node-canvas fontWeight is before fontStyle\n        // Use `fontSize` `fontFamily` to check whether font properties are defined.\n        return (style.fontSize || style.fontFamily) && [\n            style.fontStyle,\n            style.fontWeight,\n            (style.fontSize || 12) + 'px',\n            // If font properties are defined, `fontFamily` should not be ignored.\n            style.fontFamily || 'sans-serif'\n        ].join(' ') || style.textFont || style.font;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: measureText,\n\n        getLineHeight: getLineHeight,\n\n        parsePlainText: parsePlainText,\n\n        parseRichText: parseRichText,\n\n        adjustTextX: adjustTextX,\n\n        adjustTextY: adjustTextY,\n\n        makeFont: makeFont,\n\n        DEFAULT_FONT: DEFAULT_FONT\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/text.js\n// module id = 986\n// module chunks = 0 1 2","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/matrix.js\n// module id = 987\n// module chunks = 0 1 2","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string|Object} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/List.js\n// module id = 988\n// module chunks = 0 1 2","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        else if (typeof min === 'function') {\n            min = min({\n                min: originalExtent[0],\n                max: originalExtent[1]\n            });\n        }\n\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n        else if (typeof max === 'function') {\n            max = max({\n                min: originalExtent[0],\n                max: originalExtent[1]\n            });\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        var scaleType = scale.type;\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('minInterval') : null,\n            maxInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('maxInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisHelper.js\n// module id = 989\n// module chunks = 0 1 2","'use strict';\n\n\n    var features = {};\n\n    module.exports = {\n        register: function (name, ctor) {\n            features[name] = ctor;\n        },\n\n        get: function (name) {\n            return features[name];\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/toolbox/featureManager.js\n// module id = 990\n// module chunks = 0 1 2","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    var MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n        // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n        // If e.which has been defined, if may be readonly,\n        // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n        var button = e.button;\n        if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n            e.which = (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    function notLeftMouse(e) {\n        // If e.which is undefined, considered as left mouse event.\n        return e.which > 1;\n    }\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n        notLeftMouse: notLeftMouse,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/event.js\n// module id = 991\n// module chunks = 0 1 2","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/curve.js\n// module id = 992\n// module chunks = 0 1 2","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Eventful.js\n// module id = 993\n// module chunks = 0 1 2","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerpNumber(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than lerp methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastLerp(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function lerp(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastLerp: fastLerp,\n        fastMapToColor: fastLerp, // Deprecated\n        lerp: lerp,\n        mapToColor: lerp, // Deprecated\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/color.js\n// module id = 994\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            // Backward compat: using subType on theme.\n            // But if name duplicate between series subType\n            // (for example: parallel) add component mainType,\n            // add suffix 'Series'.\n            var themeSubType = this.subType;\n            if (ComponentModel.hasClass(themeSubType)) {\n                themeSubType += 'Series';\n            }\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `show`\n            modelUtil.defaultEmphasis(option.label, ['show']);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                var props = ['show'];\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, props);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Series.js\n// module id = 995\n// module chunks = 0 1 2","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            // `isFinit('')` get `true`.\n            if (value != null && isFinite(value) && value !== '') {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/completeDimensions.js\n// module id = 996\n// module chunks = 0 1 2","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/symbol.js\n// module id = 997\n// module chunks = 0 1 2","\n\n    module.exports = {\n        toolbox: {\n            brush: {\n                title: {\n                    rect: '矩形选择',\n                    polygon: '圈选',\n                    lineX: '横向选择',\n                    lineY: '纵向选择',\n                    keep: '保持选择',\n                    clear: '清除选择'\n                }\n            },\n            dataView: {\n                title: '数据视图',\n                lang: ['数据视图', '关闭', '刷新']\n            },\n            dataZoom: {\n                title: {\n                    zoom: '区域缩放',\n                    back: '区域缩放还原'\n                }\n            },\n            magicType: {\n                title: {\n                    line: '切换为折线图',\n                    bar: '切换为柱状图',\n                    stack: '切换为堆叠',\n                    tiled: '切换为平铺'\n                }\n            },\n            restore: {\n                title: '还原'\n            },\n            saveAsImage: {\n                title: '保存为图片',\n                lang: ['右键另存为图片']\n            }\n        }\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/lang.js\n// module id = 998\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/CoordinateSystem.js\n// module id = 999\n// module chunks = 0 1 2"],"sourceRoot":""}